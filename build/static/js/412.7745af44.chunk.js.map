{"version":3,"file":"static/js/412.7745af44.chunk.js","mappings":"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","sources":["Views/PreLogin/ForgotPassword.js","../node_modules/@mui/icons-material/esm/Visibility.js","../node_modules/@mui/icons-material/esm/VisibilityOff.js","../node_modules/@mui/system/esm/Container/createContainer.js","../node_modules/@mui/material/Container/Container.js"],"sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  Container,\r\n  FormControlLabel,\r\n  Grid,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  IconButton,\r\n  InputAdornment,\r\n} from \"@mui/material\";\r\nimport { ValidationEngine, ErrorMessages } from \"Utils/helperFunctions\";\r\nconst validationSchema = {\r\n  code: [\r\n    {\r\n      message: \"Please enter code\",\r\n      type: ValidationEngine.type.MANDATORY,\r\n    },\r\n    {\r\n        message: \"Please valid code\",\r\n        type: ValidationEngine.type.REGEX,\r\n        regex: ValidationEngine.NUMBER_ONLY_REGEX,\r\n      },\r\n  ],\r\n  email: [\r\n    {\r\n      message: \"Please enter Email\",\r\n      type: ValidationEngine.type.MANDATORY,\r\n    },\r\n    {\r\n      message: \"Please valid Email\",\r\n      type: ValidationEngine.type.REGEX,\r\n      regex: ValidationEngine.EMAIL_REGEX,\r\n    },\r\n  ],\r\n  newpassword: [\r\n    {\r\n      message: \"Please enter Password\",\r\n      type: ValidationEngine.type.MANDATORY,\r\n    },\r\n  ],\r\n  confirmNewpassword: [\r\n    {\r\n      message: \"Please enter Password\",\r\n      type: ValidationEngine.type.MANDATORY,\r\n    },\r\n  ],\r\n};\r\nconst SCREEN_MODE = {\r\n  ENTER_EMAIL: 0,\r\n  VERIFY_EMAIL: 1,\r\n  CREATE_NEW_PASSWORD_SCREEN: 2,\r\n  PASSWORD_CHANGED_SCREEN: 3,\r\n};\r\nclass ForgotPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      screenMode: SCREEN_MODE.ENTER_EMAIL,\r\n      email: \"\",\r\n      code: \"\",\r\n      newpassword: \"\",\r\n      confirmNewpassword: \"\",\r\n      newpasswordEye: false,\r\n      confirmNewPasswordEye: false,\r\n      isSubmitted: false,\r\n    };\r\n  }\r\n  handleChange = (event) => {\r\n    const { name, value, type, checked } = event.target;\r\n    const val = type === \"checkbox\" ? checked : value;\r\n    this.setState({ [name]: val });\r\n  };\r\n\r\n  validateForm = () => {\r\n    const { email, code, newpassword, confirmNewpassword, screenMode } =\r\n      this.state;\r\n    if (screenMode == 0) {\r\n      const error = ValidationEngine.validate(validationSchema, {\r\n        email,\r\n      });\r\n      return error;\r\n    } else if (screenMode == 1) {\r\n      const error = ValidationEngine.validate(validationSchema, {\r\n        code: code,\r\n      });\r\n      return error;\r\n    } else if (screenMode == 2) {\r\n      const error = ValidationEngine.validate(validationSchema, {\r\n        newpassword: newpassword,\r\n        confirmNewpassword: confirmNewpassword,\r\n      });\r\n      if (\r\n        error.newpassword.isValid &&\r\n        error.confirmNewpassword.isValid &&\r\n        newpassword !== confirmNewpassword\r\n      ) {\r\n        error.isValid = false;\r\n        error.confirmNewpassword.isValid = false;\r\n        error.confirmNewpassword.message = \"Confirm password does not match\";\r\n      }\r\n      return error;\r\n    }\r\n  };\r\n\r\n  enterEmailScreen = (errorData) => {\r\n    const {\r\n      email,\r\n      code,\r\n      newpassword,\r\n      confirmNewpassword,\r\n      screenMode,\r\n      isSubmitted,\r\n    } = this.state;\r\n    return (\r\n      <Container\r\n        maxWidth=\"sm\"\r\n        sx={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          minHeight: \"100vh\",\r\n        }}\r\n      >\r\n        <Box sx={{ width: \"100%\", textAlign: \"center\", marginBottom: 3 }}>\r\n          <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n            Forgot Password\r\n          </Typography>\r\n          <Typography variant=\"body1\" color=\"textSecondary\">\r\n            Enter Your Email Address\r\n          </Typography>\r\n        </Box>\r\n\r\n        <TextField\r\n          sx={{ marginBottom: 2 }}\r\n          label=\"Email Address\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={this.handleChange}\r\n          error={!errorData.email.isValid && isSubmitted}\r\n          helperText={isSubmitted ? errorData.email.message : \"\"}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          fullWidth\r\n          onClick={() => {\r\n            const errorData = this.validateForm();\r\n            this.setState({\r\n              isSubmitted: true,\r\n            });\r\n            if (errorData?.isValid) {\r\n              this.setState({\r\n                isSubmitted: false,\r\n                screenMode: SCREEN_MODE.VERIFY_EMAIL,\r\n              });\r\n            }\r\n          }}\r\n        >\r\n          Confirm Email\r\n        </Button>\r\n      </Container>\r\n    );\r\n  };\r\n\r\n  otpScreen = (errorData) => {\r\n    const {\r\n      email,\r\n      code,\r\n      newpassword,\r\n      confirmNewpassword,\r\n      screenMode,\r\n      isSubmitted,\r\n    } = this.state;\r\n    return (\r\n      <Container\r\n        maxWidth=\"sm\"\r\n        sx={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          minHeight: \"100vh\",\r\n        }}\r\n      >\r\n        <Box sx={{ width: \"100%\", textAlign: \"center\", marginBottom: 3 }}>\r\n          <Typography variant=\"h6\" component=\"h1\" gutterBottom>\r\n            Verify Your Email\r\n          </Typography>\r\n          <Typography variant=\"body1\" color=\"textSecondary\">\r\n            Enter Code\r\n          </Typography>\r\n        </Box>\r\n        <TextField\r\n          label=\"Enter Code\"\r\n          variant=\"outlined\"\r\n          value={this.state.code}\r\n          name=\"code\"\r\n          id=\"code\"\r\n          onChange={this.handleChange}\r\n          error={!errorData.code.isValid && isSubmitted}\r\n          helperText={isSubmitted ? errorData.code.message : \"\"}\r\n          fullWidth\r\n          sx={{ marginBottom: 2 }}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          fullWidth\r\n          onClick={() => {\r\n            const errorData = this.validateForm();\r\n            this.setState({\r\n              isSubmitted: true,\r\n            });\r\n            if (errorData.isValid) {\r\n              this.setState({\r\n                isSubmitted: false,\r\n                screenMode: SCREEN_MODE.CREATE_NEW_PASSWORD_SCREEN,\r\n              });\r\n            }\r\n          }}\r\n        >\r\n          Verify\r\n        </Button>\r\n      </Container>\r\n    );\r\n  };\r\n\r\n  finalScreen = () => {\r\n    return (\r\n      <Container\r\n        maxWidth=\"sm\"\r\n        sx={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          minHeight: \"100vh\",\r\n        }}\r\n      >\r\n        <Box sx={{ width: \"100%\", textAlign: \"center\", marginBottom: 3 }}>\r\n          <Typography variant=\"h6\" component=\"h1\" gutterBottom>\r\n            Password Changed\r\n          </Typography>\r\n          <Typography variant=\"body1\" color=\"textSecondary\">\r\n            Your Password Successfully Changed\r\n          </Typography>\r\n          <Typography variant=\"body1\" color=\"textSecondary\">\r\n            Click to below to login\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Button variant=\"contained\" color=\"primary\" fullWidth>\r\n          Back To Login\r\n        </Button>\r\n      </Container>\r\n    );\r\n  };\r\n\r\n  handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  createNewPasswordScreen = (errorData) => {\r\n    const {\r\n      newpassword,\r\n      confirmNewpassword,\r\n\r\n      newpasswordEye,\r\n      confirmNewPasswordEye,\r\n      isSubmitted,\r\n    } = this.state;\r\n    return (\r\n      <Container\r\n        maxWidth=\"sm\"\r\n        sx={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          minHeight: \"100vh\",\r\n        }}\r\n      >\r\n        <Box sx={{ width: \"100%\", textAlign: \"center\", marginBottom: 3 }}>\r\n          <Typography variant=\"h6\" component=\"h1\" gutterBottom>\r\n            Create New Password\r\n          </Typography>\r\n          <Typography variant=\"h6\" component=\"h1\" gutterBottom>\r\n            Enter Your New Password\r\n          </Typography>\r\n          <Typography variant=\"body1\" color=\"textSecondary\">\r\n            Enter New Password\r\n          </Typography>\r\n        </Box>\r\n        <TextField\r\n          label=\"Enter New Password\"\r\n          variant=\"outlined\"\r\n          value={newpassword}\r\n          name=\"newpassword\"\r\n          id=\"newpassword\"\r\n          type={newpasswordEye ? \"text\" : \"password\"}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={() =>\r\n                    this.setState((prevState) => ({\r\n                      newpasswordEye: !prevState.newpasswordEye,\r\n                    }))\r\n                  }\r\n                  onMouseDown={this.handleMouseDownPassword}\r\n                >\r\n                  {newpasswordEye ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          onChange={this.handleChange}\r\n          error={!errorData.newpassword.isValid && isSubmitted}\r\n          helperText={isSubmitted ? errorData.newpassword.message : \"\"}\r\n          fullWidth\r\n          sx={{ marginBottom: 2 }}\r\n        />\r\n\r\n        <Typography variant=\"body1\" color=\"textSecondary\">\r\n          Confirm Password\r\n        </Typography>\r\n\r\n        <TextField\r\n          label=\"Enter Confirm New Password\"\r\n          variant=\"outlined\"\r\n          value={confirmNewpassword}\r\n          name=\"confirmNewpassword\"\r\n          id=\"confirmNewpassword\"\r\n          type={confirmNewPasswordEye ? \"text\" : \"password\"}\r\n          onChange={this.handleChange}\r\n          error={!errorData.confirmNewpassword.isValid && isSubmitted}\r\n          helperText={isSubmitted ? errorData.confirmNewpassword.message : \"\"}\r\n          fullWidth\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={() =>\r\n                    this.setState((prevState) => ({\r\n                      confirmNewPasswordEye: !prevState.confirmNewPasswordEye,\r\n                    }))\r\n                  }\r\n                  onMouseDown={this.handleMouseDownPassword}\r\n                >\r\n                  {confirmNewPasswordEye ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          sx={{ marginBottom: 2 }}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          fullWidth\r\n          onClick={() => {\r\n            const errorData = this.validateForm();\r\n            this.setState({\r\n              isSubmitted: true,\r\n            });\r\n            if (errorData.isValid) {\r\n              this.setState({\r\n                isSubmitted: false,\r\n                screenMode: SCREEN_MODE.PASSWORD_CHANGED_SCREEN,\r\n              });\r\n            }\r\n          }}\r\n        >\r\n          Continue\r\n        </Button>\r\n      </Container>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { screenMode } = this.state;\r\n    const errorData = this.validateForm();\r\n    return (\r\n      <>\r\n        {\r\n          screenMode == 0 ? (\r\n            this.enterEmailScreen(errorData)\r\n          ) : screenMode == 1 ? (\r\n            <>{this.otpScreen(errorData)}</>\r\n          ) : screenMode == 2 ? (\r\n            <>{this.createNewPasswordScreen(errorData)}</>\r\n          ) : (\r\n            <> {this.finalScreen()}</>\r\n          )\r\n          //   password changed screen\r\n        }\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ForgotPassword;\r\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5M12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5m0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3\"\n}), 'Visibility');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7M2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2m4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3z\"\n}), 'VisibilityOff');","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '@mui/utils/capitalize';\nimport useThemePropsSystem from '../useThemeProps';\nimport systemStyled from '../styled';\nimport createTheme from '../createTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => _extends({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    display: 'block'\n  }, !ownerState.disableGutters && {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => _extends({}, ownerState.maxWidth === 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('xs')]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }\n  }, ownerState.maxWidth &&\n  // @ts-ignore module augmentation fails if custom breakpoints are used\n  ownerState.maxWidth !== 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up(ownerState.maxWidth)]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n    }\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n        className,\n        component = 'div',\n        disableGutters = false,\n        fixed = false,\n        maxWidth = 'lg'\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const ownerState = _extends({}, props, {\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    });\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, _extends({\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref\n      }, other))\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;"],"names":["validationSchema","code","message","type","ValidationEngine","MANDATORY","REGEX","regex","NUMBER_ONLY_REGEX","email","EMAIL_REGEX","newpassword","confirmNewpassword","SCREEN_MODE","ForgotPassword","Component","constructor","props","super","handleChange","event","name","value","checked","target","val","this","setState","validateForm","screenMode","state","validate","error","isValid","enterEmailScreen","errorData","isSubmitted","_jsxs","Container","maxWidth","sx","display","flexDirection","alignItems","justifyContent","minHeight","children","Box","width","textAlign","marginBottom","_jsx","Typography","variant","component","gutterBottom","color","TextField","label","fullWidth","onChange","helperText","Button","onClick","otpScreen","id","finalScreen","handleMouseDownPassword","preventDefault","createNewPasswordScreen","newpasswordEye","confirmNewPasswordEye","InputProps","endAdornment","InputAdornment","position","IconButton","prevState","onMouseDown","Visibility","VisibilityOff","render","_Fragment","createSvgIcon","d","_excluded","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","slot","overridesResolver","styles","ownerState","root","concat","capitalize","String","fixed","disableGutters","useThemePropsDefault","inProps","useThemePropsSystem","options","arguments","length","undefined","createStyledComponent","useThemeProps","componentName","ContainerRoot","_ref","theme","_extends","marginLeft","boxSizing","marginRight","paddingLeft","spacing","paddingRight","breakpoints","up","_ref2","Object","keys","values","reduce","acc","breakpointValueKey","breakpoint","unit","_ref3","Math","max","xs","React","ref","className","other","_objectWithoutPropertiesLoose","classes","useUtilityClasses","slots","composeClasses","generateUtilityClass","as","clsx","createContainer","styled"],"sourceRoot":""}