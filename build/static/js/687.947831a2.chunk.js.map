{"version":3,"file":"static/js/687.947831a2.chunk.js","mappings":"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","sources":["Views/Postlogin/Products/Numbers.js","Views/Postlogin/Products/index.js"],"sourcesContent":["import { Box } from '@cloudscape-design/components'\r\nimport ColumnLayout from '@cloudscape-design/components/column-layout'\r\nimport React, { act, useEffect, useState } from 'react'\r\nimport { useSelector,useDispatch } from 'react-redux'\r\n\r\n\r\nimport { fetchOrders } from 'Redux-Store/Orders/OrdersThunk'\r\n\r\n\r\nconst Numbers = ({products}) => {\r\n  const dispatch = useDispatch();\r\n  const ordersData = useSelector((state) => state.orders.ordersData);\r\n  const { data = [] } = ordersData;\r\n  useEffect(() => {\r\n    dispatch(fetchOrders());\r\n  }, [dispatch]);\r\n  //  console.log(data,\"orderssss\");\r\n  const [active, setActive] = useState([]);\r\n  const [inactive, setInactive] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    if (products.data) {\r\n      const activeProducts = [];\r\n      const inactiveProducts = [];\r\n  \r\n      products.data.map(e => {\r\n        if (e.active === true) {\r\n          activeProducts.push(e);\r\n        } else if (e.active === false) {\r\n          inactiveProducts.push(e);\r\n        }\r\n        return null; // Since map expects a return value, we return null here\r\n      });\r\n  \r\n      setActive(activeProducts);\r\n      setInactive(inactiveProducts);\r\n  \r\n\r\n    }\r\n  }, [products]);\r\n  \r\n\r\n  \r\n\r\n\r\n\r\n\r\n  \r\n  return (\r\n\r\n    <ColumnLayout columns={5} variant=\"default\" minColumnWidth={170}>\r\n    <div>\r\n      <Box variant=\"awsui-key-label\">\r\n        <p style={{ fontSize: 12 }}>Total Active Products</p>\r\n      </Box>\r\n      <span style={{ fontSize: 36, fontWeight: '900', lineHeight: 1.3, color: \"#0972D3\" }}>{active?.length}</span>\r\n    </div>\r\n    <div>\r\n      <Box variant=\"awsui-key-label\">\r\n        <p style={{ fontSize: 12 }}>Total Stock</p>\r\n      </Box>\r\n      <span style={{ fontSize: 36, fontWeight: '900', lineHeight: 1.3, color: \"#0972D3\" }}>₹436K</span>\r\n    </div>\r\n    <div>\r\n      <Box variant=\"awsui-key-label\">\r\n        <p style={{ fontSize: 12 }}>Total Orders</p>\r\n      </Box>\r\n      <span style={{ fontSize: 36, fontWeight: '900', lineHeight: 1.3, color: \"#0972D3\" }}>{data.items?.length}</span>\r\n    </div>\r\n    <div>\r\n      <Box variant=\"awsui-key-label\">\r\n        <p style={{ fontSize: 12 }}>Net Profit</p>\r\n      </Box>\r\n      <span style={{ fontSize: 36, fontWeight: '900', lineHeight: 1.3, color: \"#0972D3\" }}>123K</span>\r\n    </div>\r\n    <div>\r\n      <Box variant=\"awsui-key-label\">\r\n        <p style={{ fontSize: 12 }}>Inactive Products</p>\r\n      </Box>\r\n      <span style={{ fontSize: 36, fontWeight: '900', lineHeight: 1.3, color: \"#0972D3\" }}>{inactive?.length}</span>\r\n    </div>\r\n  </ColumnLayout>\r\n  )\r\n}\r\n\r\nexport default Numbers","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Button,\n  Container,\n  Header,\n  SpaceBetween,\n  ContentLayout,\n  Table,\n  BreadcrumbGroup,\n  Toggle,\n  TextFilter,\n  Select,\n  Input,\n  Modal,\n  Flashbar,\n  FormField,\n} from \"@cloudscape-design/components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n  fetchProducts,\n  PutToggle,\n  putPricingById,\n} from \"Redux-Store/Products/ProductThunk\";\nimport \"../../../assets/styles/CloudscapeGlobalstyle.css\";\nimport Numbers from \"./Numbers\";\nconst Products = () => {\n  const dispatch = useDispatch();\n  const products = useSelector((state) => state.products.products);\n  const { data = [] } = products;\n  const [activeButton, setActiveButton] = useState(\"All\");\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [filteringText, setFilteringText] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState(\"All\");\n  const [editedProducts, setEditedProducts] = useState({});\n  const [isModalVisible, setModalVisible] = useState(false);\n  const [isBulkModifySuccess, setBulkModifySuccess] = useState(false);\n  const [validationErrors, setValidationErrors] = useState({});\n  //fetching products data\n  useEffect(() => {\n    dispatch(fetchProducts());\n  }, [dispatch]);\n\n  const handleInputChange = (id, field, value) => {\n    setEditedProducts((prev) => ({\n      ...prev,\n      [id]: {\n        ...prev[id],\n        [field]: value,\n      },\n    }));\n    // Validate the current field and update errors\n    const osp = value; // Updated price value\n    const cp =\n      field === \"compareAt\" ? value : editedProducts[id]?.compareAt ?? \"\";\n\n    let errors = {};\n\n    if (field === \"onlineStorePrice\" && !osp) {\n      errors.onlineStorePrice = \"Required!\";\n    }\n\n    if (field === \"compareAt\") {\n      if (!cp) {\n        errors.compareAt = \"Required!\";\n      } else if (parseFloat(cp) < parseFloat(osp)) {\n        errors.compareAt = \"CP must be greater than OSP\";\n      }\n    }\n\n    setValidationErrors((prevErrors) => ({\n      ...prevErrors,\n      [id]: errors,\n    }));\n  };\n// hitting put api for toggle \n  const handleToggleChange = (item) => {\n    const newStatus = !item.active;\n\n    dispatch(PutToggle({ id: item.id, active: newStatus })).then((response) => {\n      if (\n        response.meta.requestStatus === \"fulfilled\" &&\n        response.payload.status === 200\n      ) {\n        dispatch(fetchProducts());\n      } else {\n        dispatch(fetchProducts());\n      }\n    });\n  };\n\n\n\n  const filteredProducts = data\n    ? data.filter((item) => {\n        const matchesStatus =\n          activeButton === \"All\" || item.active === (activeButton === \"Active\");\n        const matchesSearch =\n          item.itemCode.toLowerCase().includes(filteringText.toLowerCase()) ||\n          item.name.toLowerCase().includes(filteringText.toLowerCase()) ||\n          (item.active ? \"active\" : \"inactive\").includes(\n            filteringText.toLowerCase()\n          );\n        const matchesCategory =\n          selectedCategory === \"All\" || item.category === selectedCategory;\n\n        return matchesStatus && matchesSearch && matchesCategory;\n      })\n    : [];\n\n  const handleSelectChange = ({ detail }) => {\n    setSelectedCategory(detail.selectedOption.value);\n\n  };\n\n  const handleSearchChange = (e) => {\n    setFilteringText(e.detail.filteringText);\n\n  };\n\n  const selectOptions = [\n    { label: \"All\", value: \"All\" },\n    { label: \"Leafy\", value: \"Leafy\" },\n    { label: \"Fruit\", value: \"Fruit\" },\n    { label: \"Vegetable\", value: \"Vegetable\" },\n    { label: \"Bengali Vegetable\", value: \"Bengali Vegetable\" },\n  ];\n\n  const handleSelectionChange = ({ detail }) => {\n    setSelectedItems(detail.selectedItems);\n  };\n\n  const handleBulkModifyPrice = () => {\n    if (validateInputs()) {\n      setModalVisible(true);\n    }\n  };\n\n  const validateInputs = () => {\n    let valid = true;\n    const errors = {};\n  \n    selectedItems.forEach((item) => {\n      const editedProduct = editedProducts[item.id] || {};\n      const osp =\n        editedProduct.onlineStorePrice !== undefined\n          ? editedProduct.onlineStorePrice\n          : item.onlineStorePrice;\n      const cp =\n        editedProduct.compareAt !== undefined\n          ? editedProduct.compareAt\n          : item.compareAt;\n  \n      let itemErrors = {};\n  \n      if (osp === \"\" || osp === undefined) {\n        valid = false;\n        itemErrors.onlineStorePrice = \"Required!\";\n      }\n  \n      if (cp === \"\" || cp === undefined) {\n        valid = false;\n        itemErrors.compareAt = \"Required!\";\n      } else if (parseFloat(cp) < parseFloat(osp)) {\n        valid = false;\n        itemErrors.compareAt = \"CP must be greater than OSP\";\n      }\n  \n      if (Object.keys(itemErrors).length > 0) {\n        errors[item.id] = itemErrors;\n      }\n    });\n  \n    setValidationErrors(errors);\n    return valid;\n  };\n  \n  const handleModalConfirm = async () => {\n    let success = true;\n  \n    // Create the array of pricing data based on selected items\n    const pricingDataArray = selectedItems.map((item) => ({\n      id: item.id,\n      compareAt: parseFloat(editedProducts[item.id]?.compareAt || item.compareAt),\n      onlineStorePrice: parseFloat(editedProducts[item.id]?.onlineStorePrice || item.onlineStorePrice),\n    }));\n  \n    console.log(pricingDataArray, \"products.js\");\n  \n    // Send the pricing data array to the API using the putPricingById thunk\n    try {\n      const response = await dispatch(putPricingById(pricingDataArray));\n  \n      if (\n        response.meta.requestStatus === \"fulfilled\" &&\n        response.payload.status === 200\n      ) {\n        setBulkModifySuccess(true);\n        setSelectedItems([]); // Clear selected checkboxes\n        setModalVisible(false);\n        success = false;\n      }\n    } catch (err) {\n      console.error(\"Failed to update product pricing:\", err);\n      success = false; // If there is an error, success should be set to false\n    }\n  \n    if (success) {\n      setBulkModifySuccess(true);\n      setSelectedItems([]); // Clear selected checkboxes\n    }\n  \n    setModalVisible(false);\n  };\n  \n  \n\n  const navigatestore = () => {\n    window.open(\"https://promodeagro.com/\", \"_blank\");\n  };\n  const [items, setItems] = React.useState([\n    {\n      type: \"info\",\n      dismissible: true,\n      dismissLabel: \"Dismiss message\",\n      onDismiss: () => setItems([]),\n      content: (\n        <>\n          <b>Price updated successfully! </b>\n          <p>The new price is now live on the online store</p>\n        </>\n      ),\n      id: \"message_1\",\n    },\n  ]);\n\n  return (\n    <ContentLayout\n      notifications={\n        <>{isBulkModifySuccess ? <Flashbar items={items} /> : <></>}</>\n      }\n      breadcrumbs={\n        <BreadcrumbGroup\n          items={[\n            { text: \"Dashboard\", href: \"/app/dashboard\" },\n            { text: \"Products\", href: \"/app/dashboard/products\" },\n          ]}\n          ariaLabel=\"Breadcrumbs\"\n        />\n      }\n      headerVariant=\"high-contrast\"\n      header={\n        <Header\n          actions={\n            <SpaceBetween alignItems=\"center\" direction=\"horizontal\" size=\"xs\">\n              <Button variant=\"normal\">Export</Button>\n            </SpaceBetween>\n          }\n          variant=\"h1\"\n        >\n          Products\n        </Header>\n      }\n    >\n      <SpaceBetween direction=\"vertical\" size=\"s\">\n        <Container>\n          <Numbers products={products} />\n        </Container>\n\n        <div>\n          <Table\n            header={\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <div style={{ display: \"flex\", gap: \"8px\" }}>\n                  <div style={{ width: \"360px\" }}>\n                    <TextFilter\n                      filteringPlaceholder=\"Search\"\n                      filteringText={filteringText}\n                      onChange={handleSearchChange}\n                    />\n                  </div>\n                  <div style={{ width: \"120px\" }}>\n                    <Select\n                      options={selectOptions}\n                      selectedOption={selectOptions.find(\n                        (option) => option.value === selectedCategory\n                      )}\n                      onChange={handleSelectChange}\n                      placeholder=\"Select Category\"\n                    />\n                  </div>\n                </div>\n                <div style={{ display: \"flex\", gap: \"5px\" }}>\n                  {isBulkModifySuccess && (\n                    <Button variant=\"normal\" onClick={navigatestore}>\n                      View On Store\n                    </Button>\n                  )}\n                    <Button\n                      disabled={selectedItems.length === 0}\n                      variant=\"normal\"\n                      onClick={handleBulkModifyPrice}\n                    >\n                      Bulk Modify Price\n                    </Button>\n              \n                </div>\n              </div>\n            }\n            variant=\"borderless\"\n            columnDefinitions={[\n              {\n                id: \"code\",\n                header: \"Item Code\",\n                cell: (item) => (\n                  <Link to={`/app/products/${item.id}`}>{item.itemCode}</Link>\n                ),\n              },\n              {\n                id: \"name\",\n                header: \"Name\",\n                cell: (item) => (\n                  <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                    <img\n                      src={item?.images[0]}\n                      alt={item.name}\n                      height={35}\n                      width={35}\n                      style={{ borderRadius: \"8px\", marginRight: \"10px\" }}\n                    />\n                    <p style={{ width: \"90px\" }}>{item.name}</p>\n                  </div>\n                ),\n              },\n              {\n                id: \"category\",\n                header: \"Category\",\n                cell: (item) => <Box textAlign=\"center\">{item?.category}</Box>,\n              },\n\n              {\n                id: \"stock\",\n                header: \"On Hand Quantity\",\n                cell: (item) => (\n                  <Box textAlign=\"center\">\n                    {item?.stockQuantity}/{item?.units}\n                  </Box>\n                ),\n              },\n              {\n                id: \"alert\",\n                header: \"Stock Alert\",\n                cell: (item) => (\n                  <p style={{color: \"#0972D3\", textAlign: \"center\"}}>\n                  Active\n                  </p>\n                ),\n              },\n\n              {\n                id: \"onlineStorePrice\",\n                header: \"Online Price\",\n                cell: (item) => (\n                  <div style={{ width: \"80px\" }}>\n                    <FormField\n                      errorText={validationErrors[item.id]?.onlineStorePrice}\n                    >\n                      <Input\n                        disabled={\n                          !selectedItems.some(\n                            (selectedItem) => selectedItem.id === item.id\n                          )\n                        }\n                        placeholder=\"Enter Price\"\n                        type=\"number\"\n                        value={\n                          editedProducts[item.id]?.onlineStorePrice ??\n                          item.onlineStorePrice\n                        }\n                        onChange={(e) =>\n                          handleInputChange(\n                            item.id,\n                            \"onlineStorePrice\",\n                            e.detail.value\n                          )\n                        }\n                        ariaLabel=\"online store price\"\n                      />\n                    </FormField>\n                  </div>\n                ),\n              },\n              {\n                id: \"compareAt\",\n                header: \"Compare Price\",\n                cell: (item) => (\n                  <div style={{ width: \"80px\" }}>\n                    <FormField errorText={validationErrors[item.id]?.compareAt}>\n                      <Input\n                        placeholder=\"Enter Price\"\n                        type=\"number\"\n                        value={\n                          editedProducts[item.id]?.compareAt ?? item.compareAt\n                        }\n                        onChange={(e) =>\n                          handleInputChange(\n                            item.id,\n                            \"compareAt\",\n                            e.detail.value\n                          )\n                        }\n                        ariaLabel=\"compare at price\"\n                        disabled={\n                          !selectedItems.some(\n                            (selectedItem) => selectedItem.id === item.id\n                          )\n                        }\n                      />\n                    </FormField>\n                  </div>\n                ),\n              },\n              {\n                id: \"status\",\n                header: \"Status\",\n                cell: (item) => (\n                  <div style={{ width: \"90px\" }}>\n                    <Toggle\n                      onChange={() => handleToggleChange(item)}\n                      checked={item.active}\n                    >\n                      <p>{item.active ? \"Active\" : \"Inactive\"}</p>\n                    </Toggle>\n                  </div>\n                ),\n              },\n            ]}\n            selectedItems={selectedItems}\n            onSelectionChange={handleSelectionChange}\n            items={filteredProducts}\n            selectionType=\"multi\"\n          />\n        </div>\n      </SpaceBetween>\n\n      <Modal\n     \n        visible={isModalVisible}\n        onDismiss={() => setModalVisible(false)}\n        header=\"Confirm Bulk Modify\"\n        footer={\n          <SpaceBetween direction=\"horizontal\" size=\"xs\">\n            <Button variant=\"link\" onClick={() => setModalVisible(false)}>\n              Cancel\n            </Button>\n            <Button variant=\"primary\" onClick={handleModalConfirm}>\n              Confirm\n            </Button>\n          </SpaceBetween>\n        }\n      >\n        Are you sure you want to bulk modify the prices for the selected items?\n      </Modal>\n    </ContentLayout>\n  );\n};\nexport default Products;"],"names":["_ref","_data$items","products","dispatch","useDispatch","ordersData","useSelector","state","orders","data","useEffect","fetchOrders","active","setActive","useState","inactive","setInactive","activeProducts","inactiveProducts","map","e","push","_jsxs","ColumnLayout","columns","variant","minColumnWidth","children","_jsx","Box","style","fontSize","fontWeight","lineHeight","color","length","items","Products","activeButton","setActiveButton","selectedItems","setSelectedItems","filteringText","setFilteringText","selectedCategory","setSelectedCategory","editedProducts","setEditedProducts","isModalVisible","setModalVisible","isBulkModifySuccess","setBulkModifySuccess","validationErrors","setValidationErrors","fetchProducts","handleInputChange","id","field","value","_editedProducts$id$co","_editedProducts$id","prev","osp","cp","compareAt","errors","onlineStorePrice","parseFloat","prevErrors","filteredProducts","filter","item","matchesStatus","matchesSearch","itemCode","toLowerCase","includes","name","matchesCategory","category","selectOptions","label","validateInputs","valid","forEach","editedProduct","undefined","itemErrors","Object","keys","setItems","React","type","dismissible","dismissLabel","onDismiss","content","_Fragment","ContentLayout","notifications","Flashbar","breadcrumbs","BreadcrumbGroup","text","href","ariaLabel","headerVariant","header","Header","actions","SpaceBetween","alignItems","direction","size","Button","Container","Numbers","Table","display","justifyContent","gap","width","TextFilter","filteringPlaceholder","onChange","detail","Select","options","selectedOption","find","option","placeholder","onClick","navigatestore","window","open","disabled","handleBulkModifyPrice","columnDefinitions","cell","Link","to","concat","src","images","alt","height","borderRadius","marginRight","textAlign","stockQuantity","units","_validationErrors$ite","_editedProducts$item$3","_editedProducts$item$4","FormField","errorText","Input","some","selectedItem","_validationErrors$ite2","_editedProducts$item$5","_editedProducts$item$6","Toggle","newStatus","PutToggle","then","response","meta","requestStatus","payload","status","handleToggleChange","checked","onSelectionChange","_ref2","selectionType","Modal","visible","footer","async","success","pricingDataArray","_editedProducts$item$","_editedProducts$item$2","console","log","putPricingById","err","error"],"sourceRoot":""}