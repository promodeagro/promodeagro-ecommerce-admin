{"version":3,"file":"static/js/211.a0977ed0.chunk.js","mappings":"kUA0BA,MAwnBA,EAxnBeA,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EACnB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAaC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,OAAOH,aACjDI,GAAcH,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,OAAOE,eAClDC,GAAiB,OAAVN,QAAU,IAAVA,OAAU,EAAVA,EAAYM,OAAQ,CAAC,EAC5BC,EAAQC,EAAAA,SAAc,IAAMF,EAAKC,OAAS,IAAI,CAACD,EAAKC,SACnDE,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,KAC5CC,EAAaC,IAAkBF,EAAAA,EAAAA,UAAS,IACxCG,EAAcC,IAAmBJ,EAAAA,EAAAA,UAAS,oBAC1CK,EAAeC,IAAoBN,EAAAA,EAAAA,UAAS,KAC5CO,EAAkBC,IAAuBR,EAAAA,EAAAA,UAAS,OAClDS,EAA4BC,IACjCV,EAAAA,EAAAA,WAAS,IACJW,EAA4BC,IACjCZ,EAAAA,EAAAA,WAAS,IACJa,EAA+BC,IACpCd,EAAAA,EAAAA,WAAS,IACJe,EAAgBC,IAAqBhB,EAAAA,EAAAA,UAAS,KAC9CiB,EAAiCC,IACtClB,EAAAA,EAAAA,WAAS,IACJmB,EAAgBC,GAAqBvB,EAAAA,YAE5CwB,EAAAA,EAAAA,YAAU,KACRlC,GAASmC,EAAAA,EAAAA,IAAY,CAAEC,OAAQlB,EAAemB,OAAQrB,IAAgB,GACrE,CAAChB,EAAUkB,EAAeF,KAE7BkB,EAAAA,EAAAA,YAAU,KACRlC,GAASsC,EAAAA,EAAAA,MAAmB,GAC3B,CAACtC,KAEJkC,EAAAA,EAAAA,YAAU,KACYK,MAClB,IAAIC,EAAW/B,EACXO,IACFwB,EAAW/B,EAAMgC,QAAQC,GAAUA,EAAMpC,cAAgBU,KAE3Da,GAAmBc,GACbC,KAAKC,UAAUF,KAAwBC,KAAKC,UAAUL,GACjDA,EAEFG,GACP,EAGJJ,EAAa,GACZ,CAACvB,EAAcP,KAElByB,EAAAA,EAAAA,YAAU,KACa,cAAjBlB,GAAiCgB,GACnCC,EAAkB,CAAEa,MAAO,aAAcC,MAAO,KAClD,GACC,CAAC/B,EAAcgB,IAElB,MAoBMgB,EAAgB,CACpB,CAAEF,MAAO,kBAAmBC,MAAO,mBACnC,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,aAAcC,MAAO,cAC9B,CAAED,MAAO,YAAaC,MAAO,cAOzBE,EAAgCA,KACpCxB,GAA8B,EAAM,EA2EhCyB,EAAgCA,KACpC3B,GAA8B,EAAM,EAgBhC4B,GAAmCA,KACvCxB,GAAiC,EAAM,EA2BzC,OACEyB,EAAAA,EAAAA,KAACC,EAAAA,EAAa,CACZC,cAAc,gBACdC,aACEH,EAAAA,EAAAA,KAACI,EAAAA,EAAe,CACd/C,MAAO,CACL,CAAEgD,KAAM,YAAaC,KAAM,kBAC3B,CAAED,KAAM,SAAUC,KAAM,MAE1BC,UAAU,gBAGdC,QAAQR,EAAAA,EAAAA,KAACS,EAAAA,EAAM,CAACC,QAAQ,KAAIC,SAAC,WAAgBA,UAE7CC,EAAAA,EAAAA,MAACC,EAAAA,EAAY,CAACC,UAAU,WAAWC,KAAK,KAAIJ,SAAA,EAC1CX,EAAAA,EAAAA,KAACgB,EAAAA,EAAS,CAACC,UAAU,gBAAgBC,MAAO,CAAEC,aAAc,QAASR,UACnEC,EAAAA,EAAAA,MAACQ,EAAAA,EAAY,CAACC,QAAS,EAAGX,QAAQ,UAAUY,eAAgB,IAAIX,SAAA,EAC9DC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEX,EAAAA,EAAAA,KAACuB,EAAAA,EAAG,CAACb,QAAQ,kBAAiBC,UAC5BX,EAAAA,EAAAA,KAAA,KAAGkB,MAAO,CAAEM,SAAU,GAAIC,WAAY,QAASd,SAAC,oBAElDX,EAAAA,EAAAA,KAAA,QACEkB,MAAO,CACLM,SAAU,GACVC,WAAY,MACZC,WAAY,IACZC,MAAO,WACPhB,UAEU,OAAXzD,QAAW,IAAXA,GAAiB,QAANX,EAAXW,EAAaE,YAAI,IAAAb,OAAN,EAAXA,EAAmBqF,kBAAmB,YAG3ChB,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEX,EAAAA,EAAAA,KAACuB,EAAAA,EAAG,CAACb,QAAQ,kBAAiBC,UAC5BX,EAAAA,EAAAA,KAAA,KAAGkB,MAAO,CAAEM,SAAU,GAAIC,WAAY,QAASd,SAAC,wBAIlDX,EAAAA,EAAAA,KAAA,QACEkB,MAAO,CACLM,SAAU,GACVC,WAAY,MACZC,WAAY,IACZC,MAAO,WACPhB,SAEU,OAAXzD,QAAW,IAAXA,GAAiB,QAANV,EAAXU,EAAaE,YAAI,IAAAZ,OAAN,EAAXA,EAAmBqF,0BAGxBjB,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEX,EAAAA,EAAAA,KAACuB,EAAAA,EAAG,CAACb,QAAQ,kBAAiBC,UAC5BX,EAAAA,EAAAA,KAAA,KAAGkB,MAAO,CAAEM,SAAU,GAAIC,WAAY,QAASd,SAAC,wBAIlDX,EAAAA,EAAAA,KAAA,QACEkB,MAAO,CACLM,SAAU,GACVC,WAAY,MACZC,WAAY,IACZC,MAAO,WACPhB,SAEU,OAAXzD,QAAW,IAAXA,GAAiB,QAANT,EAAXS,EAAaE,YAAI,IAAAX,OAAN,EAAXA,EAAmBqF,0BAGxBlB,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEX,EAAAA,EAAAA,KAACuB,EAAAA,EAAG,CAACb,QAAQ,kBAAiBC,UAC5BX,EAAAA,EAAAA,KAAA,KAAGkB,MAAO,CAAEM,SAAU,GAAIC,WAAY,QAASd,SAAC,wBAIlDX,EAAAA,EAAAA,KAAA,QACEkB,MAAO,CACLM,SAAU,GACVC,WAAY,MACZC,WAAY,IACZC,MAAO,WACPhB,SAEU,OAAXzD,QAAW,IAAXA,GAAiB,QAANR,EAAXQ,EAAaE,YAAI,IAAAV,OAAN,EAAXA,EAAmBqF,0BAGxBnB,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEX,EAAAA,EAAAA,KAACuB,EAAAA,EAAG,CAACb,QAAQ,kBAAiBC,UAC5BX,EAAAA,EAAAA,KAAA,KAAGkB,MAAO,CAAEM,SAAU,GAAIC,WAAY,QAASd,SAAC,uBAIlDX,EAAAA,EAAAA,KAAA,QACEkB,MAAO,CACLM,SAAU,GACVC,WAAY,MACZC,WAAY,IACZC,MAAO,WACPhB,SAEU,OAAXzD,QAAW,IAAXA,GAAiB,QAANP,EAAXO,EAAaE,YAAI,IAAAT,OAAN,EAAXA,EAAmBqF,8BAM5BpB,EAAAA,EAAAA,MAACC,EAAAA,EAAY,CAACC,UAAU,WAAWC,KAAK,IAAGJ,SAAA,EACzCX,EAAAA,EAAAA,KAACuB,EAAAA,EAAG,CAAAZ,UACFC,EAAAA,EAAAA,MAACqB,EAAAA,EAAI,CACHC,gBAAc,EACdC,eAAgB,CACd,CAAEC,QAAS,CAAEC,QAAS,GAAIC,IAAK,IAC/B,CAAEF,QAAS,CAAEC,QAAS,GAAIC,IAAK,KAC/B3B,SAAA,EAEFC,EAAAA,EAAAA,MAAA,OAAKM,MAAO,CAAEqB,QAAS,OAAQC,IAAK,UAAW7B,SAAA,EAC7CX,EAAAA,EAAAA,KAACyC,EAAAA,EAAU,CACTC,qBAAqB,SACrB5E,cAAeA,EACf6E,SA7PYC,IAC1B7E,EAAiB6E,EAAEC,OAAO/E,eAC1BH,EAAe,EAAE,KA6PLqC,EAAAA,EAAAA,KAAC8C,EAAAA,EAAM,CACLC,QAASnD,EACThB,eACEgB,EAAcoD,MACXC,GAAWA,EAAOtD,QAAU/B,IAE3B,CACE8B,MACmB,oBAAjB9B,EACI,iBACiB,WAAjBA,EACA,eACiB,eAAjBA,EACA,qBACiB,cAAjBA,EACA,oBACA,iBACN+B,MAAO/B,GAET,KAEN+E,SA5RWO,UAAuB,IAAhB,OAAEL,GAAQM,EAC1C,MAAMC,EAAYP,EAAOjE,eAAee,MACxC9B,EAAgBuF,GAChB5F,EAAiB,IACjBG,EAAe,SACTf,GAASmC,EAAAA,EAAAA,IAAY,CAAEC,OAAQlB,EAAemB,OAAQmE,IAAa,IA0R3D,cAAjBxF,IACCoC,EAAAA,EAAAA,KAAC8C,EAAAA,EAAM,CACLlE,eAAgBA,EAChB+D,SAAUU,IAAA,IAAC,OAAER,GAAQQ,EAAA,OAAKxE,EAAkBgE,EAAOjE,eAAe,EAClEmE,QAAS,CACP,CAAErD,MAAO,aAAcC,MAAO,KAC9B,CAAED,MAAO,cAAeC,MAAO,KAC/B,CAAED,MAAO,cAAeC,MAAO,KAC/B,CAAED,MAAO,cAAeC,MAAO,KAC/B,CAAED,MAAO,aAAcC,MAAO,MAEhC2D,YAAY,wBAIF1C,EAAAA,EAAAA,MAAA,OACEM,MAAO,CACLqB,QAAS,OACTgB,eAAgB,YAChB5C,SAAA,CAEgB,oBAAjB/C,IACCoC,EAAAA,EAAAA,KAACwD,EAAAA,EAAM,CACLC,SAAmC,IAAzBlG,EAAcmG,OACxBC,QAnScC,KAC9BvF,GAA8B,EAAK,EAkScsC,SAClC,mBAMe,WAAjB/C,IACCoC,EAAAA,EAAAA,KAACwD,EAAAA,EAAM,CACLC,SAAmC,IAAzBlG,EAAcmG,OACxBC,QA1NcE,KAC9B1F,GAA8B,EAAK,EAyNcwC,SAClC,kBAMe,eAAjB/C,IACCoC,EAAAA,EAAAA,KAACwD,EAAAA,EAAM,CACLC,SAAmC,IAAzBlG,EAAcmG,OACxBC,QA1NiBG,KACjCvF,GAAiC,EAAK,EAyNcoC,SACrC,uBAKHX,EAAAA,EAAAA,KAAC+D,EAAAA,EAAU,CACTC,iBAAkBtG,EAClBiF,SAAUsB,IAAA,IAAC,OAAEpB,GAAQoB,EAAA,MA1VZf,WACvBvF,EAAeuG,SACTtH,GACJmC,EAAAA,EAAAA,IAAY,CAAEC,OAAQlB,EAAemB,OAAQrB,IAC9C,EAuVeuG,CAAiBtB,EAAOmB,iBAAiB,EAE3CI,SAAO,EACPC,WAAY,aAOpBrE,EAAAA,EAAAA,KAACsE,EAAAA,EAAK,CACJC,UAAW1E,EACX2E,QAASpG,EACTqG,QACEzE,EAAAA,EAAAA,KAACuB,EAAAA,EAAG,CAACmD,MAAM,QAAO/D,UAChBC,EAAAA,EAAAA,MAACC,EAAAA,EAAY,CAACC,UAAU,aAAaC,KAAK,KAAIJ,SAAA,EAC5CX,EAAAA,EAAAA,KAACwD,EAAAA,EAAM,CACL9C,QAAQ,OACRiD,QAAS9D,EAA8Bc,SACxC,YAGDX,EAAAA,EAAAA,KAACwD,EAAAA,EAAM,CACL9C,QAAQ,UACRiD,QAhVqBT,UACrC,IACE,IAAKyB,MAAMC,QAAQrH,IAA2C,IAAzBA,EAAcmG,OACjD,MAAM,IAAImB,MAAM,2CAElB,MAAMC,EAAWvH,EAAcwH,KAAKC,GAASA,EAAKC,KAC5CC,QAAetI,GACnBuI,EAAAA,EAAAA,IAAkB,CAAEC,IAAKN,EAAU7F,OAAQ,YAC3CoG,SACF,GAAuB,YAAnBH,EAAOI,QAIT,MAAM,IAAIT,MAAM,iCAHhBU,QAAQC,IAAI,qCAAsCN,SAC5CtI,GAASmC,EAAAA,EAAAA,OAIjB0G,OAAOC,SAASC,SAChBtH,GAA8B,EAChC,CAAE,MAAOuH,GACPL,QAAQK,MAAM,+BAAgCA,EAChD,GA6TwDjF,SACzC,iBAMPH,OAAO,wBAAuBG,SAC/B,qFAMDC,EAAAA,EAAAA,MAAC0D,EAAAA,EAAK,CACJC,UAAWzE,EACX0E,QAAStG,EACTuG,QACEzE,EAAAA,EAAAA,KAACuB,EAAAA,EAAG,CAACmD,MAAM,QAAO/D,UAChBC,EAAAA,EAAAA,MAACC,EAAAA,EAAY,CAACC,UAAU,aAAaC,KAAK,KAAIJ,SAAA,EAC5CX,EAAAA,EAAAA,KAACwD,EAAAA,EAAM,CACL9C,QAAQ,OACRiD,QAAS7D,EAA8Ba,SACxC,YAGDX,EAAAA,EAAAA,KAACwD,EAAAA,EAAM,CACL9C,QAAQ,UACRiD,QAtVqBT,UACrC,IACE,IAAKlF,EAEH,YADAW,GAAmC,GAMrC,GAFAA,GAAmC,IAE9BgG,MAAMC,QAAQrH,IAA2C,IAAzBA,EAAcmG,OACjD,MAAM,IAAImB,MAAM,2CAGlB,MAAMC,EAAWvH,EAAcwH,KAAKC,GAASA,EAAKC,KAC5CY,EAAW7H,EAAiB2B,MAElC,IAAKgF,MAAMC,QAAQE,IAAiC,IAApBA,EAASpB,OACvC,MAAM,IAAImB,MAAM,sBAGlB,MAAMK,QAAetI,GACnBkJ,EAAAA,EAAAA,IAAmC,CACjChB,WACAe,WACA5G,OAAQ,gBAEVoG,SAEF,GAAuB,YAAnBH,EAAOI,QAIT,MAAM,IAAIT,MACR,yDAJFU,QAAQC,IAAI,mDAAoDN,SAC1DtI,GAASmC,EAAAA,EAAAA,OAOjB0G,OAAOC,SAASC,SAChBxH,GAA8B,EAChC,CAAE,MAAOyH,GACPL,QAAQK,MACN,0DACAA,EAEJ,GA0SwDjF,SACzC,gBAMPH,OAAO,gBAAeG,SAAA,EAEtBX,EAAAA,EAAAA,KAAA,MAAIkB,MAAO,CAAEC,aAAc,SAAUR,SAAC,qBACtCX,EAAAA,EAAAA,KAAC8C,EAAAA,EAAM,CACLC,QAxSQ,CAClB,CAAErD,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,aAAcC,MAAO,cAC9B,CAAED,MAAO,gBAAiBC,MAAO,kBAsSvBf,eAAgBZ,EAChB2E,SApTuBoD,IAAiB,IAAhB,OAAElD,GAAQkD,EAC5C9H,EAAoB4E,EAAOjE,eAAe,EAoThC0E,YAAY,kBACZ0C,QAAStH,IAAoCV,QAGjDgC,EAAAA,EAAAA,KAACsE,EAAAA,EAAK,CACJC,UAAWxE,GACXyE,QAASlG,EACTmG,QACEzE,EAAAA,EAAAA,KAACuB,EAAAA,EAAG,CAACmD,MAAM,QAAO/D,UAChBC,EAAAA,EAAAA,MAACC,EAAAA,EAAY,CAACC,UAAU,aAAaC,KAAK,KAAIJ,SAAA,EAC5CX,EAAAA,EAAAA,KAACwD,EAAAA,EAAM,CACL9C,QAAQ,OACRiD,QAAS5D,GAAiCY,SAC3C,YAGDX,EAAAA,EAAAA,KAACwD,EAAAA,EAAM,CACL9C,QAAQ,UACRiD,QA/SwBT,UACxC,IACE,IAAKyB,MAAMC,QAAQrH,IAA2C,IAAzBA,EAAcmG,OACjD,MAAM,IAAImB,MAAM,2CAElB,MAAMC,EAAWvH,EAAcwH,KAAKC,GAASA,EAAKC,KAC5CC,QAAetI,GACnBuI,EAAAA,EAAAA,IAAkB,CAAEC,IAAKN,EAAU7F,OAAQ,eAC3CoG,SACF,GAAuB,YAAnBH,EAAOI,QAIT,MAAM,IAAIT,MAAM,iCAHhBU,QAAQC,IAAI,kDAAmDN,SACzDtI,GAASmC,EAAAA,EAAAA,OAIjB0G,OAAOC,SAASC,SAChBpH,GAAiC,EACnC,CAAE,MAAOqH,GACPL,QAAQK,MAAM,+BAAgCA,EAChD,GA4R2DjF,SAC5C,iBAMPH,OAAO,oBAAmBG,SAC3B,sFAKDX,EAAAA,EAAAA,KAACiG,EAAAA,EAAK,CACJC,eAAgBC,IAAA,IAAC,WAAEC,EAAU,UAAEC,EAAS,gBAAEC,GAAiBH,EAAA,0BAAAI,OAEvDH,EAAa,EAAC,QAAAG,OACTF,EAAS,QAAAE,OAAOD,EAAe,EAExCE,kBAAmBC,IAAA,IAAC,OAAE5D,GAAQ4D,EAAA,OAC5BjJ,EAAiBqF,EAAOtF,cAAc,EAExCA,cAAeA,EACfmJ,WAAY,CACVC,oBAAqB,kBACrBC,uBAAwBC,IAAA,IAAC,cAAEtJ,GAAesJ,EAAA,SAAAN,OACrChJ,EAAcmG,OAAM,KAAA6C,OACI,IAAzBhJ,EAAcmG,OAAe,OAAS,QAAO,cAEjDoD,mBAAoBA,CAAAC,EAAoB/B,KAAI,IAAvB,cAAEzH,GAAewJ,EAAA,OAAW/B,EAAKgC,IAAI,GAE5D3J,MAAOmB,EACPyI,kBAAmB,CACjB,CACEhC,GAAI,KACJzE,OAAQ,WACR0G,KAAOlC,GACLA,EAAKC,IACHrE,EAAAA,EAAAA,MAACuG,EAAAA,GAAI,CAACC,GAAE,0BAAAb,OAA4BvB,EAAKC,IAAKtE,SAAA,CAAC,IAC3CqE,EAAKC,MAGT,OAIN,CACEA,GAAI,YACJzE,OAAQ,aACR0G,KAAOlC,IACL,IAAKA,EAAKqC,UACR,MAAO,MAQT,OANa,IAAIC,KAAKtC,EAAKqC,WAOxBE,mBAAmB,QANN,CACdC,IAAK,UACLC,MAAO,UACPC,KAAM,YAILC,QAAQ,MAAO,IAAI,GAG1B,CACE1C,GAAI,eACJzE,OAAQ,gBACR0G,KAAOlC,GAEHA,EAAK4C,cACL5C,EAAK4C,cACL5C,EAAK4C,aAEE5C,EAAK4C,aAEP,OAGX,CACE3C,GAAI,OACJzE,OAAQ,OACR0G,KAAOlC,IACL,GAAIA,EAAK3H,MAAO,CACd,MAAMwK,EAAY7C,EAAK3H,MACvB,MAAsB,GAAAkJ,OACfsB,EADc,IAAdA,EACS,QACA,SAClB,CACA,MAAO,KAAK,GAGhB,CACE5C,GAAI,gBACJzE,OAAQ,iBACR0G,KAAOlC,GAASA,EAAK8C,eAAiB,OAExC,CACE7C,GAAI,cACJzE,OAAQ,eACR0G,KAAOlC,GACRA,EAAK9H,aAAgB,OAGtB,CACE+H,GAAI,cACJzE,OAAQ,eACR0G,KAAOlC,GACLA,EAAK+C,YAAW,OAAAxB,OAAUvB,EAAK+C,aAAgB,OAEnD,CACE9C,GAAI,OACJzE,OAAQ,gBACR0G,KAAOlC,GAASA,EAAKgD,MAAQ,UAEV,eAAjBpK,GAAkD,cAAjBA,EACjC,CACE,CACEqH,GAAI,WACJzE,OAAQ,WACR0G,KAAOlC,GAASA,EAAKa,UAAY,QAGrC,IAINoC,YAAY,oBACZC,cAAc,QACdC,QAAQ,KACRzH,QAAQ,aACR0H,OACEpI,EAAAA,EAAAA,KAACuB,EAAAA,EAAG,CACF8G,OAAQ,CAAEC,SAAU,MACpBC,UAAU,SACV5G,MAAM,UAAShB,UAEfX,EAAAA,EAAAA,KAACa,EAAAA,EAAY,CAACE,KAAK,IAAGJ,UACpBX,EAAAA,EAAAA,KAAA,KAAAW,SAAG,2BAOD,C","sources":["Views/Postlogin/Orders/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  fetchOrders,\r\n  fetchOrderStatus,\r\n  updateOrderStatus,\r\n  assignDeliveryBoyAndMoveToOnTheWay,\r\n} from \"Redux-Store/Orders/OrdersThunk\";\r\nimport {\r\n  Table,\r\n  Pagination,\r\n  TextFilter,\r\n  ContentLayout,\r\n  Container,\r\n  ColumnLayout,\r\n  BreadcrumbGroup,\r\n  Header,\r\n  Button,\r\n  Box,\r\n  SpaceBetween,\r\n  Grid,\r\n  Select,\r\n} from \"@cloudscape-design/components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Modal from \"@cloudscape-design/components/modal\";\r\n\r\nconst Orders = () => {\r\n  const dispatch = useDispatch();\r\n  const ordersData = useSelector((state) => state.orders.ordersData);\r\n  const orderStatus = useSelector((state) => state.orders.order_status);\r\n  const data = ordersData?.data || {};\r\n  const items = React.useMemo(() => data.items || [], [data.items]);\r\n  const [selectedItems, setSelectedItems] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [activeButton, setActiveButton] = useState(\"Order Confirmed\");\r\n  const [filteringText, setFilteringText] = useState(\"\");\r\n  const [selectedAssignee, setSelectedAssignee] = useState(null);\r\n  const [isAssignOrdersModalVisible, setIsAssignOrdersModalVisible] =\r\n    useState(false);\r\n  const [isMoveToPackedModalVisible, setIsMoveToPackedModalVisible] =\r\n    useState(false);\r\n  const [isMoveToDeliveredModalVisible, setIsMoveToDeliveredModalVisible] =\r\n    useState(false);\r\n  const [filteredOrders, setFilteredOrders] = useState([]);\r\n  const [isFormSubmittedWithoutSelection, setIsFormSubmittedWithoutSelection] =\r\n    useState(false);\r\n  const [selectedOption, setSelectedOption] = React.useState();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchOrders({ search: filteringText, status: activeButton }));\r\n  }, [dispatch, filteringText, activeButton]);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchOrderStatus());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    const applyFilter = () => {\r\n      let filtered = items;\r\n      if (activeButton) {\r\n        filtered = items.filter((order) => order.orderStatus === activeButton);\r\n      }\r\n      setFilteredOrders((prevFilteredOrders) => {\r\n        if (JSON.stringify(prevFilteredOrders) !== JSON.stringify(filtered)) {\r\n          return filtered;\r\n        }\r\n        return prevFilteredOrders;\r\n      });\r\n    };\r\n  \r\n    applyFilter();\r\n  }, [activeButton, items]);\r\n  \r\n  useEffect(() => {\r\n    if (activeButton === \"delivered\" && !selectedOption) {\r\n      setSelectedOption({ label: \"7 Days Old\", value: \"1\" }); \r\n    }\r\n  }, [activeButton, selectedOption]);\r\n  \r\n  const handlePageChange = async (pageIndex) => {\r\n    setCurrentPage(pageIndex);\r\n    await dispatch(\r\n      fetchOrders({ search: filteringText, status: activeButton })\r\n    );\r\n  };\r\n\r\n  const handleSelectChange = async ({ detail }) => {\r\n    const newStatus = detail.selectedOption.value;\r\n    setActiveButton(newStatus);\r\n    setSelectedItems([]);\r\n    setCurrentPage(1);\r\n    await dispatch(fetchOrders({ search: filteringText, status: newStatus }));\r\n  };\r\n\r\n  const handleSearchChange = (e) => {\r\n    setFilteringText(e.detail.filteringText);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const selectOptions = [\r\n    { label: \"Order Confirmed\", value: \"Order Confirmed\" },\r\n    { label: \"Packed\", value: \"packed\" },\r\n    { label: \"On The Way\", value: \"on the way\" },\r\n    { label: \"Delivered\", value: \"delivered\" },\r\n  ];\r\n\r\n  const handleMoveToPackedClick = () => {\r\n    setIsMoveToPackedModalVisible(true);\r\n  };\r\n\r\n  const handleMoveToPackedModalCancel = () => {\r\n    setIsMoveToPackedModalVisible(false);\r\n  };\r\n\r\n  const handleMoveToPackedModalConfirm = async () => {\r\n    try {\r\n      if (!Array.isArray(selectedItems) || selectedItems.length === 0) {\r\n        throw new Error(\"No items selected or invalid selection.\");\r\n      }\r\n      const orderIds = selectedItems.map((item) => item.id);\r\n      const result = await dispatch(\r\n        updateOrderStatus({ ids: orderIds, status: \"Packed\" })\r\n      ).unwrap();\r\n      if (result.message === \"success\") {\r\n        console.log(\"Order status updated successfully:\", result);\r\n        await dispatch(fetchOrders());\r\n      } else {\r\n        throw new Error(\"Failed to update order status\");\r\n      }\r\n      window.location.reload();\r\n      setIsMoveToPackedModalVisible(false);\r\n    } catch (error) {\r\n      console.error(\"Error updating order status:\", error);\r\n    }\r\n  };\r\n\r\n  const handleAssignOrdersModalConfirm = async () => {\r\n    try {\r\n      if (!selectedAssignee) {\r\n        setIsFormSubmittedWithoutSelection(true);\r\n        return;\r\n      }\r\n\r\n      setIsFormSubmittedWithoutSelection(false);\r\n\r\n      if (!Array.isArray(selectedItems) || selectedItems.length === 0) {\r\n        throw new Error(\"No items selected or invalid selection.\");\r\n      }\r\n\r\n      const orderIds = selectedItems.map((item) => item.id);\r\n      const assignee = selectedAssignee.value;\r\n\r\n      if (!Array.isArray(orderIds) || orderIds.length === 0) {\r\n        throw new Error(\"Invalid order IDs.\");\r\n      }\r\n\r\n      const result = await dispatch(\r\n        assignDeliveryBoyAndMoveToOnTheWay({\r\n          orderIds,\r\n          assignee,\r\n          status: \"On The Way\",\r\n        })\r\n      ).unwrap();\r\n\r\n      if (result.message === \"success\") {\r\n        console.log(\"Orders assigned and status updated successfully:\", result);\r\n        await dispatch(fetchOrders());\r\n      } else {\r\n        throw new Error(\r\n          \"Failed to assign delivery boy and update order status\"\r\n        );\r\n      }\r\n\r\n      window.location.reload();\r\n      setIsAssignOrdersModalVisible(false);\r\n    } catch (error) {\r\n      console.error(\r\n        \"Error assigning delivery boy and updating order status:\",\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleSelectAssigneeChange = ({ detail }) => {\r\n    setSelectedAssignee(detail.selectedOption);\r\n  };\r\n  const handleAssignOrdersModalCancel = () => {\r\n    setIsAssignOrdersModalVisible(false);\r\n  };\r\n  const handleAssignOrdersClick = () => {\r\n    setIsAssignOrdersModalVisible(true);\r\n  };\r\n\r\n  const randomNames = [\r\n    { label: \"sohail\", value: \"sohail\" },\r\n    { label: \"Jane Smith\", value: \"jane_smith\" },\r\n    { label: \"Alice Johnson\", value: \"alice_johnson\" },\r\n  ];\r\n\r\n  const handleMoveToDeliveredClick = () => {\r\n    setIsMoveToDeliveredModalVisible(true);\r\n  };\r\n\r\n  const handleMoveToDeliveredModalCancel = () => {\r\n    setIsMoveToDeliveredModalVisible(false);\r\n  };\r\n\r\n  const handleMoveToDeliveredModalConfirm = async () => {\r\n    try {\r\n      if (!Array.isArray(selectedItems) || selectedItems.length === 0) {\r\n        throw new Error(\"No items selected or invalid selection.\");\r\n      }\r\n      const orderIds = selectedItems.map((item) => item.id);\r\n      const result = await dispatch(\r\n        updateOrderStatus({ ids: orderIds, status: \"Delivered\" })\r\n      ).unwrap();\r\n      if (result.message === \"success\") {\r\n        console.log(\"Order status updated to delivered successfully:\", result);\r\n        await dispatch(fetchOrders());\r\n      } else {\r\n        throw new Error(\"Failed to update order status\");\r\n      }\r\n      window.location.reload();\r\n      setIsMoveToDeliveredModalVisible(false);\r\n    } catch (error) {\r\n      console.error(\"Error updating order status:\", error);\r\n    }\r\n  };\r\n\r\n \r\n\r\n  return (\r\n    <ContentLayout\r\n      headerVariant=\"high-contrast\"\r\n      breadcrumbs={\r\n        <BreadcrumbGroup\r\n          items={[\r\n            { text: \"Dashboard\", href: \"/app/Dashboard\" },\r\n            { text: \"Orders\", href: \"#\" },\r\n          ]}\r\n          ariaLabel=\"Breadcrumbs\"\r\n        />\r\n      }\r\n      header={<Header variant=\"h1\">Orders</Header>}\r\n    >\r\n      <SpaceBetween direction=\"vertical\" size=\"xl\">\r\n        <Container className=\"top-container\" style={{ marginBottom: \"1rem\" }}>\r\n          <ColumnLayout columns={5} variant=\"default\" minColumnWidth={170}>\r\n            <div>\r\n              <Box variant=\"awsui-key-label\">\r\n                <p style={{ fontSize: 12, fontWeight: \"bold\" }}>Total Orders</p>\r\n              </Box>\r\n              <span\r\n                style={{\r\n                  fontSize: 34,\r\n                  fontWeight: \"900\",\r\n                  lineHeight: 1.3,\r\n                  color: \"#1D4ED8\",\r\n                }}\r\n              >\r\n                {orderStatus?.data?.totalOrderCount || \"N/A\"}\r\n              </span>\r\n            </div>\r\n            <div>\r\n              <Box variant=\"awsui-key-label\">\r\n                <p style={{ fontSize: 12, fontWeight: \"bold\" }}>\r\n                  Orders Completed\r\n                </p>\r\n              </Box>\r\n              <span\r\n                style={{\r\n                  fontSize: 34,\r\n                  fontWeight: \"900\",\r\n                  lineHeight: 1.3,\r\n                  color: \"#1D4ED8\",\r\n                }}\r\n              >\r\n                {orderStatus?.data?.completedOrderCount}\r\n              </span>\r\n            </div>\r\n            <div>\r\n              <Box variant=\"awsui-key-label\">\r\n                <p style={{ fontSize: 12, fontWeight: \"bold\" }}>\r\n                  Orders Confirmed\r\n                </p>\r\n              </Box>\r\n              <span\r\n                style={{\r\n                  fontSize: 34,\r\n                  fontWeight: \"900\",\r\n                  lineHeight: 1.3,\r\n                  color: \"#1D4ED8\",\r\n                }}\r\n              >\r\n                {orderStatus?.data?.confirmedOrderCount}\r\n              </span>\r\n            </div>\r\n            <div>\r\n              <Box variant=\"awsui-key-label\">\r\n                <p style={{ fontSize: 12, fontWeight: \"bold\" }}>\r\n                  Orders Cancelled\r\n                </p>\r\n              </Box>\r\n              <span\r\n                style={{\r\n                  fontSize: 34,\r\n                  fontWeight: \"900\",\r\n                  lineHeight: 1.3,\r\n                  color: \"#1D4ED8\",\r\n                }}\r\n              >\r\n                {orderStatus?.data?.cancelledOrderCount}\r\n              </span>\r\n            </div>\r\n            <div>\r\n              <Box variant=\"awsui-key-label\">\r\n                <p style={{ fontSize: 12, fontWeight: \"bold\" }}>\r\n                  Orders Refunded\r\n                </p>\r\n              </Box>\r\n              <span\r\n                style={{\r\n                  fontSize: 34,\r\n                  fontWeight: \"900\",\r\n                  lineHeight: 1.3,\r\n                  color: \"#1D4ED8\",\r\n                }}\r\n              >\r\n                {orderStatus?.data?.refundedOrderCount}\r\n              </span>\r\n            </div>\r\n          </ColumnLayout>\r\n        </Container>\r\n\r\n        <SpaceBetween direction=\"vertical\" size=\"s\">\r\n          <Box>\r\n            <Grid\r\n              disableGutters\r\n              gridDefinition={[\r\n                { colspan: { default: 12, xxs: 6 } },\r\n                { colspan: { default: 12, xxs: 6 } },\r\n              ]}\r\n            >\r\n              <div style={{ display: \"flex\", gap: \"0.4rem\" }}>\r\n                <TextFilter\r\n                  filteringPlaceholder=\"Search\"\r\n                  filteringText={filteringText}\r\n                  onChange={handleSearchChange}\r\n                />\r\n                <Select\r\n                  options={selectOptions}\r\n                  selectedOption={\r\n                    selectOptions.find(\r\n                      (option) => option.value === activeButton\r\n                    )\r\n                      ? {\r\n                          label:\r\n                            activeButton === \"Order Confirmed\"\r\n                              ? \"Sort By Status\"\r\n                              : activeButton === \"packed\"\r\n                              ? \"Sort By Pack\"\r\n                              : activeButton === \"on the way\"\r\n                              ? \"Sort By On The Way\"\r\n                              : activeButton === \"delivered\"\r\n                              ? \"Sort By Delivered\"\r\n                              : \"Sort By Status\",\r\n                          value: activeButton,\r\n                        }\r\n                      : null\r\n                  }\r\n                  onChange={handleSelectChange}\r\n                />\r\n\r\n{activeButton === \"delivered\" && (\r\n  <Select\r\n    selectedOption={selectedOption}\r\n    onChange={({ detail }) => setSelectedOption(detail.selectedOption)}\r\n    options={[\r\n      { label: \"7 Days Old\", value: \"1\" },\r\n      { label: \"14 Days Old\", value: \"2\" },\r\n      { label: \"1 Month Old\", value: \"3\" },\r\n      { label: \"2 Month Old\", value: \"4\" },\r\n      { label: \"Old Orders\", value: \"5\" },\r\n    ]}\r\n    placeholder=\"Completed Order\"\r\n  />\r\n)}\r\n              </div>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"flex-end\",\r\n                }}\r\n              >\r\n                {activeButton === \"Order Confirmed\" && (\r\n                  <Button\r\n                    disabled={selectedItems.length === 0}\r\n                    onClick={handleMoveToPackedClick}\r\n                  >\r\n                    Move to Packed\r\n                  </Button>\r\n                )}\r\n\r\n                {/* Conditionally render the Assign Orders button */}\r\n                {activeButton === \"packed\" && (\r\n                  <Button\r\n                    disabled={selectedItems.length === 0}\r\n                    onClick={handleAssignOrdersClick}\r\n                  >\r\n                    Assign Orders\r\n                  </Button>\r\n                )}\r\n\r\n                {/* Conditionally render the Move to Delivery button */}\r\n                {activeButton === \"on the way\" && (\r\n                  <Button\r\n                    disabled={selectedItems.length === 0}\r\n                    onClick={handleMoveToDeliveredClick}\r\n                  >\r\n                    Move to Delivered\r\n                  </Button>\r\n                )}\r\n\r\n                <Pagination\r\n                  currentPageIndex={currentPage}\r\n                  onChange={({ detail }) =>\r\n                    handlePageChange(detail.currentPageIndex)\r\n                  }\r\n                  openEnd\r\n                  pagesCount={5}\r\n                />\r\n              </div>\r\n            </Grid>\r\n          </Box>\r\n\r\n          {/* Modal definition */}\r\n          <Modal\r\n            onDismiss={handleMoveToPackedModalCancel}\r\n            visible={isMoveToPackedModalVisible}\r\n            footer={\r\n              <Box float=\"right\">\r\n                <SpaceBetween direction=\"horizontal\" size=\"xs\">\r\n                  <Button\r\n                    variant=\"link\"\r\n                    onClick={handleMoveToPackedModalCancel}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    onClick={handleMoveToPackedModalConfirm}\r\n                  >\r\n                    Confirm\r\n                  </Button>\r\n                </SpaceBetween>\r\n              </Box>\r\n            }\r\n            header=\"Move to Packed Orders\"\r\n          >\r\n            Are you sure you want to move the selected orders to the 'Packed\r\n            Orders' stage?\r\n          </Modal>\r\n\r\n          {/* Assign Orders Modal */}\r\n          <Modal\r\n            onDismiss={handleAssignOrdersModalCancel}\r\n            visible={isAssignOrdersModalVisible}\r\n            footer={\r\n              <Box float=\"right\">\r\n                <SpaceBetween direction=\"horizontal\" size=\"xs\">\r\n                  <Button\r\n                    variant=\"link\"\r\n                    onClick={handleAssignOrdersModalCancel}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    onClick={handleAssignOrdersModalConfirm}\r\n                  >\r\n                    Assign\r\n                  </Button>\r\n                </SpaceBetween>\r\n              </Box>\r\n            }\r\n            header=\"Assign Orders\"\r\n          >\r\n            <h3 style={{ marginBottom: \"0.5em\" }}>Select Assignee</h3>\r\n            <Select\r\n              options={randomNames}\r\n              selectedOption={selectedAssignee}\r\n              onChange={handleSelectAssigneeChange}\r\n              placeholder=\"Select Assignee\"\r\n              invalid={isFormSubmittedWithoutSelection && !selectedAssignee}\r\n            />\r\n          </Modal>\r\n          <Modal\r\n            onDismiss={handleMoveToDeliveredModalCancel}\r\n            visible={isMoveToDeliveredModalVisible}\r\n            footer={\r\n              <Box float=\"right\">\r\n                <SpaceBetween direction=\"horizontal\" size=\"xs\">\r\n                  <Button\r\n                    variant=\"link\"\r\n                    onClick={handleMoveToDeliveredModalCancel}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    onClick={handleMoveToDeliveredModalConfirm}\r\n                  >\r\n                    Confirm\r\n                  </Button>\r\n                </SpaceBetween>\r\n              </Box>\r\n            }\r\n            header=\"Move to Delivered\"\r\n          >\r\n            Are you sure you want to move the selected orders to the Delivered\r\n            Orders stage?\r\n          </Modal>\r\n\r\n          <Table\r\n            renderAriaLive={({ firstIndex, lastIndex, totalItemsCount }) =>\r\n              `Displaying items ${\r\n                firstIndex + 1\r\n              } to ${lastIndex} of ${totalItemsCount}`\r\n            }\r\n            onSelectionChange={({ detail }) =>\r\n              setSelectedItems(detail.selectedItems)\r\n            }\r\n            selectedItems={selectedItems}\r\n            ariaLabels={{\r\n              selectionGroupLabel: \"Items selection\",\r\n              allItemsSelectionLabel: ({ selectedItems }) =>\r\n                `${selectedItems.length} ${\r\n                  selectedItems.length === 1 ? \"item\" : \"items\"\r\n                } selected`,\r\n              itemSelectionLabel: ({ selectedItems }, item) => item.name,\r\n            }}\r\n            items={filteredOrders}\r\n            columnDefinitions={[\r\n              {\r\n                id: \"id\",\r\n                header: \"Order ID\",\r\n                cell: (item) =>\r\n                  item.id ? (\r\n                    <Link to={`/app/order/orderdetail/${item.id}`}>\r\n                      #{item.id}\r\n                    </Link>\r\n                  ) : (\r\n                    \"N/A\"\r\n                  ),\r\n              },\r\n\r\n              {\r\n                id: \"orderDate\",\r\n                header: \"Order Date\",\r\n                cell: (item) => {\r\n                  if (!item.orderDate) {\r\n                    return \"N/A\";\r\n                  }\r\n                  const date = new Date(item.orderDate);\r\n                  const options = {\r\n                    day: \"2-digit\",\r\n                    month: \"2-digit\",\r\n                    year: \"numeric\",\r\n                  };\r\n                  return date\r\n                    .toLocaleDateString(\"en-GB\", options)\r\n                    .replace(/\\//g, \"-\");\r\n                },\r\n              },\r\n              {\r\n                id: \"customerName\",\r\n                header: \"Customer Name\",\r\n                cell: (item) => {\r\n                  if (\r\n                    item.customerName &&\r\n                    item.customerName &&\r\n                    item.customerName\r\n                  ) {\r\n                    return item.customerName;\r\n                  }\r\n                  return \"N/A\";\r\n                },\r\n              },\r\n              {\r\n                id: \"item\",\r\n                header: \"Item\",\r\n                cell: (item) => {\r\n                  if (item.items) {\r\n                    const itemCount = item.items;\r\n                    return itemCount === 1\r\n                      ? `${itemCount} Item`\r\n                      : `${itemCount} Items`;\r\n                  }\r\n                  return \"N/A\";\r\n                },\r\n              },\r\n              {\r\n                id: \"paymentStatus\",\r\n                header: \"Payment Status\",\r\n                cell: (item) => item.paymentStatus || \"N/A\",\r\n              },\r\n              {\r\n                id: \"orderStatus\",\r\n                header: \"Order Status\",\r\n                cell: (item) =>\r\n              (item.orderStatus) || \"N/A\",\r\n              },\r\n\r\n              {\r\n                id: \"totalAmount\",\r\n                header: \"Total Amount\",\r\n                cell: (item) =>\r\n                  item.totalAmount ? `Rs. ${item.totalAmount}` : \"N/A\",\r\n              },\r\n              {\r\n                id: \"area\",\r\n                header: \"Delivery Area\",\r\n                cell: (item) => item.area || \"N/A\",\r\n              },\r\n              ...(activeButton === \"on the way\" || activeButton === \"delivered\"\r\n                ? [\r\n                    {\r\n                      id: \"assignee\",\r\n                      header: \"Assignee\",\r\n                      cell: (item) => item.assignee || \"N/A\",\r\n                    },\r\n                  ]\r\n                : []),\r\n            ]}\r\n          \r\n            \r\n            loadingText=\"Loading resources\"\r\n            selectionType=\"multi\"\r\n            trackBy=\"id\"\r\n            variant=\"borderless\"\r\n            empty={\r\n              <Box\r\n                margin={{ vertical: \"xs\" }}\r\n                textAlign=\"center\"\r\n                color=\"inherit\"\r\n              >\r\n                <SpaceBetween size=\"m\">\r\n                  <b>No Orders</b>\r\n                </SpaceBetween>\r\n              </Box>\r\n            }\r\n          />\r\n        </SpaceBetween>\r\n      </SpaceBetween>\r\n    </ContentLayout>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n"],"names":["Orders","_orderStatus$data","_orderStatus$data2","_orderStatus$data3","_orderStatus$data4","_orderStatus$data5","dispatch","useDispatch","ordersData","useSelector","state","orders","orderStatus","order_status","data","items","React","selectedItems","setSelectedItems","useState","currentPage","setCurrentPage","activeButton","setActiveButton","filteringText","setFilteringText","selectedAssignee","setSelectedAssignee","isAssignOrdersModalVisible","setIsAssignOrdersModalVisible","isMoveToPackedModalVisible","setIsMoveToPackedModalVisible","isMoveToDeliveredModalVisible","setIsMoveToDeliveredModalVisible","filteredOrders","setFilteredOrders","isFormSubmittedWithoutSelection","setIsFormSubmittedWithoutSelection","selectedOption","setSelectedOption","useEffect","fetchOrders","search","status","fetchOrderStatus","applyFilter","filtered","filter","order","prevFilteredOrders","JSON","stringify","label","value","selectOptions","handleMoveToPackedModalCancel","handleAssignOrdersModalCancel","handleMoveToDeliveredModalCancel","_jsx","ContentLayout","headerVariant","breadcrumbs","BreadcrumbGroup","text","href","ariaLabel","header","Header","variant","children","_jsxs","SpaceBetween","direction","size","Container","className","style","marginBottom","ColumnLayout","columns","minColumnWidth","Box","fontSize","fontWeight","lineHeight","color","totalOrderCount","completedOrderCount","confirmedOrderCount","cancelledOrderCount","refundedOrderCount","Grid","disableGutters","gridDefinition","colspan","default","xxs","display","gap","TextFilter","filteringPlaceholder","onChange","e","detail","Select","options","find","option","async","_ref","newStatus","_ref3","placeholder","justifyContent","Button","disabled","length","onClick","handleMoveToPackedClick","handleAssignOrdersClick","handleMoveToDeliveredClick","Pagination","currentPageIndex","_ref4","pageIndex","handlePageChange","openEnd","pagesCount","Modal","onDismiss","visible","footer","float","Array","isArray","Error","orderIds","map","item","id","result","updateOrderStatus","ids","unwrap","message","console","log","window","location","reload","error","assignee","assignDeliveryBoyAndMoveToOnTheWay","_ref2","invalid","Table","renderAriaLive","_ref5","firstIndex","lastIndex","totalItemsCount","concat","onSelectionChange","_ref6","ariaLabels","selectionGroupLabel","allItemsSelectionLabel","_ref7","itemSelectionLabel","_ref8","name","columnDefinitions","cell","Link","to","orderDate","Date","toLocaleDateString","day","month","year","replace","customerName","itemCount","paymentStatus","totalAmount","area","loadingText","selectionType","trackBy","empty","margin","vertical","textAlign"],"sourceRoot":""}