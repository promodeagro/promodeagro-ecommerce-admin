{"version":3,"file":"static/js/922.7d9f26d8.chunk.js","mappings":"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","sources":["Views/Postlogin/Dashboard/DashboardCards/SelectFilter.js","Views/Postlogin/Dashboard/DashboardCards/RecentOrders.js","Views/Postlogin/Dashboard/DashboardCards/Expenses.js","Views/Postlogin/Dashboard/DashboardCards/SalesReport.js","Views/Postlogin/Dashboard/DashboardCards/CustomerTraffic.js","Views/Postlogin/Dashboard/DashboardCards/BestSellingProducts.js","Views/Postlogin/Dashboard/DashboardCards/Refundorders.js","Views/Postlogin/Dashboard/index.js"],"sourcesContent":["import React from 'react';\r\nimport { Select } from '@cloudscape-design/components';\r\n\r\nconst SelectFilter = ({ selectedFilter, onFilterChange, filterOptions }) => {\r\n  return (\r\n    <Select\r\n      selectedOption={{ label: selectedFilter, value: selectedFilter }}\r\n      onChange={onFilterChange}\r\n      options={filterOptions}\r\n      ariaLabel=\"Filter by date\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default SelectFilter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchOrders } from \"Redux-Store/Orders/OrdersThunk\";\r\nimport {\r\n  Table,\r\n  Container,\r\n  Box,\r\n  SpaceBetween,\r\n  Header,\r\n  Grid,\r\n  \r\n} from \"@cloudscape-design/components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SelectFilter from \"./SelectFilter\";\r\n\r\nconst RecentOrders = () => {\r\n  const dispatch = useDispatch();\r\n  const ordersData = useSelector((state) => state.orders.ordersData);\r\n  const { data = []} = ordersData;\r\n  useEffect(() => {\r\n    dispatch(fetchOrders());\r\n  }, [dispatch]);\r\n\r\n  const [filter, setFilter] = useState('7 days ago');\r\n  console.log(data.items,\"data\");\r\n\r\n  const handleFilterChange = ({ detail }) => {\r\n    setFilter(detail.selectedOption.value);\r\n  };\r\n\r\n  const getFilteredOrders = () => {\r\n    const now = new Date();\r\n    switch (filter) {\r\n      case 'Today':\r\n        return data?.items?.filter(order => new Date(order.orderDate).toDateString() === now.toDateString());\r\n      case '7 days ago':\r\n        return data?.items?.filter(order => new Date(order.orderDate) >= new Date(now.setDate(now.getDate() - 7)));\r\n      case '30 days ago':\r\n        return data?.items?.filter(order => new Date(order.orderDate) >= new Date(now.setDate(now.getDate() - 30)));\r\n      case '6 months ago':\r\n        return data?.items?.filter(order => new Date(order.orderDate) >= new Date(now.setMonth(now.getMonth() - 6)));\r\n      default:\r\n        return data?.items;\r\n    }\r\n  };\r\n  const filteredOrders = getFilteredOrders()?.slice(0, 7); // Get only top 10 orders\r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n  return (\r\n\r\n    <Container fitHeight={300}>\r\n         \r\n          <Table\r\n            header={\r\n            \r\n              <Grid\r\n              gridDefinition={[\r\n                { colspan: { default: 8, xxs: 8 } },\r\n                { colspan: { default: 4, xxs: 4 } }\r\n              ]}\r\n            >\r\n                <Header variant='h4'>Recent Orders</Header>\r\n                <Box padding={{ bottom: 'm' }}>\r\n                \r\n                  <SelectFilter\r\n                    selectedFilter={filter}\r\n                    onFilterChange={handleFilterChange}\r\n                    filterOptions={[\r\n                      { label: 'Today', value: 'Today' },\r\n                      { label: '7 days ago', value: '7 days ago' },\r\n                      { label: '30 days ago', value: '30 days ago' },\r\n                      { label: '6 months ago', value: '6 months ago' },\r\n                    ]}\r\n                  />\r\n                </Box>\r\n              </Grid>\r\n            }\r\n          \r\n            items={filteredOrders}\r\n            columnDefinitions={[\r\n              {\r\n                id: \"id\",\r\n                header: \"Order ID\",\r\n                cell: (item) =>\r\n                  item.id ? (\r\n                    <Link to={`/app/order/orderdetail`}>#{item.id}</Link>\r\n                  ) : (\r\n                    \"N/A\"\r\n                  ),\r\n              },\r\n\r\n              // {\r\n              //   id: \"orderDate\",\r\n              //   header: \"Order Date\",\r\n              //   cell: (item) => {\r\n              //     if (!item.orderDate) {\r\n              //       return \"N/A\";\r\n              //     }\r\n              //     const date = new Date(item.orderDate);\r\n              //     const options = {\r\n              //       day: \"2-digit\",\r\n              //       month: \"2-digit\",\r\n              //       year: \"numeric\",\r\n              //     };\r\n              //     return date\r\n              //       .toLocaleDateString(\"en-GB\", options)\r\n              //       .replace(/\\//g, \"-\"); \r\n              //   },\r\n              // },\r\n              {\r\n                id: \"customerName\",\r\n                header: \"Customer Name\",\r\n                cell: (item) => {\r\n                  if (\r\n                    item.customerName &&\r\n                    item.customerName &&\r\n                    item.customerName\r\n                  ) {\r\n                    return item.customerName;\r\n                  }\r\n                  return \"N/A\";\r\n                },\r\n              },\r\n           \r\n              {\r\n                id: \"orderStatus\",\r\n                header: \"Order Status\",\r\n                cell: (item) => item.orderStatus || \"N/A\",\r\n              },\r\n\r\n              {\r\n                id: \"totalAmount\",\r\n                header: \"Total Amount\",\r\n                cell: (item) =>\r\n                  item.totalAmount ? `Rs. ${item.totalAmount}` : \"N/A\",\r\n              },\r\n              {\r\n                id: \"area\",\r\n                header: \"Delivery Area\",\r\n                cell: (item) => item.area || \"N/A\",\r\n              },\r\n            ]}\r\n            loadingText=\"Loading resources\"\r\n         \r\n            trackBy=\"id\"\r\n            variant=\"borderless\"\r\n            empty={\r\n              <Box\r\n                margin={{ vertical: \"xs\" }}\r\n                textAlign=\"center\"\r\n                color=\"inherit\"\r\n              >\r\n                <SpaceBetween size=\"m\">\r\n                  <b>No Orders</b>\r\n                </SpaceBetween>\r\n              </Box>\r\n            }\r\n          />\r\n          </Container>\r\n \r\n\r\n  );\r\n};\r\n\r\nexport default RecentOrders;","import React, { useState } from 'react';\nimport {\n  BarChart,\n  Box,\n  Container,\n  Header,\n  Grid\n} from '@cloudscape-design/components';\nimport SelectFilter from './SelectFilter'; // Import the reusable SelectFilter component\n\nconst Expenses = () => {\n  const expenses = [\n    { category: 'Procurement', amount: 1500, date: new Date() },\n    { category: 'Payroll', amount: 500, date: new Date() },\n    { category: 'Sales', amount: 1000, date: new Date() },\n    { category: 'Payroll', amount: 3000, date: new Date(new Date().setDate(new Date().getDate() - 5)) },\n    { category: 'Sales', amount: 2000, date: new Date(new Date().setDate(new Date().getDate() - 15)) },\n    { category: 'Procurement', amount: 1200, date: new Date(new Date().setDate(new Date().getDate() - 25)) },\n    { category: 'Payroll', amount: 3200, date: new Date(new Date().setDate(new Date().getDate() - 45)) },\n  ];\n\n  const [filter, setFilter] = useState('Today');\n\n  const handleFilterChange = ({ detail }) => {\n    setFilter(detail.selectedOption.value);\n  };\n\n  const getFilteredExpenses = () => {\n    const now = new Date();\n    switch (filter) {\n      case 'Today':\n        return expenses.filter(expense => expense.date.toDateString() === now.toDateString());\n      case '7 days ago':\n        return expenses.filter(expense => expense.date >= new Date(now.setDate(now.getDate() - 7)));\n      case '30 days ago':\n        return expenses.filter(expense => expense.date >= new Date(now.setDate(now.getDate() - 30)));\n      case '6 months ago':\n        return expenses.filter(expense => expense.date >= new Date(now.setMonth(now.getMonth() - 6)));\n      default:\n        return expenses;\n    }\n  };\n\n  const filteredExpenses = getFilteredExpenses();\n\n  const dataSeries = filteredExpenses.reduce((acc, expense) => {\n    const existingCategory = acc.find(item => item.category === expense.category);\n    if (existingCategory) {\n      existingCategory.amount += expense.amount;\n    } else {\n      acc.push({ category: expense.category, amount: expense.amount });\n    }\n    return acc;\n  }, []);\n\n  return (\n    <Container  \n    header={\n      <Grid\n            gridDefinition={[\n              { colspan: { default: 8, xxs: 8 } },\n              { colspan: { default: 4, xxs: 4 } }\n            ]}\n          >\n        <Header variant='h4'>Expenses</Header>\n        <Box padding={{ bottom: 'm' }}>\n          <SelectFilter\n            selectedFilter={filter}\n            onFilterChange={handleFilterChange}\n            filterOptions={[\n              { label: 'Today', value: 'Today' },\n              { label: '7 days ago', value: '7 days ago' },\n              { label: '30 days ago', value: '30 days ago' },\n              { label: '6 months ago', value: '6 months ago' },\n            ]}\n          />\n        </Box>\n      </Grid>\n    }>\n\n\n      <BarChart\n        series={[\n          {\n            title: 'Expenses',\n            type: 'bar',\n            data: dataSeries.map(item => ({ x: item.category, y: item.amount })),\n          },\n        ]}\n        xDomain={dataSeries.map(item => item.category)}\n        yDomain={[0, Math.max(...dataSeries.map(item => item.amount)) + 500]}\n        i18nStrings={{\n          yTickFormat: value => `$${value}`,\n          xTickFormat: value => `${value}`,\n        }}\n        ariaLabel=\"Expenses Bar Chart\"\n        height={300}\n        hideFilter\n        hideLegend\n      />\n    </Container>\n  );\n};\n\nexport default Expenses;\n","import React, { useState } from 'react';\nimport {\n  LineChart,\n  Box,\n  Container,\n  Header,\n  Grid\n} from '@cloudscape-design/components';\nimport SelectFilter from './SelectFilter'; // Import the reusable SelectFilter component\n\nconst SalesReports = () => {\n  // Sample data with time-based entries\n  const salesData = {\n    'Today': [\n      { x: new Date().setHours(8, 0, 0, 0), y: 5000 },\n      { x: new Date().setHours(9, 0, 0, 0), y: 4000 },\n      { x: new Date().setHours(10, 0, 0, 0), y: 9000 },\n      { x: new Date().setHours(11, 0, 0, 0), y: 6000 },\n      { x: new Date().setHours(12, 0, 0, 0), y: 7000 },\n    ],\n    '7 days ago': [\n      { x: new Date().setDate(new Date().getDate() - 6), y: 20000 },\n      { x: new Date().setDate(new Date().getDate() - 5), y: 22000 },\n      { x: new Date().setDate(new Date().getDate() - 4), y: 21000 },\n      { x: new Date().setDate(new Date().getDate() - 3), y: 25000 },\n      { x: new Date().setDate(new Date().getDate() - 2), y: 27000 },\n    ],\n    '30 days ago': [\n      { x: new Date().setDate(new Date().getDate() - 29), y: 50000 },\n      { x: new Date().setDate(new Date().getDate() - 28), y: 55000 },\n      { x: new Date().setDate(new Date().getDate() - 27), y: 52000 },\n      { x: new Date().setDate(new Date().getDate() - 26), y: 58000 },\n      { x: new Date().setDate(new Date().getDate() - 25), y: 60000 },\n    ],\n    '6 months ago': [\n      { x: new Date().setMonth(new Date().getMonth() - 5), y: 150000 },\n      { x: new Date().setMonth(new Date().getMonth() - 4), y: 170000 },\n      { x: new Date().setMonth(new Date().getMonth() - 3), y: 160000 },\n      { x: new Date().setMonth(new Date().getMonth() - 2), y: 180000 },\n      { x: new Date().setMonth(new Date().getMonth() - 1), y: 190000 },\n    ],\n  };\n\n  const [filter, setFilter] = useState('Today');\n\n  const handleFilterChange = ({ detail }) => {\n    setFilter(detail.selectedOption.value);\n  };\n\n  const filteredData = salesData[filter] || salesData['Today'];\n\n  const xTickFormatter = (x) => {\n    const date = new Date(x);\n    if (filter === 'Today') {\n      return date.toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit', hour12: false });\n    } else {\n      return date.toLocaleDateString('en-US');\n    }\n  };\n\n  return (\n    <Container \n    header={\n      <Grid\n      gridDefinition={[\n        { colspan: { default: 8, xxs: 8 } },\n        { colspan: { default: 4, xxs: 4 } }\n      ]}\n    >\n        <Header variant='h4'>Sales Report</Header>\n        <Box padding={{ bottom: 'm' }}>\n          <SelectFilter\n            selectedFilter={filter}\n            onFilterChange={handleFilterChange}\n            filterOptions={[\n              { label: 'Today', value: 'Today' },\n              { label: '7 days ago', value: '7 days ago' },\n              { label: '30 days ago', value: '30 days ago' },\n              { label: '6 months ago', value: '6 months ago' },\n            ]}\n          />\n        </Box>\n      </Grid>\n    }\n    >\n      <LineChart\n        series={[\n          {\n            title: 'Sales Data',\n            type: 'line',\n            data: filteredData,\n            valueFormatter: (y) => `₹${y.toLocaleString()}`,\n          },\n        ]}\n        xDomain={[Math.min(...filteredData.map(d => d.x)), Math.max(...filteredData.map(d => d.x))]}\n        yDomain={[0, Math.max(...filteredData.map(d => d.y)) + 5000]}\n        i18nStrings={{\n          xTickFormatter,\n          yTickFormatter: (y) => `₹${y.toLocaleString()}`,\n        }}\n        ariaLabel=\"Sales Line Chart\"\n        height={300}\n        hideFilter\n        hideLegend\n      />\n    </Container>\n  );\n};\n\nexport default SalesReports;\n","import React, { useState } from 'react';\nimport {\n  PieChart,\n  Box,\n  Container,\n  Header,\n  Grid,\n  Button,\n} from '@cloudscape-design/components';\nimport SelectFilter from './SelectFilter';\n\nconst data = [\n  { platform: \"Instagram\", visitors: 100, date: new Date() },\n  { platform: \"Facebook\", visitors: 200, date: new Date() },\n  { platform: \"Twitter\", visitors: 150, date: new Date() },\n  { platform: \"Instagram\", visitors: 200, date: new Date(\"2024-08-8\") },\n  { platform: \"Facebook\", visitors: 300, date: new Date(\"2024-07-31\") },\n  { platform: \"Twitter\", visitors: 180, date: new Date(\"2024-07-25\") },\n  { platform: \"Website\", visitors: 500, date: new Date(\"2024-07-10\") },\n  { platform: \"WhatsApp\", visitors: 350, date: new Date(\"2024-06-15\") },\n];\n\nconst CustomerTraffic = () => {\n  const [filter, setFilter] = useState('Today');\n\n  const handleFilterChange = ({ detail }) => {\n    setFilter(detail.selectedOption.value);\n  };\n\n  const getFilteredData = () => {\n    const now = new Date();\n    switch (filter) {\n      case 'Today':\n        return data.filter(item => item.date.toDateString() === now.toDateString());\n      case '7 days ago':\n        return data.filter(item => item.date >= new Date(now.setDate(now.getDate() - 7)));\n      case '30 days ago':\n        return data.filter(item => item.date >= new Date(now.setDate(now.getDate() - 30)));\n      case '6 months ago':\n        return data.filter(item => item.date >= new Date(now.setMonth(now.getMonth() - 6)));\n      default:\n        return data;\n    }\n  };\n\n  const filteredData = getFilteredData();\n  const totalVisitors = filteredData.reduce((sum, item) => sum + item.visitors, 0);\n\n  return (\n    <Container  \n    header={\n      <Grid\n      gridDefinition={[\n        { colspan: { default: 8, xxs: 8 } },\n        { colspan: { default: 4, xxs: 4 } }\n      ]}\n    >\n        <Header variant='h4'>Customer Traffic</Header>\n        <Box padding={{ bottom: 'm' }}>\n          <SelectFilter\n            selectedFilter={filter}\n            onFilterChange={handleFilterChange}\n            filterOptions={[\n              { label: 'Today', value: 'Today' },\n              { label: '7 days ago', value: '7 days ago' },\n              { label: '30 days ago', value: '30 days ago' },\n              { label: '6 months ago', value: '6 months ago' },\n            ]}\n          />\n        </Box>\n      </Grid>\n    }>\n      \n      <PieChart\n        data={filteredData.map(item => ({\n          title: item.platform,\n          value: item.visitors,\n        }))}\n        detailPopoverContent={(datum) => [\n          { key: \"Platform\", value: datum.title },\n          { key: \"Percentage\", value: `${((datum.value / totalVisitors) * 100).toFixed(0)}%` }\n        ]}\n        segmentDescription={(datum) =>\n          `${((datum.value / totalVisitors) * 100).toFixed(0)}%`\n        }\n        hideLegend\n        hideFilter\n        ariaDescription=\"Pie chart showing the percentage of customer traffic from various platforms.\"\n        ariaLabel=\"Pie chart\"\n        height={300}\n        empty={\n          <Box textAlign=\"center\" color=\"inherit\">\n            <b>No data available</b>\n            <Box variant=\"p\" color=\"inherit\">\n              There is no data available\n            </Box>\n          </Box>\n        }\n        noMatch={\n          <Box textAlign=\"center\" color=\"inherit\">\n            <b>No matching data</b>\n            <Box variant=\"p\" color=\"inherit\">\n              There is no matching data to display\n            </Box>\n            <Button>Clear filter</Button>\n          </Box>\n        }\n      />\n    </Container>\n  );\n};\n\nexport default CustomerTraffic;\n","import React, { useState } from 'react';\r\nimport {\r\n  Table,\r\n  Box,\r\n  SpaceBetween,\r\n  Button,\r\n  Header,\r\n  Link,\r\n  Grid,\r\n  Container\r\n} from '@cloudscape-design/components';\r\nimport SelectFilter from './SelectFilter'; // Import the reusable SelectFilter component\r\n\r\nconst BestSellingProducts = () => {\r\n  const products = [\r\n    { code: 'P001', name: 'Tomatoes', category: 'Vegetables', stock: 100, status: 'Published', date: new Date() },\r\n    { code: 'P002', name: 'Potatoes', category: 'Vegetables', stock: 50, status: 'Draft', date: new Date(new Date().setDate(new Date().getDate() - 5)) },\r\n    { code: 'P003', name: 'Carrots', category: 'Vegetables', stock: 200, status: 'Published', date: new Date(new Date().setDate(new Date().getDate() - 15)) },\r\n    { code: 'P004', name: 'Onions', category: 'Vegetables', stock: 150, status: 'Stopped', date: new Date(new Date().setDate(new Date().getDate() - 25)) },\r\n    { code: 'P005', name: 'Cucumbers', category: 'Vegetables', stock: 300, status: 'Published', date: new Date(new Date().setDate(new Date().getDate() - 45)) },\r\n  ];\r\n\r\n  const [filter, setFilter] = useState('Today');\r\n\r\n  const handleFilterChange = ({ detail }) => {\r\n    setFilter(detail.selectedOption.value);\r\n  };\r\n\r\n  const getFilteredProducts = () => {\r\n    const now = new Date();\r\n    switch (filter) {\r\n      case 'Today':\r\n        return products.filter(product => product.date.toDateString() === now.toDateString());\r\n      case '7 days ago':\r\n        return products.filter(product => product.date >= new Date(now.setDate(now.getDate() - 7)));\r\n      case '30 days ago':\r\n        return products.filter(product => product.date >= new Date(now.setDate(now.getDate() - 30)));\r\n      case '6 months ago':\r\n        return products.filter(product => product.date >= new Date(now.setMonth(now.getMonth() - 6)));\r\n      default:\r\n        return products;\r\n    }\r\n  };\r\n\r\n  return (\r\n    \r\n    <Container fitHeight={300}>\r\n      <Table variant='borderless'\r\n        header={\r\n          <Grid\r\n            gridDefinition={[\r\n              { colspan: { default: 8, xxs: 8 } },\r\n              { colspan: { default: 4, xxs: 4 } }\r\n            ]}\r\n          >\r\n            <Header variant='h4'>Best Selling Products</Header>\r\n            <Box padding={{ bottom: 'm' }}>\r\n              <SelectFilter\r\n                selectedFilter={filter}\r\n                onFilterChange={handleFilterChange}\r\n                filterOptions={[\r\n                  { label: 'Today', value: 'Today' },\r\n                  { label: '7 days ago', value: '7 days ago' },\r\n                  { label: '30 days ago', value: '30 days ago' },\r\n                  { label: '6 months ago', value: '6 months ago' },\r\n                ]}\r\n              />\r\n            </Box>\r\n          </Grid>\r\n        }\r\n        renderAriaLive={({ firstIndex, lastIndex, totalItemsCount }) =>\r\n          `Displaying items ${firstIndex} to ${lastIndex} of ${totalItemsCount}`\r\n        }\r\n        columnDefinitions={[\r\n          {\r\n            id: 'code',\r\n            header: 'Product Code',\r\n            cell: item => <Link variant='secondary'>{item.code}</Link>,\r\n            sortingField: 'code',\r\n            isRowHeader: true,\r\n          },\r\n          {\r\n            id: 'name',\r\n            header: 'Product Name',\r\n            cell: item => item.name,\r\n            sortingField: 'name',\r\n          },\r\n          {\r\n            id: 'category',\r\n            header: 'Category',\r\n            cell: item => item.category,\r\n            sortingField: 'category',\r\n          },\r\n          {\r\n            id: 'stock',\r\n            header: 'Stock',\r\n            cell: item => item.stock,\r\n            sortingField: 'stock',\r\n          },\r\n          {\r\n            id: 'status',\r\n            header: 'Status',\r\n            cell: item => item.status,\r\n            sortingField: 'status',\r\n          },\r\n        ]}\r\n        enableKeyboardNavigation\r\n        items={getFilteredProducts()}\r\n        loadingText=\"Loading products\"\r\n        selectedItems={[]}\r\n        empty={\r\n          <Box margin={{ vertical: 'xs' }} textAlign=\"center\" color=\"inherit\">\r\n            <SpaceBetween size=\"m\">\r\n              <b>No products found</b>\r\n              <Button>Add product</Button>\r\n            </SpaceBetween>\r\n          </Box>\r\n        }\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BestSellingProducts;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Table,\r\n  Box,\r\n  SpaceBetween,\r\n  Button,\r\n  Header,\r\n  Link,\r\n  Grid,\r\n  Container\r\n} from '@cloudscape-design/components';\r\nimport SelectFilter from './SelectFilter'; // Import the reusable component\r\n\r\nconst RefundOrders = () => {\r\n  const customers = [\r\n    { id: 'O001', name: 'John Doe', reason: 'Damaged Product', status: 'Refunded', area: 'Downtown', date: new Date() },\r\n    { id: 'O002', name: 'Jane Smith', reason: 'Late Delivery', status: 'In Process', area: 'Uptown', date: new Date(new Date().setDate(new Date().getDate() - 3)) },\r\n    { id: 'O003', name: 'Michael Johnson', reason: 'Wrong Item', status: 'Refunded', area: 'Suburbs', date: new Date(new Date().setDate(new Date().getDate() - 8)) },\r\n    { id: 'O004', name: 'Emily Davis', reason: 'No Reason Given', status: 'Rejected', area: 'Downtown', date: new Date(new Date().setDate(new Date().getDate() - 35)) },\r\n    { id: 'O005', name: 'Daniel Brown', reason: 'Changed Mind', status: 'Refunded', area: 'Midtown', date: new Date(new Date().setDate(new Date().getDate() - 100)) },\r\n    { id: 'O006', name: 'Jessica Miller', reason: 'Not Satisfied', status: 'In Process', area: 'Uptown', date: new Date(new Date().setDate(new Date().getDate() - 150)) },\r\n    { id: 'O007', name: 'David Wilson', reason: 'Item Defective', status: 'Refunded', area: 'Suburbs', date: new Date(new Date().setDate(new Date().getDate() - 200)) },\r\n  \r\n  ];\r\n\r\n  const [filter, setFilter] = useState('Today');\r\n\r\n  const handleFilterChange = ({ detail }) => {\r\n    setFilter(detail.selectedOption.value);\r\n  };\r\n\r\n  const getFilteredCustomers = () => {\r\n    const now = new Date();\r\n    switch (filter) {\r\n      case 'Today':\r\n        return customers.filter(customer => customer.date.toDateString() === now.toDateString());\r\n      case '7 days ago':\r\n        return customers.filter(customer => customer.date >= new Date(now.setDate(now.getDate() - 7)));\r\n      case '30 days ago':\r\n        return customers.filter(customer => customer.date >= new Date(now.setDate(now.getDate() - 30)));\r\n      case '6 months ago':\r\n        return customers.filter(customer => customer.date >= new Date(now.setMonth(now.getMonth() - 6)));\r\n      default:\r\n        return customers;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container fitHeight={300}>\r\n      <Table\r\n      variant='borderless'\r\n        header={\r\n          <Grid\r\n          gridDefinition={[\r\n            { colspan: { default: 8, xxs: 8 } },\r\n            { colspan: { default: 4, xxs: 4 } }\r\n          ]}\r\n        >\r\n            <Header variant='h4'>Refund Orders</Header>\r\n            <Box padding={{ bottom: 'm' }}>\r\n              <SelectFilter\r\n                selectedFilter={filter}\r\n                onFilterChange={handleFilterChange}\r\n                filterOptions={[\r\n                  { label: 'Today', value: 'Today' },\r\n                  { label: '7 days ago', value: '7 days ago' },\r\n                  { label: '30 days ago', value: '30 days ago' },\r\n                  { label: '6 months ago', value: '6 months ago' },\r\n                ]}\r\n              />\r\n            </Box>\r\n          </Grid>\r\n        }\r\n        renderAriaLive={({ firstIndex, lastIndex, totalItemsCount }) =>\r\n          `Displaying items ${firstIndex} to ${lastIndex} of ${totalItemsCount}`\r\n        }\r\n        columnDefinitions={[\r\n          {\r\n            id: 'id',\r\n            header: 'Order ID',\r\n            cell: item => <Link variant='secondary'>{item.id}</Link>,\r\n            sortingField: 'id',\r\n            isRowHeader: true,\r\n          },\r\n          {\r\n            id: 'name',\r\n            header: 'Customer Name',\r\n            cell: item => item.name,\r\n            sortingField: 'name',\r\n          },\r\n          {\r\n            id: 'reason',\r\n            header: 'Reason',\r\n            cell: item => item.reason,\r\n            sortingField: 'reason',\r\n          },\r\n          {\r\n            id: 'status',\r\n            header: 'Status',\r\n            cell: item => item.status,\r\n            sortingField: 'status',\r\n          },\r\n          {\r\n            id: 'area',\r\n            header: 'Delivery Area',\r\n            cell: item => item.area,\r\n            sortingField: 'area',\r\n          },\r\n        ]}\r\n        enableKeyboardNavigation\r\n        items={getFilteredCustomers()}\r\n        loadingText=\"Loading resources\"\r\n        selectedItems={[]}\r\n        empty={\r\n          <Box margin={{ vertical: 'xs' }} textAlign=\"center\" color=\"inherit\">\r\n            <SpaceBetween size=\"m\">\r\n              <b>No resources</b>\r\n              <Button>Create resource</Button>\r\n            </SpaceBetween>\r\n          </Box>\r\n        }\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RefundOrders;\r\n","import React from 'react';\nimport {\n  Box,\n  ColumnLayout,\n  Grid,\n  Popover,\n} from '@cloudscape-design/components';\nimport Container from '@cloudscape-design/components/container';\nimport Header from '@cloudscape-design/components/header';\nimport SpaceBetween from '@cloudscape-design/components/space-between';\nimport Button from '@cloudscape-design/components/button';\nimport ContentLayout from '@cloudscape-design/components/content-layout';\nimport Calendar from '@cloudscape-design/components/calendar';\nimport RecentOrders from './DashboardCards/RecentOrders';\n\nimport ExpensesByCatgry from './DashboardCards/Expenses';\nimport SalesReports from './DashboardCards/SalesReport';\nimport CustomerTraffic from './DashboardCards/CustomerTraffic';\nimport BestSellingProducts from './DashboardCards/BestSellingProducts';\nimport Refundorders from './DashboardCards/Refundorders';\n\nconst Dashboard = () => {\n  const [isPopoverVisible, setPopoverVisible] = React.useState(false);\n  const [selectedMonth, setSelectedMonth] = React.useState(getCurrentMonthYear());\n  const date = new Date();\n  const month = date.toLocaleString('default', { month: 'long' });\n  \n  function getCurrentMonthYear(date = new Date()) {\n    const monthNames = [\n      'January', 'February', 'March', 'April', 'May', 'June', 'July',\n      'August', 'September', 'October', 'November', 'December',\n    ];\n    const month = monthNames[date.getMonth()];\n    const year = date.getFullYear();\n    return `${month} ${year}`; \n  }\n\n  const handleButtonClick = () => {\n    setPopoverVisible(!isPopoverVisible);\n  };\n\n  const handleCalendarChange = ({ detail }) => {\n    const selectedDate = new Date(detail.value);\n    setSelectedMonth(getCurrentMonthYear(selectedDate));\n    setPopoverVisible(false);\n  };\n\n  return (\n    <>\n      <ContentLayout\n        headerVariant=\"high-contrast\"\n        header={\n          <Header\n            actions={\n              <SpaceBetween alignItems=\"center\" direction=\"horizontal\" size=\"xs\">\n                <div>\n                  <Popover\n                    triggerType=\"custom\"\n                    content={\n                      <Calendar\n                        onChange={handleCalendarChange}\n                        value={null} \n                        granularity=\"month\"\n                      />\n                    }\n                  >\n                    <Button onClick={handleButtonClick} variant=\"primary\" iconName='calendar'>\n                      {selectedMonth.startsWith(month) ? 'Calendar' : selectedMonth}\n                    </Button>\n                  </Popover>\n                </div>\n              </SpaceBetween>\n            }\n           \n            variant=\"h1\"\n          >\n            Dashboard\n          </Header>\n          \n        }\n      >\n        <SpaceBetween direction=\"vertical\" size=\"l\">\n        <Container className=\"top-container\" style={{ marginBottom: '1rem' }}>\n          <ColumnLayout columns={5} variant=\"default\" minColumnWidth={170}>\n            <div>\n\n              <Box variant=\"awsui-key-label\">\n                <p style={{ fontSize: 12 }}>Today's Sales</p>\n              </Box>\n              <span style={{ fontSize: 36, fontWeight: '900', lineHeight: 1.3, color: \"#0972D3\" }}>55</span>\n            </div>\n            <div>\n              <Box variant=\"awsui-key-label\">\n                <p style={{ fontSize: 12 }}>Today's Procurement</p>\n              </Box>\n              <span style={{ fontSize: 36, fontWeight: '900', lineHeight: 1.3, color: \"#0972D3\" }}>32.4K</span>\n            </div>\n            <div>\n              <Box variant=\"awsui-key-label\">\n                <p style={{ fontSize: 12 }}>Today's Orders</p>\n              </Box>\n              <span style={{ fontSize: 36, fontWeight: '900', lineHeight: 1.3, color: \"#0972D3\" }}>123</span>\n            </div>\n            <div>\n              <Box variant=\"awsui-key-label\">\n                <p style={{ fontSize: 12 }}>Orders Cancelled</p>\n              </Box>\n              <span style={{ fontSize: 36, fontWeight: '900', lineHeight: 1.3, color: \"#0972D3\" }}>3</span>\n            </div>\n            <div>\n              <Box variant=\"awsui-key-label\">\n                <p style={{ fontSize: 12 }}>Orders Refunded</p>\n              </Box>\n\n              <span style={{ fontSize: 36, fontWeight: '900', lineHeight: 1.3, color: \"#0972D3\" }}>4</span>\n            </div>\n          </ColumnLayout>\n        </Container>\n          <Grid\n            gridDefinition={[\n              { colspan: { default: 12, xxs: 6 } },\n              { colspan: { default: 12, xxs: 6 } },\n            ]}\n          >\n            <SalesReports/>\n            <RecentOrders/>\n          </Grid>\n        \n          <Grid\n            gridDefinition={[\n              { colspan: { default: 12, xxs: 6 } },\n              { colspan: { default: 12, xxs: 6 } },\n            ]}\n          >   \n          <BestSellingProducts/>\n            <CustomerTraffic/>\n          </Grid>\n          <Grid\n            gridDefinition={[\n              { colspan: { default: 12, xxs: 6 } },\n              { colspan: { default: 12, xxs: 6 } },\n            ]}\n          > \n           <ExpensesByCatgry />\n           <Refundorders/>\n           </Grid>\n       \n        </SpaceBetween>\n      </ContentLayout>\n    </>\n  );\n};\n\nexport default Dashboard;\n"],"names":["_ref","selectedFilter","onFilterChange","filterOptions","_jsx","Select","selectedOption","label","value","onChange","options","ariaLabel","RecentOrders","_getFilteredOrders","dispatch","useDispatch","ordersData","useSelector","state","orders","data","useEffect","fetchOrders","filter","setFilter","useState","console","log","items","filteredOrders","getFilteredOrders","_data$items","_data$items2","_data$items3","_data$items4","now","Date","order","orderDate","toDateString","setDate","getDate","setMonth","getMonth","slice","Container","fitHeight","children","Table","header","_jsxs","Grid","gridDefinition","colspan","default","xxs","Header","variant","Box","padding","bottom","SelectFilter","detail","columnDefinitions","id","cell","item","Link","to","customerName","orderStatus","totalAmount","concat","area","loadingText","trackBy","empty","margin","vertical","textAlign","color","SpaceBetween","size","Expenses","expenses","category","amount","date","dataSeries","getFilteredExpenses","expense","reduce","acc","existingCategory","find","push","BarChart","series","title","type","map","x","y","xDomain","yDomain","Math","max","i18nStrings","yTickFormat","xTickFormat","height","hideFilter","hideLegend","SalesReports","salesData","setHours","filteredData","LineChart","valueFormatter","toLocaleString","min","d","xTickFormatter","toLocaleTimeString","hour","minute","hour12","toLocaleDateString","yTickFormatter","platform","visitors","CustomerTraffic","getFilteredData","totalVisitors","sum","PieChart","detailPopoverContent","datum","key","toFixed","segmentDescription","ariaDescription","noMatch","Button","BestSellingProducts","products","code","name","stock","status","renderAriaLive","_ref2","firstIndex","lastIndex","totalItemsCount","sortingField","isRowHeader","enableKeyboardNavigation","getFilteredProducts","product","selectedItems","RefundOrders","customers","reason","getFilteredCustomers","customer","Dashboard","isPopoverVisible","setPopoverVisible","React","selectedMonth","setSelectedMonth","getCurrentMonthYear","month","arguments","length","undefined","year","getFullYear","_Fragment","ContentLayout","headerVariant","actions","alignItems","direction","Popover","triggerType","content","Calendar","selectedDate","granularity","onClick","handleButtonClick","iconName","startsWith","className","style","marginBottom","ColumnLayout","columns","minColumnWidth","fontSize","fontWeight","lineHeight","ExpensesByCatgry","Refundorders"],"sourceRoot":""}