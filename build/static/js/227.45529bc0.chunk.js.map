{"version":3,"file":"static/js/227.45529bc0.chunk.js","mappings":"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","sources":["Utils/helperFunctions.js","Views/Postlogin/Customers/AddNewCustomer/index.js"],"sourcesContent":["import { Box, CircularProgress } from \"@mui/material\";\nimport { toast } from \"react-toastify\";\nexport const ValidationEngine = {\n  EMAIL_REGEX: /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/,\n  PASSWORD_REGEX: /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/,\n  MOBILE_NUMBER_REGEX: /^\\d{10}$/,\n  NUMBER_ONLY_REGEX: /^[0-9]+$/,\n  DECIMAL_ALLOW_REGEX: /^\\d*\\.?\\d*$/,\n  ONLY_TWO_DECIMAL_ALLOW_REGEX: /^(?:\\d*\\.\\d{1,2}|\\d+)$/,\n  type: {\n    MANDATORY: 0,\n    REGEX: 1,\n    CHARACTERCOUNT: 2,\n  },\n  validate: (validationJSON, data) => {\n    function validateMandatory(validationObject, value) {\n      if (!value || value === '') {\n        return {\n          isValid: false,\n          error: {\n            isValid: false,\n            message: validationObject.message,\n          },\n        };\n      }\n      return {\n        isValid: true,\n        error: {\n          isValid: true,\n          message: \"\",\n        },\n      };\n    }\n\n    function validateCharacterCount(validationObject, value) {\n      if (value && value.length !== validationObject.CharacterCout) {\n        return {\n          isValid: false,\n          error: {\n            isValid: false,\n            message: validationObject.message,\n          },\n        };\n      }\n      return {\n        isValid: true,\n        error: {\n          isValid: true,\n          message: \"\",\n        },\n      };\n    }\n\n    function validateRegex(validationObject, value) {\n      if (validationObject.regex && !validationObject.regex.test(value)) {\n        return {\n          isValid: false,\n          error: {\n            isValid: false,\n            message: validationObject.message,\n          },\n        };\n      }\n      return {\n        isValid: true,\n        error: {\n          isValid: true,\n          message: \"\",\n        },\n      };\n    }\n\n    const keys = Object.keys(data);\n    const errors = {};\n    let isValid = true;\n    let errorObj;\n    keys.forEach((key) => {\n      const validationArray = validationJSON[key];\n      const value = data[key];\n      for (const validationObj of validationArray) {\n        if (validationObj.type === ValidationEngine.type.MANDATORY) {\n          errorObj = validateMandatory(validationObj, value);\n        } else if (\n          validationObj.type === ValidationEngine.type.CHARACTERCOUNT\n        ) {\n          errorObj = validateCharacterCount(validationObj, value);\n        } else if (validationObj.type === ValidationEngine.type.REGEX) {\n          errorObj = validateRegex(validationObj, value);\n        }\n        errors[key] = errorObj.error;\n        isValid = isValid && errorObj.isValid;\n        if (!errorObj.isValid) {\n          break;\n        }\n      }\n    });\n    errors.isValid = isValid;\n    return errors;\n  },\n};\n\nexport const ErrorMessages = {\n  error: (message) =>\n    toast.error(message, {\n      position: \"top-right\",\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: \"colored\",\n    }),\n  success: (message) =>\n    toast.success(message, {\n      position: \"top-right\",\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: \"colored\",\n    }),\n  info: (message) =>\n    toast.info(message, {\n      position: \"top-right\",\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: \"colored\",\n    }),\n};\nexport const Loader = {\n  commonLoader() {\n    return (\n      <Box className=\"d-flex align-items-center justify-content-center common-loader\">\n        <CircularProgress />\n      </Box>\n    );\n  },\n};\n\nexport const pathFile = {\n  dashboards: \"DashBoard\",\n};\n","import React, { Component } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Button from \"@mui/material/Button\";\nimport { ValidationEngine } from \"Utils/helperFunctions\";\n\nconst validationSchema = {\n  customerName: [\n    {\n      message: \"Please enter customer name\",\n      type: ValidationEngine.type.MANDATORY,\n    },\n  ],\n  companyName: [\n    {\n      message: \"Please enter company name\",\n      type: ValidationEngine.type.MANDATORY,\n    },\n  ],\n  companyAbbreviation: [\n    {\n      message: \"Please enter company cbbreviation\",\n      type: ValidationEngine.type.MANDATORY,\n    },\n  ],\n  phone: [\n    {\n      message: \"Please enter phone number\",\n      type: ValidationEngine.type.MANDATORY,\n    },\n    {\n      message: \"Please enter valid phone number\",\n      type: ValidationEngine.type.REGEX,\n      regex: ValidationEngine.MOBILE_NUMBER_REGEX,\n    },\n  ],\n  email: [\n    {\n      message: \"Please enter email\",\n      type: ValidationEngine.type.MANDATORY,\n    },\n    {\n      message: \"Please enter valid email\",\n      type: ValidationEngine.type.REGEX,\n      regex: ValidationEngine.EMAIL_REGEX,\n    },\n  ],\n  address: [\n    {\n      message: \"Please enter contact person\",\n      type: ValidationEngine.type.MANDATORY,\n    },\n  ],\n  city: [\n    {\n      message: \"Please enter contact person\",\n      type: ValidationEngine.type.MANDATORY,\n    },\n  ],\n  postalCode: [\n    {\n      message: \"Please enter contact person\",\n      type: ValidationEngine.type.MANDATORY,\n    },\n  ],\n  country: [\n    {\n      message: \"Please enter contact person\",\n      type: ValidationEngine.type.MANDATORY,\n    },\n  ],\n};\n\nclass AddNewCustomer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      customerName: \"\",\n      companyName: \"\",\n      companyAbbreviation: \"\",\n      phone: \"\",\n      email: \"\",\n      address: \"\",\n      city: \"\",\n      postalCode: \"\",\n      country: \"\",\n      isSubmitted: false,\n    };\n  }\n\n  handleChange = (event) => {\n    const { name, value, type, checked } = event.target;\n    const val = type === \"checkbox\" ? checked : value;\n    this.setState({ [name]: val });\n  };\n\n  validateForm = () => {\n    const {\n      customerName,\n      companyName,\n      companyAbbreviation,\n      phone,\n      email,\n      address,\n      city,\n      postalCode,\n      country,\n    } = this.state;\n    const error = ValidationEngine.validate(validationSchema, {\n      customerName,\n      companyName,\n      companyAbbreviation,\n      phone,\n      email,\n      address,\n      city,\n      postalCode,\n      country,\n    });\n    return error;\n  };\n\n  handleSubmit = () => {\n    const errorData = this.validateForm();\n    this.setState({\n      isSubmitted: true,\n    });\n    if (errorData.isValid) {\n    }\n  };\n\n  render() {\n    const errorData = this.validateForm();\n    const {\n      customerName,\n      companyName,\n      companyAbbreviation,\n      phone,\n      email,\n      address,\n      city,\n      postalCode,\n      country,\n      isSubmitted,\n    } = this.state;\n\n    return (\n      <div className=\"main-container\">\n        <div className=\"add-new-container\">\n          <div className=\"heading\">\n            <h2>Add New Customer</h2>\n          </div>\n          <div className=\"add-new-form-container\">\n            <Grid container spacing={2}>\n              <Grid item xs={6}>\n                <Box className=\"form-text-field\">\n                  <label>Enter Customer Name</label>\n                  <TextField\n                    name=\"customerName\"\n                    value={customerName}\n                    onChange={this.handleChange}\n                    className=\"text-field\"\n                    error={!errorData.customerName.isValid && isSubmitted}\n                    helperText={isSubmitted ? errorData.customerName.message : \"\"}\n                    defaultValue={customerName}\n                    placeholder=\"Brain MD\"\n                  />\n                </Box>\n              </Grid>\n              <Grid item xs={6}>\n                <Box className=\"form-text-field\">\n                  <label>Enter Company Name</label>\n                  <TextField\n                    name=\"companyName\"\n                    value={companyName}\n                    onChange={this.handleChange}\n                    className=\"text-field\"\n                    error={!errorData.companyName.isValid && isSubmitted}\n                    helperText={\n                      isSubmitted ? errorData.companyName.message : \"\"\n                    }\n                    defaultValue={companyName}\n                    placeholder=\"Brain MD\"\n                  />\n                </Box>\n              </Grid>\n              <Grid item xs={6}>\n                <Box className=\"form-text-field\">\n                  <label>Company Abbreviation</label>\n                  <TextField\n                    name=\"companyAbbreviation\"\n                    value={companyAbbreviation}\n                    onChange={this.handleChange}\n                    className=\"text-field\"\n                    error={!errorData.companyAbbreviation.isValid && isSubmitted}\n                    helperText={\n                      isSubmitted ? errorData.companyAbbreviation.message : \"\"\n                    }\n                    defaultValue={companyAbbreviation}\n                    placeholder=\"ABC-123456-12\"\n                  />\n                </Box>\n              </Grid>\n              <Grid item xs={6}>\n                <Box className=\"form-text-field\">\n                  <label>Enter Phone</label>\n                  <TextField\n                    type=\"number\"\n                    name=\"phone\"\n                    value={phone}\n                    onChange={this.handleChange}\n                    className=\"text-field\"\n                    error={!errorData.phone.isValid && isSubmitted}\n                    helperText={isSubmitted ? errorData.phone.message : \"\"}\n                    defaultValue={phone}\n                    placeholder=\"+1 (123)-456-789\"\n                  />\n                </Box>\n              </Grid>\n              <Grid item xs={6}>\n                <Box className=\"form-text-field\">\n                  <label>Enter Email</label>\n                  <TextField\n                    name=\"email\"\n                    value={email}\n                    onChange={this.handleChange}\n                    className=\"text-field\"\n                    error={!errorData.email.isValid && isSubmitted}\n                    helperText={isSubmitted ? errorData.email.message : \"\"}\n                    defaultValue={email}\n                    placeholder=\"info@brainmd.com\"\n                  />\n                </Box>\n              </Grid>\n              <Grid item xs={6}>\n                <Box className=\"form-text-field\">\n                  <label>Enter Address</label>\n                  <TextField\n                    name=\"address\"\n                    value={address}\n                    onChange={this.handleChange}\n                    className=\"text-field\"\n                    error={!errorData.address.isValid && isSubmitted}\n                    helperText={isSubmitted ? errorData.address.message : \"\"}\n                    defaultValue={address}\n                    placeholder=\"1234 Stm El\"\n                  />\n                </Box>\n              </Grid>\n              <Grid item xs={6}>\n                <Box className=\"form-text-field\">\n                  <label>Enter City</label>\n                  <TextField\n                    select\n                    name=\"city\"\n                    value={city}\n                    onChange={this.handleChange}\n                    className=\"text-field\"\n                    error={!errorData.city.isValid && isSubmitted}\n                    helperText={isSubmitted ? errorData.city.message : \"\"}\n                    defaultValue={city}\n                    placeholder=\"Select City\"\n                  >\n                    <MenuItem value=\"City1\">City1</MenuItem>\n                    <MenuItem value=\"City2\">City2</MenuItem>\n                    <MenuItem value=\"City3\">City3</MenuItem>\n                  </TextField>\n                </Box>\n              </Grid>\n              <Grid item xs={6}>\n                <Box className=\"form-text-field\">\n                  <label>Enter Postal Code</label>\n                  <TextField\n                    select\n                    name=\"postalCode\"\n                    value={postalCode}\n                    onChange={this.handleChange}\n                    className=\"text-field\"\n                    error={!errorData.postalCode.isValid && isSubmitted}\n                    helperText={isSubmitted ? errorData.postalCode.message : \"\"}\n                    defaultValue={postalCode}\n                    placeholder=\"Select State\"\n                  >\n                    <MenuItem value=\"Postal1\">Postal1</MenuItem>\n                    <MenuItem value=\"Postal2\">Postal2</MenuItem>\n                    <MenuItem value=\"Postal3\">Postal3</MenuItem>\n                  </TextField>\n                </Box>\n              </Grid>\n              <Grid item xs={6}>\n                <Box className=\"form-text-field\">\n                  <label>Enter Country</label>\n                  <TextField\n                    select\n                    name=\"country\"\n                    value={country}\n                    onChange={this.handleChange}\n                    className=\"text-field\"\n                    error={!errorData.country.isValid && isSubmitted}\n                    helperText={isSubmitted ? errorData.country.message : \"\"}\n                    defaultValue={country}\n                    placeholder=\"Select Country\"\n                  >\n                    <MenuItem value=\"Country1\">Country1</MenuItem>\n                    <MenuItem value=\"Country2\">Country2</MenuItem>\n                    <MenuItem value=\"Country3\">Country3</MenuItem>\n                  </TextField>\n                </Box>\n              </Grid>\n            </Grid>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <div className=\"add-new-form-btn\">\n                  <Button className=\"btn-outline-secondary\" variant=\"outlined\">\n                    Cancel\n                  </Button>\n                  <Button\n                    className=\"primary-btn\"\n                    variant=\"contained\"\n                    onClick={this.handleSubmit}\n                  >\n                    Save\n                  </Button>\n                </div>\n              </Grid>\n            </Grid>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddNewCustomer;\n"],"names":["ValidationEngine","EMAIL_REGEX","PASSWORD_REGEX","MOBILE_NUMBER_REGEX","NUMBER_ONLY_REGEX","DECIMAL_ALLOW_REGEX","ONLY_TWO_DECIMAL_ALLOW_REGEX","type","MANDATORY","REGEX","CHARACTERCOUNT","validate","validationJSON","data","validateMandatory","validationObject","value","isValid","error","message","validateCharacterCount","length","CharacterCout","validateRegex","regex","test","keys","Object","errors","errorObj","forEach","key","validationArray","validationObj","Loader","commonLoader","_jsx","Box","className","children","CircularProgress","validationSchema","customerName","companyName","companyAbbreviation","phone","email","address","city","postalCode","country","AddNewCustomer","Component","constructor","props","super","handleChange","event","name","checked","target","val","this","setState","validateForm","state","handleSubmit","errorData","isSubmitted","render","_jsxs","Grid","container","spacing","item","xs","TextField","onChange","helperText","defaultValue","placeholder","select","MenuItem","Button","variant","onClick"],"sourceRoot":""}