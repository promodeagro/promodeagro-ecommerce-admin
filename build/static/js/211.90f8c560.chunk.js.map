{"version":3,"file":"static/js/211.90f8c560.chunk.js","mappings":"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","sources":["Views/Postlogin/Orders/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchOrders, fetchOrderStatus, updateOrderStatus, assignDeliveryBoyAndMoveToOnTheWay } from \"Redux-Store/Orders/OrdersThunk\";\nimport {\n  Table,\n  Pagination,\n  TextFilter,\n  ContentLayout,\n  Container,\n  ColumnLayout,\n  BreadcrumbGroup,\n  Header,\n  Button,\n  Box,\n  SpaceBetween,\n  Grid,\n  Select,\n} from \"@cloudscape-design/components\";\nimport { Link } from \"react-router-dom\";\nimport Modal from \"@cloudscape-design/components/modal\";\n\n\nconst Orders = () => {\n  const dispatch = useDispatch();\n  const ordersData = useSelector((state) => state.orders.ordersData);\n  const orderStatus = useSelector((state) => state.orders.order_status);\n\n  // Ensure ordersData is correctly structured\n  const data = ordersData?.data || {};\n  const items = data.items || [];\n\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const ordersPerPage = 10;\n  const [activeButton, setActiveButton] = useState(\"All\");\n  const [filteringText, setFilteringText] = useState(\"\");\n  const [selectedAssignee, setSelectedAssignee] = useState(null);\n  const [isAssignOrdersModalVisible, setIsAssignOrdersModalVisible] = useState(false);\n  const [isMoveToPackedModalVisible, setIsMoveToPackedModalVisible] = useState(false);\n  const [orderId, setOrderId] = useState(null); \n  const [deliveryBoyId, setDeliveryBoyId] = useState(null);\n  const [isMoveToDeliveredModalVisible, setIsMoveToDeliveredModalVisible] = useState(false);\n\n  useEffect(() => {\n    dispatch(fetchOrders());\n    dispatch(fetchOrderStatus());\n  }, [dispatch]);\n\n  const filteredOrders = (data && data.items)\n  ? data.items.filter((item) => {\n      const matchesStatus =\n        activeButton === \"All\" ||\n        (activeButton === \"Confirmed\" && item.orderStatus === \"order placed\") ||\n        item.orderStatus === activeButton;\n      const matchesSearch = item.id\n        .toLowerCase()\n        .includes(filteringText.toLowerCase());\n      return matchesStatus && matchesSearch;\n    })\n  : [];\n\n\n  const indexOfLastOrder = currentPage * ordersPerPage;\n  const indexOfFirstOrder = indexOfLastOrder - ordersPerPage;\n  const currentOrders = filteredOrders.slice(\n    indexOfFirstOrder,\n    indexOfLastOrder\n  );\n\n  const handlePageChange = (pageIndex) => {\n    setCurrentPage(pageIndex + 1);\n  };\n\n  const handleSelectChange = ({ detail }) => {\n    setActiveButton(detail.selectedOption.value);\n    setSelectedItems([]);  \n    setCurrentPage(1);\n  };\n\n  const handleSearchChange = (e) => {\n    setFilteringText(e.detail.filteringText);\n  };\n\n  const selectOptions = [\n    { label: \"All\", value: \"All\" }, \n    { label: \"Order Confirmed\", value: \"order placed\" },\n    { label: \"Packed\", value: \"Packed\" },\n    { label: \"On the Way\", value: \"On The Way\" },\n    { label: \"Delivered\", value: \"Delivered\" },\n  ];\n\n\n  const handleMoveToPackedClick = () => {\n    setIsMoveToPackedModalVisible(true);\n  };\n\n  const handleMoveToPackedModalCancel = () => {\n    setIsMoveToPackedModalVisible(false);\n  };\n  const handleAssignAndMove = () => {\n    if (orderId && deliveryBoyId) {\n      assignDeliveryBoyAndMoveToOnTheWay(orderId, deliveryBoyId);\n    } else {\n      console.error('Order ID or Delivery Boy ID is not defined.');\n    }\n  };\n\n\n  const handleMoveToPackedModalConfirm = async () => {\n    try {\n      if (!Array.isArray(selectedItems) || selectedItems.length === 0) {\n        throw new Error('No items selected or invalid selection.');\n      }\n\n      const orderIds = selectedItems.map(item => item.id); \n      const result = await dispatch(updateOrderStatus({ ids: orderIds, status: 'Packed' })).unwrap();\n\n      // Check if the success message is received\n      if (result.message === 'success') {\n        console.log('Order status updated successfully:', result);\n\n        // Refetch orders to update the UI\n        await dispatch(fetchOrders());\n      } else {\n        throw new Error('Failed to update order status');\n      }\n\n      setIsMoveToPackedModalVisible(false);\n    } catch (error) {\n      console.error('Error updating order status:', error);\n      // Optionally display an error message to the user\n    }\n  };\n\n  const handleAssignOrdersModalConfirm = async () => {\n    try {\n      if (!Array.isArray(selectedItems) || selectedItems.length === 0) {\n        throw new Error('No items selected or invalid selection.');\n      }\n\n      const orderIds = selectedItems.map(item => item.id); // Extract IDs\n      const assignee = selectedAssignee.value; // Extract selected assignee's value\n\n      if (!Array.isArray(orderIds) || orderIds.length === 0) {\n        throw new Error('Invalid order IDs.');\n      }\n\n      const result = await dispatch(assignDeliveryBoyAndMoveToOnTheWay({ orderIds, assignee, status: 'On The Way'  })).unwrap();\n\n      if (result.message === 'success') {\n        console.log('Orders assigned and status updated successfully:', result);\n        await dispatch(fetchOrders());\n      } else {\n        throw new Error('Failed to assign delivery boy and update order status');\n      }\n\n      setIsAssignOrdersModalVisible(false);\n    } catch (error) {\n      console.error('Error assigning delivery boy and updating order status:', error);\n    }\n  };\n\n  const handleSelectAssigneeChange = ({ detail }) => {\n    setSelectedAssignee(detail.selectedOption);\n  };\n  const handleAssignOrdersModalCancel = () => {\n    setIsAssignOrdersModalVisible(false);\n  };\n  const handleAssignOrdersClick = () => {\n    setIsAssignOrdersModalVisible(true);\n  };\n\n  \n  const randomNames = [\n    { label: \"sohail\", value: \"sohail\" },\n    { label: \"Jane Smith\", value: \"jane_smith\" },\n    { label: \"Alice Johnson\", value: \"alice_johnson\" },\n  ];\n\n  \n  const handleMoveToDeliveredClick = () => {\n    setIsMoveToDeliveredModalVisible(true);\n  };\n  \n  const handleMoveToDeliveredModalCancel = () => {\n    setIsMoveToDeliveredModalVisible(false);\n  };\n  \n  const handleMoveToDeliveredModalConfirm = async () => {\n    try {\n      if (!Array.isArray(selectedItems) || selectedItems.length === 0) {\n        throw new Error('No items selected or invalid selection.');\n      }\n  \n      const orderIds = selectedItems.map(item => item.id); \n  \n      // Call the thunk or function to move orders to \"Delivered\" status\n      const result = await dispatch(updateOrderStatus({ ids: orderIds, status: 'Delivered' })).unwrap();\n  \n      if (result.message === 'success') {\n        console.log('Order status updated to delivered successfully:', result);\n        await dispatch(fetchOrders());\n      } else {\n        throw new Error('Failed to update order status');\n      }\n  \n      setIsMoveToDeliveredModalVisible(false);\n    } catch (error) {\n      console.error('Error updating order status:', error);\n    }\n  };\n  \n\n  return (\n    <ContentLayout\n      headerVariant=\"high-contrast\"\n      breadcrumbs={\n        <BreadcrumbGroup\n          items={[\n            { text: \"Dashboard\", href: \"/app/Dashboard\" },\n            { text: \"Orders\", href: \"#\" },\n          ]}\n          ariaLabel=\"Breadcrumbs\"\n        />\n      }\n      header={\n        <Header\n          variant=\"h1\"\n          // actions={\n          //   <SpaceBetween direction=\"horizontal\" size=\"xs\">\n          //     <Button>Export</Button>\n          //     <Button iconName=\"calendar\">Today</Button>\n          //   </SpaceBetween>\n          // }\n        >\n          Orders\n        </Header>\n      }\n    >\n      <SpaceBetween direction=\"vertical\" size=\"xl\">\n        <Container className=\"top-container\" style={{ marginBottom: \"1rem\" }}>\n          <ColumnLayout columns={5} variant=\"default\" minColumnWidth={170}>\n            <div>\n              <Box variant=\"awsui-key-label\">\n                <p style={{ fontSize: 12, fontWeight: \"bold\" }}>Total Orders</p>\n              </Box>\n              <span\n                style={{\n                  fontSize: 34,\n                  fontWeight: \"900\",\n                  lineHeight: 1.3,\n                  color: \"#1D4ED8\",\n                }}\n              >\n                {orderStatus?.data?.totalOrderCount || \"N/A\"}\n              </span>\n            </div>\n            <div>\n              <Box variant=\"awsui-key-label\">\n                <p style={{ fontSize: 12, fontWeight: \"bold\" }}>\n                  Orders Completed\n                </p>\n              </Box>\n              <span\n                style={{\n                  fontSize: 34,\n                  fontWeight: \"900\",\n                  lineHeight: 1.3,\n                  color: \"#1D4ED8\",\n                }}\n              >\n                {orderStatus?.data?.completedOrderCount}\n              </span>\n            </div>\n            <div>\n              <Box variant=\"awsui-key-label\">\n                <p style={{ fontSize: 12, fontWeight: \"bold\" }}>\n                  Orders Confirmed\n                </p>\n              </Box>\n              <span\n                style={{\n                  fontSize: 34,\n                  fontWeight: \"900\",\n                  lineHeight: 1.3,\n                  color: \"#1D4ED8\",\n                }}\n              >\n                {orderStatus?.data?.confirmedOrderCount}\n              </span>\n            </div>\n            <div>\n              <Box variant=\"awsui-key-label\">\n                <p style={{ fontSize: 12, fontWeight: \"bold\" }}>\n                  Orders Cancelled\n                </p>\n              </Box>\n              <span\n                style={{\n                  fontSize: 34,\n                  fontWeight: \"900\",\n                  lineHeight: 1.3,\n                  color: \"#1D4ED8\",\n                }}\n              >\n                {orderStatus?.data?.cancelledOrderCount}\n              </span>\n            </div>\n            <div>\n              <Box variant=\"awsui-key-label\">\n                <p style={{ fontSize: 12, fontWeight: \"bold\" }}>\n                  Orders Refunded\n                </p>\n              </Box>\n              <span\n                style={{\n                  fontSize: 34,\n                  fontWeight: \"900\",\n                  lineHeight: 1.3,\n                  color: \"#1D4ED8\",\n                }}\n              >\n                {orderStatus?.data?.refundedOrderCount}\n              </span>\n            </div>\n          </ColumnLayout>\n        </Container>\n\n        <SpaceBetween direction=\"vertical\" size=\"s\">\n          <Box>\n          <Grid\n  disableGutters\n  gridDefinition={[\n    { colspan: { default: 12, xxs: 6 } },\n    { colspan: { default: 12, xxs: 6 } },\n  ]}\n>\n  <div style={{ display: \"flex\", gap: \"0.5rem\" }}>\n    <TextFilter\n      filteringPlaceholder=\"Search\"\n      filteringText={filteringText}\n      onChange={handleSearchChange}\n    />\n    <Select\n      options={selectOptions}\n      selectedOption={selectOptions.find(\n        (option) => option.value === activeButton\n      )}\n      onChange={handleSelectChange}\n      placeholder=\"Sort by Status\"\n    />\n  </div>\n  <div style={{ display: \"flex\", gap: \"0.5rem\", justifyContent:'flex-end' }}>\n    {activeButton === \"order placed\" && (\n     <Button\n     disabled={selectedItems.length === 0}\n     onClick={handleMoveToPackedClick}\n   >\n     Move to Packed\n   </Button>\n    )}\n    \n    {/* Conditionally render the Assign Orders button */}\n    {activeButton === \"packed\" && (\n                  <Button\n                  disabled={selectedItems.length === 0}\n                  onClick={handleAssignOrdersClick}\n                >\n                  Assign Orders\n                </Button>\n  )}\n\n    {/* Conditionally render the Move to Delivery button */}\n    {activeButton === \"on the way\" && (\n  <Button \n    disabled={selectedItems.length === 0}\n    onClick={handleMoveToDeliveredClick}\n  >\n    Move to Delivered\n  </Button>\n)}\n\n\n    <Pagination\n      currentPageIndex={currentPage - 1}\n      onChange={({ detail }) =>\n        handlePageChange(detail.currentPageIndex)\n      }\n      openEnd\n      pagesCount={5}\n    />\n  </div>\n</Grid>\n          </Box>\n\n            {/* Modal definition */}\n            <Modal\n            onDismiss={handleMoveToPackedModalCancel}\n            visible={isMoveToPackedModalVisible}\n            footer={\n              <Box float=\"right\">\n                <SpaceBetween direction=\"horizontal\" size=\"xs\">\n                  <Button variant=\"link\" onClick={handleMoveToPackedModalCancel}>Cancel</Button>\n                  <Button variant=\"primary\" onClick={handleMoveToPackedModalConfirm}>Confirm</Button>\n                </SpaceBetween>\n              </Box>\n            }\n            header=\"Move to Packed Orders\"\n          >\n            Are you sure you want to move the selected orders to the 'Packed Orders' stage?\n          </Modal>\n\n          {/* Assign Orders Modal */}\n          <Modal\n            onDismiss={handleAssignOrdersModalCancel}\n            visible={isAssignOrdersModalVisible}\n            footer={\n              <Box float=\"right\">\n                <SpaceBetween direction=\"horizontal\" size=\"xs\">\n                  <Button variant=\"link\" onClick={handleAssignOrdersModalCancel}>Cancel</Button>\n                  <Button variant=\"primary\" onClick={handleAssignOrdersModalConfirm}>Confirm</Button>\n                </SpaceBetween>\n              </Box>\n            }\n            header=\"Assign Orders\"\n          >\n            <Select\n              options={randomNames}\n              selectedOption={selectedAssignee}\n              onChange={handleSelectAssigneeChange}\n              placeholder=\"Select an assignee\"\n            />\n          </Modal>\n          <Modal\n  onDismiss={handleMoveToDeliveredModalCancel}\n  visible={isMoveToDeliveredModalVisible}\n  footer={\n    <Box float=\"right\">\n      <SpaceBetween direction=\"horizontal\" size=\"xs\">\n        <Button variant=\"link\" onClick={handleMoveToDeliveredModalCancel}>Cancel</Button>\n        <Button variant=\"primary\" onClick={handleMoveToDeliveredModalConfirm}>Confirm</Button>\n      </SpaceBetween>\n    </Box>\n  }\n  header=\"Move to Delivered\"\n>\n  Are you sure you want to move the selected orders to the Delivered Orders stage?\n</Modal>\n\n          <Table\n            renderAriaLive={({ firstIndex, lastIndex, totalItemsCount }) =>\n              `Displaying items ${\n                firstIndex + 1\n              } to ${lastIndex} of ${totalItemsCount}`\n            }\n            onSelectionChange={({ detail }) =>\n              setSelectedItems(detail.selectedItems)\n            }\n            selectedItems={selectedItems}\n            ariaLabels={{\n              selectionGroupLabel: \"Items selection\",\n              allItemsSelectionLabel: ({ selectedItems }) =>\n                `${selectedItems.length} ${\n                  selectedItems.length === 1 ? \"item\" : \"items\"\n                } selected`,\n              itemSelectionLabel: ({ selectedItems }, item) => item.name,\n            }}\n            items={currentOrders}\n            columnDefinitions={[\n              {\n                id: \"id\",\n                header: \"Order ID\",\n                cell: (item) =>\n                  item.id ? (\n                    <Link to={`/app/order/orderdetail/${item.id}`}>\n                      #{item.id}\n                    </Link>\n                  ) : (\n                    \"N/A\"\n                  ),\n              },\n\n              {\n                id: \"orderDate\",\n                header: \"Order Date\",\n                cell: (item) => {\n                  if (!item.orderDate) {\n                    return \"N/A\";\n                  }\n                  const date = new Date(item.orderDate);\n                  const options = {\n                    day: \"2-digit\",\n                    month: \"2-digit\",\n                    year: \"numeric\",\n                  };\n                  return date\n                    .toLocaleDateString(\"en-GB\", options)\n                    .replace(/\\//g, \"-\");\n                },\n              },\n              {\n                id: \"customerName\",\n                header: \"Customer Name\",\n                cell: (item) => {\n                  if (\n                    item.customerName &&\n                    item.customerName &&\n                    item.customerName\n                  ) {\n                    return item.customerName;\n                  }\n                  return \"N/A\";\n                },\n              },\n              {\n                id: \"item\",\n                header: \"Item\",\n                cell: (item) => {\n                  if (item.items) {\n                    const itemCount = item.items;\n                    return itemCount === 1\n                      ? `${itemCount} Item`\n                      : `${itemCount} Items`;\n                  }\n                  return \"N/A\";\n                },\n              },\n              {\n                id: \"paymentStatus\",\n                header: \"Payment Status\",\n                cell: (item) => item.paymentStatus || \"N/A\",\n              },\n              {\n                id: \"orderStatus\",\n                header: \"Order Status\",\n                cell: (item) => item.orderStatus || \"N/A\",\n              },\n\n\n              {\n                id: \"totalAmount\",\n                header: \"Total Amount\",\n                cell: (item) =>\n                  item.totalAmount ? `Rs. ${item.totalAmount}` : \"N/A\",\n              },\n              {\n                id: \"area\",\n                header: \"Delivery Area\",\n                cell: (item) => item.area || \"N/A\",\n              },\n            ]}\n            loadingText=\"Loading resources\"\n            selectionType=\"multi\"\n            trackBy=\"id\"\n            variant=\"borderless\"\n            empty={\n              <Box\n                margin={{ vertical: \"xs\" }}\n                textAlign=\"center\"\n                color=\"inherit\"\n              >\n                <SpaceBetween size=\"m\">\n                  <b>No Orders</b>\n                </SpaceBetween>\n              </Box>\n            }\n          />\n        </SpaceBetween>\n      </SpaceBetween>\n    </ContentLayout>\n  );\n};\n\nexport default Orders;\n"],"names":["Orders","_orderStatus$data","_orderStatus$data2","_orderStatus$data3","_orderStatus$data4","_orderStatus$data5","dispatch","useDispatch","ordersData","useSelector","state","orders","orderStatus","order_status","data","selectedItems","setSelectedItems","items","useState","currentPage","setCurrentPage","activeButton","setActiveButton","filteringText","setFilteringText","selectedAssignee","setSelectedAssignee","isAssignOrdersModalVisible","setIsAssignOrdersModalVisible","isMoveToPackedModalVisible","setIsMoveToPackedModalVisible","orderId","setOrderId","deliveryBoyId","setDeliveryBoyId","isMoveToDeliveredModalVisible","setIsMoveToDeliveredModalVisible","useEffect","fetchOrders","fetchOrderStatus","indexOfLastOrder","indexOfFirstOrder","currentOrders","filter","item","matchesStatus","matchesSearch","id","toLowerCase","includes","slice","selectOptions","label","value","handleMoveToPackedModalCancel","handleAssignOrdersModalCancel","handleMoveToDeliveredModalCancel","_jsx","ContentLayout","headerVariant","breadcrumbs","BreadcrumbGroup","text","href","ariaLabel","header","Header","variant","children","_jsxs","SpaceBetween","direction","size","Container","className","style","marginBottom","ColumnLayout","columns","minColumnWidth","Box","fontSize","fontWeight","lineHeight","color","totalOrderCount","completedOrderCount","confirmedOrderCount","cancelledOrderCount","refundedOrderCount","Grid","disableGutters","gridDefinition","colspan","default","xxs","display","gap","TextFilter","filteringPlaceholder","onChange","e","detail","Select","options","selectedOption","find","option","_ref","placeholder","justifyContent","Button","disabled","length","onClick","handleMoveToPackedClick","handleAssignOrdersClick","handleMoveToDeliveredClick","Pagination","currentPageIndex","_ref3","pageIndex","openEnd","pagesCount","Modal","onDismiss","visible","footer","float","async","Array","isArray","Error","orderIds","map","result","updateOrderStatus","ids","status","unwrap","message","console","log","error","assignee","assignDeliveryBoyAndMoveToOnTheWay","_ref2","Table","renderAriaLive","_ref4","firstIndex","lastIndex","totalItemsCount","concat","onSelectionChange","_ref5","ariaLabels","selectionGroupLabel","allItemsSelectionLabel","_ref6","itemSelectionLabel","_ref7","name","columnDefinitions","cell","Link","to","orderDate","Date","toLocaleDateString","day","month","year","replace","customerName","itemCount","paymentStatus","totalAmount","area","loadingText","selectionType","trackBy","empty","margin","vertical","textAlign"],"sourceRoot":""}