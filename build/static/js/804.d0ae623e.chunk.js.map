{"version":3,"file":"static/js/804.d0ae623e.chunk.js","mappings":"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","sources":["Views/Postlogin/Products/ProductDetails/Components/BasicDetails.js","Views/Postlogin/Products/ProductDetails/Components/InventoryTracking.js","Views/Postlogin/Products/ProductDetails/Components/Attributes.js","Views/Postlogin/Hooks/useProductNavigation.js","Views/Postlogin/Products/ProductDetails/index.js"],"sourcesContent":["import { Container, Input, Form, FormField, Textarea, Select, SpaceBetween } from '@cloudscape-design/components';\r\nimport React, { useEffect } from 'react';\r\nimport \"../../../../../assets/styles/CloudscapeGlobalstyle.css\"\r\nimport Grid from \"@cloudscape-design/components/grid\";\r\n\r\n\r\nconst BasicDetails = ({ product, onChange }) => {\r\n  const [description, setDescription] = React.useState(product.data?.description || \"\");\r\n  const [name, setName] = React.useState(product?.data?.name || \"\");\r\n  const [selectedCategory, setSelectedCategory] = React.useState({\r\n    label: product.data?.category || \"\",\r\n    value: product.data?.category || \"\",\r\n  });\r\n  const [selectedUnit, setSelectedUnit] = React.useState({\r\n    label: product.data?.units || \"\",\r\n    value: product.data?.units || \"\",\r\n  });\r\n  const [selectedStatus, setSelectedStatus] = React.useState({\r\n    label: \"Option 1\",\r\n    value: \"1\",\r\n  });\r\n\r\n  // Update state when product prop changes\r\n  useEffect(() => {\r\n    // Only update the state if the product data has actually changed\r\n    setDescription(product.data?.description || \"\");\r\n    setName(product.data?.name || \"\");\r\n    setSelectedCategory({\r\n      label: product.data?.category || \"\",\r\n      value: product.data?.category || \"\",\r\n    });\r\n    setSelectedUnit({\r\n      label: product.data?.units || \"\",\r\n      value: product.data?.units || \"\",\r\n    });\r\n    setSelectedStatus({\r\n      label: \"Option 1\",\r\n      value: \"1\",\r\n    });\r\n  }, [product]); // Only rerun this effect if the product prop changes\r\n  \r\n  // useEffect(() => {\r\n  //   onChange({\r\n  //     name,\r\n  //     description,\r\n  //     category: selectedCategory.value,\r\n  //     units: selectedUnit.value,\r\n  //     status: selectedStatus.value,\r\n  //   });\r\n  // }, [name, description, selectedCategory, selectedUnit, selectedStatus,onChange]); \r\n\r\n  return (\r\n    <Container variant='borderless' className='container-box-shadow' fitHeight>\r\n      <Form>\r\n        <SpaceBetween direction=\"vertical\" size=\"l\">\r\n\r\n            <FormField stretch label=\"Product Name\">\r\n              <Input\r\n                placeholder=\"Input Item Name\"\r\n                value={name}\r\n                onChange={({ detail }) => setName(detail.value)}\r\n              />\r\n            </FormField>\r\n            <Grid\r\n      disableGutters\r\n      gridDefinition={[\r\n        { colspan: 4 },\r\n        { colspan: 4 },\r\n        { colspan: 4 },\r\n        { colspan: 4 },\r\n        { colspan: 4 },\r\n        { colspan: 4 }\r\n      ]}\r\n    >\r\n\r\n              <div style={{marginRight: \"1rem\"}}>\r\n                <FormField label=\"Category\">\r\n                <Select\r\n                  disabled\r\n                  selectedOption={selectedCategory}\r\n                  onChange={({ detail }) => setSelectedCategory(detail.selectedOption)}\r\n                  options={[\r\n                    { label: \"Option 1\", value: \"1\" },\r\n                    { label: \"Option 2\", value: \"2\" },\r\n                    { label: \"Option 3\", value: \"3\" },\r\n                    { label: \"Option 4\", value: \"4\" },\r\n                    { label: \"Option 5\", value: \"5\" },\r\n                  ]}\r\n                  placeholder=\"Select Category\"\r\n                />\r\n              </FormField></div>\r\n              <div style={{marginRight: \"1rem\"}}>\r\n              <FormField label=\"Units\">\r\n                <Select\r\n                  disabled\r\n                  selectedOption={selectedUnit}\r\n                  onChange={({ detail }) => setSelectedUnit(detail.selectedOption)}\r\n                  options={[\r\n                    { label: \"Option 1\", value: \"1\" },\r\n                    { label: \"Option 2\", value: \"2\" },\r\n                    { label: \"Option 3\", value: \"3\" },\r\n                    { label: \"Option 4\", value: \"4\" },\r\n                    { label: \"Option 5\", value: \"5\" },\r\n                  ]}\r\n                />\r\n              </FormField></div>\r\n              <div>\r\n              <FormField label=\"Status\">\r\n                <Select\r\n                  disabled\r\n                  selectedOption={selectedStatus}\r\n                  onChange={({ detail }) => setSelectedStatus(detail.selectedOption)}\r\n                  options={[\r\n                    { label: \"Option 1\", value: \"1\" },\r\n                    { label: \"Option 2\", value: \"2\" },\r\n                    { label: \"Option 3\", value: \"3\" },\r\n                    { label: \"Option 4\", value: \"4\" },\r\n                    { label: \"Option 5\", value: \"5\" },\r\n                  ]}\r\n                />\r\n              </FormField> </div>   </Grid>\r\n\r\n\r\n          <FormField label=\"Product Description\">\r\n              <Textarea\r\n                disabled\r\n                placeholder=\"Input Item Description\"\r\n                value={description}\r\n                onChange={({ detail }) => setDescription(detail.value)}\r\n              />\r\n          </FormField>\r\n        </SpaceBetween>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BasicDetails;\r\n","import React from 'react'\r\nimport {\r\n\r\n    Container,\r\n    Toggle,\r\n    Input,\r\n    Form,\r\n    SpaceBetween,\r\n    Checkbox,\r\n    FormField,\r\n\r\n    Header,\r\n \r\n  } from \"@cloudscape-design/components\";\r\n  import \"../../../../../assets/styles/CloudscapeGlobalstyle.css\"\r\n\r\nconst InventoryTracking = ({product}) => {\r\n    \r\n  const [checked, setChecked] = React.useState(false);\r\n  const [toggleChecked, setToggleChecked] = React.useState(false);\r\n  return (\r\n    <Container variant='borderless'  className='container-box-shadow' header={<Header variant=\"h3\">Inventory Tracking</Header>}>\r\n            <form onSubmit={(e) => e.preventDefault()}>\r\n              <Form>\r\n                <SpaceBetween direction=\"vertical\" size=\"l\">\r\n                  <Checkbox\r\n                    onChange={({ detail }) => setChecked(detail.checked)}\r\n                    checked={checked}\r\n                  >\r\n                    Track Inventory\r\n                  </Checkbox>\r\n                  <div style={{ display: \"flex\", gap: \"15px\" }}>\r\n                    <FormField label=\"Low Stock Limit\">\r\n                      <Input size=\"3xs\" placeholder=\"stock\" />\r\n                    </FormField>\r\n                    <FormField label=\"Quantity\">\r\n                      <Input value={product.data?.stockQuantity} disabled size=\"3xs\" placeholder=\"Quantity\" />\r\n                    </FormField>\r\n                  </div>\r\n                  <Toggle\r\n                    onChange={({ detail }) => setToggleChecked(detail.checked)}\r\n                    checked={toggleChecked}\r\n                  >\r\n                    Quantity Restriction\r\n                  </Toggle>\r\n\r\n                  <div style={{ display: \"flex\", gap: \"15px\" }}>\r\n                    <FormField label=\"Minimum\">\r\n                      <Input disabled size=\"3xs\" placeholder=\"minimum\" />\r\n                    </FormField>\r\n                    <FormField label=\"Maximum\">\r\n                      <Input disabled size=\"3xs\" placeholder=\"maximum\" />\r\n                    </FormField>\r\n                  </div>\r\n                </SpaceBetween>\r\n              </Form>\r\n            </form>\r\n          </Container>\r\n\r\n  )\r\n}\r\n\r\nexport default InventoryTracking","import React from 'react';\r\nimport {\r\n  Container,\r\n  Input,\r\n  Form,\r\n  SpaceBetween,\r\n  FormField,\r\n  Header,\r\n  Box,\r\n  Button,\r\n  Modal,\r\n  TokenGroup,\r\n  Table,\r\n  Grid,\r\n} from \"@cloudscape-design/components\";\r\nimport edit from \"../../../../../assets/img/icons/edit.png\";\r\nimport deleteIcon from \"../../../../../assets/img/icons/Icon.png\"; // Ensure this path is correct\r\nimport \"../../../../../assets/styles/CloudscapeGlobalstyle.css\"\r\nconst Attributes = () => {\r\n  const [option, setOption] = React.useState(\"\");\r\n  const [options, setOptions] = React.useState([]);\r\n  const [isModalOpen, setIsModalOpen] = React.useState(false);\r\n  const [title, setTitle] = React.useState(\"\");\r\n  const [isCollectionSaved, setIsCollectionSaved] = React.useState(false);\r\n  const [editingIndex, setEditingIndex] = React.useState(null);\r\n\r\n  const handleOptionKeyPress = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      e.preventDefault();\r\n      handleAddOption();\r\n    }\r\n  };\r\n\r\n  const handleAddOption = () => {\r\n    if (option) {\r\n      if (editingIndex !== null) {\r\n        // Edit existing option\r\n        const updatedOptions = [...options];\r\n        updatedOptions[editingIndex] = { label: option, value: option };\r\n        setOptions(updatedOptions);\r\n        setEditingIndex(null);\r\n      } else {\r\n        // Add new option\r\n        setOptions([...options, { label: option, value: option }]);\r\n      }\r\n      setOption(\"\");\r\n    }\r\n  };\r\n\r\n  const handleEditOption = (index) => {\r\n    setOption(options[index].label);\r\n    setEditingIndex(index);\r\n  };\r\n\r\n  const handleDeleteOption = (index) => {\r\n    setOptions(options.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const handleSave = () => {\r\n    setIsModalOpen(false);\r\n    setIsCollectionSaved(true);\r\n  };\r\n\r\n  return (\r\n    <Container className='container-box-shadow' variant='borderless'\r\n      header={\r\n        <Grid\r\n          gridDefinition={[\r\n            { colspan: { default: 10, xxs: 9 } },\r\n            { colspan: { default: 2, xxs: 3 } },\r\n          ]}\r\n        >\r\n          <Header variant=\"h3\">{isCollectionSaved ? title : \"Attributes\"}</Header>\r\n          {isCollectionSaved && (\r\n            <Button variant=\"primary\" onClick={() => setIsModalOpen(true)}>\r\n              Add Attribute \r\n            </Button>\r\n          )}\r\n        </Grid>\r\n      }\r\n    >\r\n      {isCollectionSaved ? (\r\n        <SpaceBetween direction=\"vertical\" size=\"l\">\r\n          <Table\r\n            variant=\"borderless\"\r\n            columnDefinitions={[\r\n              { header: \"Variant\", cell: item => item.label },\r\n              { header: \"Quantity\", cell: item => <Input placeholder=\"Enter quantity\" /> },\r\n              { header: \"Price\", cell: item => <Input placeholder=\"Enter price\" /> },\r\n              {\r\n                header: \"Action\",\r\n                cell: (item, rowIndex) => (\r\n                  <>\r\n                    <Button variant=\"inline-link\"  onClick={() => handleDeleteOption(rowIndex)}>\r\n                      <img src={deleteIcon} alt=\"Delete\" style={{ width: '16px', height: '16px' }} />\r\n                    </Button>\r\n                    <Button variant=\"inline-link\" onClick={() => handleEditOption(rowIndex)}>\r\n                      <img src={edit} alt=\"Edit\" style={{ width: '16px', height: '16px' }} />\r\n                    </Button>\r\n                  </>\r\n                ),\r\n              },\r\n            ]}\r\n            items={options}\r\n            empty={\r\n              <Box textAlign=\"center\" color=\"inherit\">\r\n                <b>No attributes added yet.</b>\r\n              </Box>\r\n            }\r\n          />\r\n        </SpaceBetween>\r\n      ) : (\r\n        <SpaceBetween direction=\"vertical\" size=\"l\">\r\n          <Box variant=\"h3\" textAlign=\"center\">\r\n            Create attributes to add variants to your product\r\n          </Box>\r\n          <Box variant=\"p\" textAlign=\"center\">\r\n            Attributes describe the characteristics of a product, such as\r\n            size, color, or material. You can add a maximum of three\r\n            attributes for every product.\r\n          </Box>\r\n          <Box textAlign=\"center\">\r\n            <Button variant=\"primary\" onClick={() => setIsModalOpen(true)}>\r\n              Add Attribute\r\n            </Button>\r\n          </Box>\r\n        </SpaceBetween>\r\n      )}\r\n\r\n      {/* Modal for Adding/Editing Attribute */}\r\n      <Modal\r\n        visible={isModalOpen}\r\n        header={editingIndex !== null ? \"Edit Attribute\" : \"Add Attribute\"}\r\n        onDismiss={() => {\r\n          setIsModalOpen(false);\r\n          setEditingIndex(null);\r\n          setOption(\"\");\r\n        }}\r\n        closeAriaLabel=\"Close modal\"\r\n        footer={\r\n          <Box textAlign=\"center\" float=\"right\">\r\n            <SpaceBetween direction=\"horizontal\" size=\"xs\">\r\n              <Button\r\n                variant=\"link\"\r\n                onClick={() => {\r\n                  setIsModalOpen(false);\r\n                  setEditingIndex(null);\r\n                  setOption(\"\");\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button variant=\"primary\" onClick={handleSave}>\r\n                Save\r\n              </Button>\r\n            </SpaceBetween>\r\n          </Box>\r\n        }\r\n      >\r\n        <form onSubmit={(e) => e.preventDefault()}>\r\n          <Form>\r\n            <SpaceBetween direction=\"vertical\" size=\"l\">\r\n              <FormField label=\"Title\">\r\n                <Input\r\n                  value={title}\r\n                  onChange={({ detail }) => setTitle(detail.value)}\r\n                  placeholder=\"Enter title\"\r\n                />\r\n              </FormField>\r\n              <FormField label=\"Options\">\r\n                <Input\r\n                  value={option}\r\n                  onChange={({ detail }) => setOption(detail.value)}\r\n                  onKeyPress={handleOptionKeyPress}\r\n                  placeholder=\"Enter an option and press Enter\"\r\n                />\r\n                <div style={{ marginTop: \"2px\" }}>\r\n                  <TokenGroup\r\n                    items={options.map((opt) => ({ label: opt.label }))}\r\n                    onDismiss={({ detail }) =>\r\n                      setOptions((prev) =>\r\n                        prev.filter((_, index) => index !== detail.itemIndex)\r\n                      )\r\n                    }\r\n                    alignment=\"horizontal\"\r\n                  />\r\n                </div>\r\n              </FormField>\r\n              <Button\r\n                variant=\"primary\"\r\n                onClick={handleAddOption}\r\n                disabled={!option}\r\n              >\r\n                {editingIndex !== null ? \"Edit Option\" : \"Add Option\"}\r\n              </Button>\r\n            </SpaceBetween>\r\n          </Form>\r\n        </form>\r\n      </Modal>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Attributes;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst useProductNavigation = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const products = useSelector((state) => state.products.products);\r\n  const [productIds, setProductIds] = useState([]);\r\n  const [currentProductId, setCurrentProductId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const ids = products.data?.map((product) => product.id);\r\n    setProductIds(ids);\r\n\r\n    const currentId = location.pathname.split(\"/\").pop();\r\n    setCurrentProductId(currentId);\r\n  }, [products, location.pathname]);\r\n\r\n  const goToNextProduct = () => {\r\n    const currentIndex = productIds.indexOf(currentProductId);\r\n    if (currentIndex < productIds.length - 1) {\r\n      const nextId = productIds[currentIndex + 1];\r\n      setCurrentProductId(nextId);\r\n      navigate(`/app/products/${nextId}`);\r\n    }\r\n  };\r\n\r\n  const goToPreviousProduct = () => {\r\n    const currentIndex = productIds.indexOf(currentProductId);\r\n    if (currentIndex > 0) {\r\n      const prevId = productIds[currentIndex - 1];\r\n      setCurrentProductId(prevId);\r\n      navigate(`/app/products/${prevId}`);\r\n    }\r\n  };\r\n\r\n  return { goToNextProduct, goToPreviousProduct, isAtFirstProduct: productIds.indexOf(currentProductId) === 0, isAtLastProduct: productIds.indexOf(currentProductId) === productIds.length - 1 };\r\n};\r\n\r\nexport default useProductNavigation;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  SpaceBetween,\r\n  Header,\r\n  Box,\r\n  BreadcrumbGroup,\r\n  Container,\r\n  Button,\r\n  Icon,\r\n  Input,\r\n  FormField,\r\n  Checkbox,\r\n  Toggle,\r\n  Spinner,\r\n  Flashbar,\r\n  Modal,\r\n  Grid,\r\n} from \"@cloudscape-design/components\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  fetchProducts,\r\n  fetchProductById,\r\n  putPricingById,\r\n  PutToggle,\r\n} from \"Redux-Store/Products/ProductThunk\";\r\nimport BasicDetails from \"./Components/BasicDetails\";\r\nimport InventoryTracking from \"./Components/InventoryTracking\";\r\nimport Attributes from \"./Components/Attributes\";\r\nimport useProductNavigation from \"../../Hooks/useProductNavigation\";\r\nimport \"../../../../assets/styles/CloudscapeGlobalstyle.css\";\r\n\r\n\r\nconst ProductDetail = () => {\r\n    const { id } = useParams();\r\n    const dispatch = useDispatch();\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const product = useSelector((state) => state.products.productDetail);\r\n    const [specificProduct, setSpecificProduct] = useState({});\r\n    const [active, setActive] = useState(false);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [showFlashbar, setShowFlashbar] = useState(false);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [flashMessages, setFlashMessages] = useState([]);\r\n    const [isPublishing, setIsPublishing] = useState(false);\r\n    const [charge, setCharge] = useState(false);\r\n    const [purchasePrice, setPurchasePrice] = useState(\"\");\r\n    const [msp, setmsp] = useState(\"\");\r\n    const [pricingDetails, setPricingDetails] = useState({\r\n      compareAt: \"\",\r\n      onlineStorePrice: \"\",\r\n    });\r\n  \r\n    // Validation errors\r\n    const [priceError, setPriceError] = useState(\"\");\r\n    const [compareAtError, setCompareAtError] = useState(\"\");\r\n  \r\n    const { goToNextProduct, goToPreviousProduct, isAtFirstProduct, isAtLastProduct } = useProductNavigation();\r\n  \r\n    useEffect(() => {\r\n      dispatch(fetchProducts());\r\n      if (id) {\r\n        setLoading(true);\r\n        dispatch(fetchProductById(id)).finally(() => setLoading(false));\r\n      }\r\n    }, [dispatch, id]);\r\n  \r\n    useEffect(() => {\r\n      if (product.data) {\r\n        setSpecificProduct(product.data);\r\n        setActive(product.data.active);\r\n        setPricingDetails({\r\n          compareAt: product.data.compareAt || \"\",\r\n          onlineStorePrice: product.data.onlineStorePrice || \"\",\r\n        });\r\n        setPurchasePrice(product.data.purchasingPrice || \"\");\r\n        setmsp(product.data.msp || \"\");\r\n        setCharge(product.data.chargeTax || false);\r\n      }\r\n    }, [product]);\r\n    const handleToggleChange = () => {\r\n      setShowModal(true);\r\n    };\r\n  \r\n    const handleConfirm = () => {\r\n      const newStatus = !active;\r\n      setActive(newStatus);\r\n      dispatch(PutToggle({ id: product?.data?.id, active: newStatus }))\r\n        .then(() => {\r\n          setSpecificProduct((prev) => ({ ...prev, active: newStatus }));\r\n          setShowFlashbar(true);\r\n          setTimeout(() => setShowFlashbar(false), 5000); // Auto-hide flashbar after 3 seconds\r\n        });\r\n      setShowModal(false);\r\n    };\r\n  \r\n    const handleCancel = () => {\r\n      setShowModal(false);\r\n    };\r\n  const handlePublish = async () => {\r\n    setIsModalVisible(false);\r\n    setIsPublishing(true);\r\n    setPriceError(\"\");\r\n    setCompareAtError(\"\");\r\n    try {\r\n      // Create the pricing data array\r\n      const pricingDataArray = [\r\n        {\r\n          id, // Include the id in the object\r\n          compareAt: parseFloat(pricingDetails.compareAt) || 0,\r\n          onlineStorePrice: parseFloat(pricingDetails.onlineStorePrice) || 0,\r\n        },\r\n      ];\r\n\r\n      // Dispatch the action with the pricing data array\r\n      const response = await dispatch(putPricingById(pricingDataArray));\r\n\r\n      if (response.meta.requestStatus === \"fulfilled\") {\r\n        if (id) {\r\n          setLoading(true);\r\n          dispatch(fetchProductById(id)).finally(() => setLoading(false));\r\n        }\r\n        // If the request is successful, update the state with the new pricing details\r\n        setSpecificProduct((prev) => ({\r\n          ...prev,\r\n          compareAt: pricingDetails.compareAt,\r\n          onlineStorePrice: pricingDetails.onlineStorePrice,\r\n          chargeTax: charge,\r\n        })\r\n      \r\n      );\r\n        // Show success flashbar\r\n        setFlashMessages([\r\n          {\r\n            type: \"success\",\r\n            content: \"Product pricing updated successfully.\",\r\n            dismissible: true,\r\n            onDismiss: () => setFlashMessages([]),\r\n          },\r\n        ]);\r\n\r\n    \r\n      } else {\r\n        console.error(\"Failed to update product pricing.\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error publishing product:\", err);\r\n    } finally {\r\n      setIsPublishing(false);\r\n      setTimeout(() => setFlashMessages([]), 5000);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (field, value) => {\r\n    setPricingDetails((prev) => ({\r\n      ...prev,\r\n      [field]: value,\r\n    }));\r\n\r\n    if (field === \"onlineStorePrice\" && priceError) {\r\n      setPriceError(\"\");\r\n    }\r\n    if (field === \"compareAt\" && compareAtError) {\r\n      setCompareAtError(\"\");\r\n    }\r\n  };\r\n\r\n  const handleSaveChanges = () => {\r\n    if (\r\n      parseFloat(pricingDetails.onlineStorePrice) >=\r\n      parseFloat(pricingDetails.compareAt)\r\n    ) {\r\n      setPriceError(\"Online Store Price must be less than Compare At Price\");\r\n      setIsPublishing(false);\r\n      return;\r\n    }\r\n\r\n    if (!pricingDetails.compareAt || !pricingDetails.onlineStorePrice) {\r\n      if (!pricingDetails.compareAt) {\r\n        setCompareAtError(\"Compare At Price is required\");\r\n      }\r\n      if (!pricingDetails.onlineStorePrice) {\r\n        setPriceError(\"Online Store Price is required\");\r\n      }\r\n      setIsPublishing(false);\r\n      return;\r\n    }\r\n    setIsModalVisible(true);\r\n  \r\n  };\r\n\r\n  if (!product.data) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  // console.log(product.data.name,\"name\");\r\n  return (\r\n    <Box margin={{ top: \"n\" }}>\r\n       {/* Flashbar for success or error messages */}\r\n       {flashMessages.length > 0 && (\r\n        <Flashbar items={flashMessages} />\r\n      )}\r\n      {/* Confirmation Modal */}\r\n      <Modal\r\n        onDismiss={handleCancel}\r\n        visible={showModal}\r\n        closeAriaLabel=\"Close modal\"\r\n        header=\"Confirm Change\"\r\n        footer={\r\n          <SpaceBetween direction=\"horizontal\" size=\"xs\">\r\n            <Button onClick={handleCancel} variant=\"link\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={handleConfirm} variant=\"primary\">\r\n              Confirm\r\n            </Button>\r\n          </SpaceBetween>\r\n        }\r\n      >\r\n        Are you sure you want to change the product status?\r\n      </Modal>\r\n      {/* Flashbar for Success Message */}\r\n      {showFlashbar && (\r\n        <Flashbar\r\n          items={[\r\n            {\r\n              type: \"info\",\r\n              message: \"Updated successfully\",\r\n              content: \"Product Status Changed Successfully\",\r\n              dismissible: true,\r\n              onDismiss: () => setShowFlashbar(false),\r\n            },\r\n          ]}\r\n        />\r\n      )}\r\n    \r\n      <BreadcrumbGroup\r\n        className=\"bread\"\r\n        items={[\r\n          { text: \"Dashboard\", href: \"/app/dashboard\" },\r\n          { text: \"Products\", href: \"/app/products\" },\r\n          {\r\n            text: specificProduct.name || \"Product Details\",\r\n            href: `/app/products/${id}`,\r\n          },\r\n        ]}\r\n        ariaLabel=\"Breadcrumbs\"\r\n      />\r\n      <div style={{ marginBottom: \"15px\" }}>\r\n        <Header\r\n          variant=\"h3\"\r\n          actions={\r\n            <div style={{ display: \"flex\", gap: \"8px\", alignItems: \"center\" }}>\r\n              <Toggle onChange={handleToggleChange} checked={active}>\r\n                {active ? \"Active\" : \"Inactive\"}\r\n              </Toggle>\r\n              <Button\r\n                variant=\"primary\"\r\n                onClick={handleSaveChanges}\r\n                disabled={isPublishing}\r\n              >\r\n                {isPublishing ? \"Saving...\" : \"Save Changes\"}\r\n              </Button>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  gap: \"3px\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <button\r\n                  onClick={goToPreviousProduct}\r\n                  style={{\r\n                    cursor: isAtFirstProduct ? \"not-allowed\" : \"pointer\",\r\n                    borderRadius: \"1rem\",\r\n                    width: \"45px\",\r\n                    height: \"30px\",\r\n                    backgroundColor: isAtFirstProduct ? \"gray\" : \"black\",\r\n                    color: \"white\",\r\n                    textAlign: \"center\",\r\n                    padding: \"5px\",\r\n                  }}\r\n                  disabled={isAtFirstProduct}\r\n                >\r\n                  <Icon size=\"small\" name=\"angle-left\" />\r\n                </button>\r\n                <button\r\n                  onClick={goToNextProduct}\r\n                  style={{\r\n                    cursor: isAtLastProduct ? \"not-allowed\" : \"pointer\",\r\n                    borderRadius: \"1rem\",\r\n                    width: \"45px\",\r\n                    height: \"30px\",\r\n                    padding: \"5px\",\r\n                    backgroundColor: isAtLastProduct ? \"gray\" : \"black\",\r\n                    color: \"white\",\r\n                    textAlign: \"center\",\r\n                  }}\r\n                  disabled={isAtLastProduct}\r\n                >\r\n                  <Icon size=\"small\" name=\"angle-right\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          }\r\n        >\r\n          {specificProduct.name}\r\n        </Header>\r\n      </div>\r\n      <SpaceBetween direction=\"vertical\" size=\"l\">\r\n      <Grid\r\n  gridDefinition={[\r\n    { colspan: { default: 12, xs: 12, s: 8, l: 9 } }, // Column 1: Full width on small screens, 4 columns on small tablets, 3 columns on large screens\r\n    { colspan: { default: 12, xs: 12, s: 4, l: 3 } }, // Column 2: Full width on small screens, 8 columns on small tablets, 9 columns on large screens\r\n  ]}\r\n>\r\n\r\n            <BasicDetails product={product} />\r\n            <Container\r\n            fitHeight={600}\r\n            \r\n            variant=\"borderless\"\r\n            className=\"container-box-shadow\"\r\n          >\r\n            {loading ? (\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  height: \"320px\",\r\n                  width:\"200px\"\r\n                }}\r\n              >\r\n               <Box textAlign=\"center\" float=\"left\"><Spinner size=\"large\" /></Box> \r\n              </div>\r\n            ) : (\r\n              <>\r\n                <img\r\n                    src={specificProduct?.image}\r\n                  alt={specificProduct.name}\r\n                  style={{\r\n                    height: \"200px\",\r\n                    borderRadius: \"8px\",\r\n                    width: \"100%\",\r\n                  }}\r\n                />\r\n                <span\r\n                  style={{\r\n                    fontSize: \"12px\",\r\n                    fontWeight: \"bold\",\r\n                    marginBottom: \"10px\",\r\n                  }}\r\n                >\r\n                  Additional Images\r\n                </span>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    gap: \"6px\",\r\n                  }}\r\n                >\r\n                  <img\r\n                     src={specificProduct?.images?.[1]}\r\n                    style={{\r\n                      borderRadius: \"8px\",\r\n                      height: \"110px\",\r\n                      width: \"50%\",\r\n                    }}\r\n                    alt={product?.data?.name}\r\n                  />\r\n                  <img\r\n                     src={specificProduct?.images?.[2]}\r\n                    style={{\r\n                      borderRadius: \"8px\",\r\n                      height: \"110px\",\r\n                      width: \"50%\",\r\n                    }}\r\n                    alt={product?.data?.name}\r\n                  />\r\n                </div>\r\n              </>\r\n            )}\r\n          </Container>\r\n          </Grid>\r\n\r\n\r\n          <Grid\r\n  gridDefinition={[\r\n    { colspan: { default: 12, xs: 12, s: 8, l: 9 } }, // Column 1: Full width on small screens, 4 columns on small tablets, 3 columns on large screens\r\n    { colspan: { default: 12, xs: 12, s: 4, l: 3 } }, // Column 2: Full width on small screens, 8 columns on small tablets, 9 columns on large screens\r\n  ]}\r\n>\r\n\r\n          <Container\r\n              variant=\"borderless\"\r\n              className=\"container-box-shadow\"\r\n              header={<Header variant=\"h3\">Pricing</Header>}\r\n            >\r\n              <SpaceBetween size=\"l\">\r\n                <div style={{ display: \"flex\", gap: \"15px\" }}>\r\n                  <FormField label=\"Purchasing Price\">\r\n                    <Input\r\n                      value={purchasePrice}\r\n                      size=\"3xs\"\r\n                      onChange={({ detail }) => setPurchasePrice(detail.value)}\r\n                      placeholder=\"Input Purchasing Price\"\r\n                      disabled\r\n                    />\r\n                  </FormField>\r\n                  <FormField label=\"Minimum Selling Price\">\r\n                    <Input\r\n                      value={msp}\r\n                      size=\"3xs\"\r\n                      onChange={({ detail }) => setmsp(detail.value)}\r\n                      placeholder=\"Min Selling Price\"\r\n                      disabled\r\n                    />\r\n                  </FormField>\r\n                  <FormField\r\n                    label=\"Compare At Price\"\r\n                    errorText={compareAtError}\r\n                  >\r\n                    <Input\r\n                      value={pricingDetails.compareAt}\r\n                      // type=\"number\"\r\n                      onChange={(e) =>\r\n                        handleInputChange(\"compareAt\", e.detail.value)\r\n                      }\r\n                      onBlur={() => {\r\n                        if (!pricingDetails.compareAt) {\r\n                          setCompareAtError(\"Compare At Price is required\");\r\n                        } else if (\r\n                          parseFloat(pricingDetails.onlineStorePrice) >=\r\n                          parseFloat(pricingDetails.compareAt)\r\n                        ) {\r\n                          setPriceError(\r\n                            \"Online Store Price must be less than Compare At Price\"\r\n                          );\r\n                        }\r\n                      }}\r\n                    />\r\n                  </FormField>\r\n                </div>\r\n                <Checkbox\r\n                  onChange={({ detail }) => setCharge(detail.checked)}\r\n                  checked={charge}\r\n                >\r\n                  Charge Tax on this Product\r\n                </Checkbox>\r\n                <hr />\r\n                <div style={{ display: \"flex\", gap: \"15px\" }}>\r\n                  <FormField label=\"Online Store Price\" errorText={priceError}>\r\n                    <Input\r\n                      value={pricingDetails.onlineStorePrice}\r\n                      // type=\"number\"\r\n                      onChange={(e) =>\r\n                        handleInputChange(\"onlineStorePrice\", e.detail.value)\r\n                      }\r\n                      onBlur={() => {\r\n                        if (!pricingDetails.onlineStorePrice) {\r\n                          setPriceError(\"Online Store Price is required\");\r\n                        } else if (\r\n                          parseFloat(pricingDetails.onlineStorePrice) >=\r\n                          parseFloat(pricingDetails.compareAt)\r\n                        ) {\r\n                          setPriceError(\r\n                            \"Online Store Price must be less than Compare At Price\"\r\n                          );\r\n                        }\r\n                      }}\r\n                    />\r\n                  </FormField>\r\n\r\n                  <FormField label=\"Profit\">\r\n                    <Input\r\n                      size=\"3xs\"\r\n                      placeholder=\"Profit\"\r\n                      value={\r\n                        pricingDetails.compareAt -\r\n                          pricingDetails.onlineStorePrice || 0\r\n                      }\r\n                    />\r\n                  </FormField>\r\n                  <FormField label=\"Margin\">\r\n                    <Input\r\n                      value={\r\n                        pricingDetails.compareAt &&\r\n                        pricingDetails.onlineStorePrice\r\n                          ? `${(\r\n                              ((pricingDetails.compareAt -\r\n                                pricingDetails.onlineStorePrice) /\r\n                                pricingDetails.compareAt) *\r\n                              100\r\n                            ).toFixed(2)}%`\r\n                          : \"%\"\r\n                      }\r\n                      size=\"3xs\"\r\n                      placeholder=\"Margin\"\r\n                    />\r\n                  </FormField>\r\n                </div>\r\n              </SpaceBetween>\r\n            </Container><div></div></Grid>\r\n\r\n            <Grid\r\n\r\ngridDefinition={[\r\n{ colspan: { default: 12, xs: 12, s: 8, l: 9 } }, // Column 1: Full width on small screens, 4 columns on small tablets, 3 columns on large screens\r\n{ colspan: { default: 12, xs: 12, s: 4, l: 3 } }, // Column 2: Full width on small screens, 8 columns on small tablets, 9 columns on large screens\r\n]}\r\n>\r\n\r\n            <InventoryTracking product={product} />\r\n            <div></div>\r\n</Grid>\r\n\r\n            <Grid\r\n\r\n            gridDefinition={[\r\n    { colspan: { default: 12, xs: 12, s: 8, l: 9 } }, // Column 1: Full width on small screens, 4 columns on small tablets, 3 columns on large screens\r\n    { colspan: { default: 12, xs: 12, s: 4, l: 3 } }, // Column 2: Full width on small screens, 8 columns on small tablets, 9 columns on large screens\r\n  ]}\r\n>\r\n<Attributes product={product} />\r\n<div></div>\r\n</Grid>\r\n\r\n\r\n      </SpaceBetween>\r\n      {/* Confirmation Modal */}\r\n      <Modal\r\n        onDismiss={() => setIsModalVisible(false)}\r\n        visible={isModalVisible}\r\n        closeAriaLabel=\"Close modal\"\r\n        header=\"Confirm Changes\"\r\n        footer={\r\n          <Box float=\"right\">\r\n            <Button\r\n              onClick={() => setIsModalVisible(false)}\r\n              variant=\"link\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              onClick={handlePublish}\r\n              variant=\"primary\"\r\n            >\r\n              Confirm\r\n            </Button>\r\n          </Box>\r\n        }\r\n      >\r\n        Are you sure you want to save these changes?\r\n      </Modal>     \r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ProductDetail;\r\n"],"names":["_ref","_product$data","_product$data2","_product$data3","_product$data4","_product$data5","_product$data6","product","onChange","description","setDescription","React","data","name","setName","selectedCategory","setSelectedCategory","label","category","value","selectedUnit","setSelectedUnit","units","selectedStatus","setSelectedStatus","useEffect","_product$data7","_product$data8","_product$data9","_product$data10","_product$data11","_product$data12","_jsx","Container","variant","className","fitHeight","children","Form","_jsxs","SpaceBetween","direction","size","FormField","stretch","Input","placeholder","_ref2","detail","Grid","disableGutters","gridDefinition","colspan","style","marginRight","Select","disabled","selectedOption","_ref3","options","_ref4","_ref5","Textarea","_ref6","checked","setChecked","toggleChecked","setToggleChecked","header","Header","onSubmit","e","preventDefault","Checkbox","display","gap","stockQuantity","Toggle","Attributes","option","setOption","setOptions","isModalOpen","setIsModalOpen","title","setTitle","isCollectionSaved","setIsCollectionSaved","editingIndex","setEditingIndex","handleAddOption","updatedOptions","default","xxs","Button","onClick","Table","columnDefinitions","cell","item","rowIndex","_Fragment","handleDeleteOption","index","filter","_","i","src","alt","width","height","handleEditOption","items","empty","Box","textAlign","color","Modal","visible","onDismiss","closeAriaLabel","footer","float","handleSave","onKeyPress","key","marginTop","TokenGroup","map","opt","prev","itemIndex","alignment","useProductNavigation","navigate","useNavigate","location","useLocation","products","useSelector","state","productIds","setProductIds","useState","currentProductId","setCurrentProductId","_products$data","ids","id","currentId","pathname","split","pop","goToNextProduct","currentIndex","indexOf","length","nextId","concat","goToPreviousProduct","prevId","isAtFirstProduct","isAtLastProduct","ProductDetail","_specificProduct$imag","_specificProduct$imag2","useParams","dispatch","useDispatch","loading","setLoading","productDetail","specificProduct","setSpecificProduct","active","setActive","showModal","setShowModal","showFlashbar","setShowFlashbar","isModalVisible","setIsModalVisible","flashMessages","setFlashMessages","isPublishing","setIsPublishing","charge","setCharge","purchasePrice","setPurchasePrice","msp","setmsp","pricingDetails","setPricingDetails","compareAt","onlineStorePrice","priceError","setPriceError","compareAtError","setCompareAtError","fetchProducts","fetchProductById","finally","purchasingPrice","chargeTax","handleCancel","handleInputChange","field","margin","top","Flashbar","handleConfirm","newStatus","PutToggle","then","setTimeout","type","message","content","dismissible","BreadcrumbGroup","text","href","ariaLabel","marginBottom","actions","alignItems","handleToggleChange","handleSaveChanges","parseFloat","justifyContent","cursor","borderRadius","backgroundColor","padding","Icon","xs","s","l","BasicDetails","Spinner","image","fontSize","fontWeight","images","errorText","onBlur","toFixed","InventoryTracking","async","pricingDataArray","putPricingById","meta","requestStatus","console","error","err"],"sourceRoot":""}