{"version":3,"file":"static/js/211.02c5654c.chunk.js","mappings":"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","sources":["Views/Postlogin/Orders/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchOrders } from \"Redux-Store/Orders/OrdersThunk\";\r\nimport {\r\n  Table,\r\n  Pagination,\r\n  TextFilter,\r\n  ContentLayout,\r\n  Container,\r\n  ColumnLayout,\r\n  BreadcrumbGroup,\r\n  Header,\r\n  Button,\r\n  Box,\r\n  SpaceBetween,\r\n  Grid,\r\n} from \"@cloudscape-design/components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Orders = () => {\r\n  const dispatch = useDispatch();\r\n  const ordersData = useSelector((state) => state.orders.ordersData);\r\n  const { data = [] } = ordersData;\r\n  const [selectedItems, setSelectedItems] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const ordersPerPage = 10;\r\n  const [activeButton, setActiveButton] = useState(\"All\");\r\n  const [filteringText, setFilteringText] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchOrders());\r\n  }, [dispatch]);\r\n\r\n  const filteredOrders = data.items\r\n    ? data.items.filter((item) => {\r\n        const matchesStatus =\r\n          activeButton === \"All\" || item.status === activeButton;\r\n        const matchesSearch = item.id\r\n          .toLowerCase()\r\n          .includes(filteringText.toLowerCase());\r\n        return matchesStatus && matchesSearch;\r\n      })\r\n    : [];\r\n\r\n  const totalPages = Math.ceil(filteredOrders.length / ordersPerPage);\r\n\r\n  const indexOfLastOrder = currentPage * ordersPerPage;\r\n  const indexOfFirstOrder = indexOfLastOrder - ordersPerPage;\r\n  const currentOrders = filteredOrders.slice(\r\n    indexOfFirstOrder,\r\n    indexOfLastOrder\r\n  );\r\n\r\n  const handlePageChange = (pageIndex) => {\r\n    setCurrentPage(pageIndex + 1);\r\n  };\r\n\r\n  const handleButtonClick = (button) => {\r\n    setActiveButton(button);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const handleSearchChange = (e) => {\r\n    setFilteringText(e.detail.filteringText);\r\n  };\r\n\r\n  const buttons = [\"All\", \"Confirmed\", \"Open\", \"Completed\"];\r\n\r\n  return (\r\n    <ContentLayout\r\n      headerVariant=\"high-contrast\"\r\n      breadcrumbs={\r\n        <BreadcrumbGroup\r\n          items={[\r\n            { text: \"Dashboard\", href: \"/app/Dashboard\" },\r\n            { text: \"Orders\", href: \"#\" },\r\n          ]}\r\n          ariaLabel=\"Breadcrumbs\"\r\n        />\r\n      }\r\n      header={\r\n        <Header\r\n          variant=\"h1\"\r\n          actions={\r\n            <SpaceBetween direction=\"horizontal\" size=\"xs\">\r\n              <Button>Export</Button>\r\n              <Button iconName=\"calendar\">Today</Button>\r\n            </SpaceBetween>\r\n          }\r\n        >\r\n          Orders\r\n        </Header>\r\n      }\r\n    >\r\n      <SpaceBetween direction=\"vertical\" size=\"xl\">\r\n        <Container className=\"top-container\" style={{ marginBottom: \"1rem\" }}>\r\n          <ColumnLayout columns={5} variant=\"default\" minColumnWidth={170}>\r\n            <div>\r\n              <Box variant=\"awsui-key-label\">\r\n                <p style={{ fontSize: 12, fontWeight: \"bold\" }}>Total Orders</p>\r\n              </Box>\r\n              <span\r\n                style={{\r\n                  fontSize: 34,\r\n                  fontWeight: \"900\",\r\n                  lineHeight: 1.3,\r\n                  color: \"#1D4ED8\",\r\n                }}\r\n              >\r\n                114\r\n              </span>\r\n            </div>\r\n            <div>\r\n              <Box variant=\"awsui-key-label\">\r\n                <p style={{ fontSize: 12, fontWeight: \"bold\" }}>\r\n                  Orders Completed\r\n                </p>\r\n              </Box>\r\n              <span\r\n                style={{\r\n                  fontSize: 34,\r\n                  fontWeight: \"900\",\r\n                  lineHeight: 1.3,\r\n                  color: \"#1D4ED8\",\r\n                }}\r\n              >\r\n                423\r\n              </span>\r\n            </div>\r\n            <div>\r\n              <Box variant=\"awsui-key-label\">\r\n                <p style={{ fontSize: 12, fontWeight: \"bold\" }}>\r\n                  Orders Confirmed\r\n                </p>\r\n              </Box>\r\n              <span\r\n                style={{\r\n                  fontSize: 34,\r\n                  fontWeight: \"900\",\r\n                  lineHeight: 1.3,\r\n                  color: \"#1D4ED8\",\r\n                }}\r\n              >\r\n                123\r\n              </span>\r\n            </div>\r\n            <div>\r\n              <Box variant=\"awsui-key-label\">\r\n                <p style={{ fontSize: 12, fontWeight: \"bold\" }}>\r\n                  Orders Cancelled\r\n                </p>\r\n              </Box>\r\n              <span\r\n                style={{\r\n                  fontSize: 34,\r\n                  fontWeight: \"900\",\r\n                  lineHeight: 1.3,\r\n                  color: \"#1D4ED8\",\r\n                }}\r\n              >\r\n                128\r\n              </span>\r\n            </div>\r\n            <div>\r\n              <Box variant=\"awsui-key-label\">\r\n                <p style={{ fontSize: 12, fontWeight: \"bold\" }}>\r\n                  Orders Refunded\r\n                </p>\r\n              </Box>\r\n              <span\r\n                style={{\r\n                  fontSize: 34,\r\n                  fontWeight: \"900\",\r\n                  lineHeight: 1.3,\r\n                  color: \"#1D4ED8\",\r\n                }}\r\n              >\r\n                4\r\n              </span>\r\n            </div>\r\n          </ColumnLayout>\r\n        </Container>\r\n\r\n        <SpaceBetween direction=\"vertical\" size=\"s\">\r\n          <Box>\r\n            <Grid\r\n              gridDefinition={[\r\n                { colspan: { default: 14, xxs: 4 } },\r\n                { colspan: { default: 12, xxs: 8 } },\r\n              ]}\r\n            >\r\n              <div style={{ display: \"flex\" }}>\r\n                {buttons.map((button) => (\r\n                  <button\r\n                    key={button}\r\n                    onClick={() => handleButtonClick(button)}\r\n                    style={{\r\n                      border:\r\n                        activeButton === button ? \"2px solid black\" : \"none\",\r\n                      color: activeButton === button ? \"black\" : \"gray\",\r\n                      backgroundColor:\r\n                        activeButton === button ? \"white\" : \"transparent\",\r\n                      fontWeight: activeButton === button ? \"bolder\" : \"normal\",\r\n                      padding: \"4px 12px\",\r\n                      cursor: \"pointer\",\r\n                      borderRadius: \"32px\",\r\n                    }}\r\n                  >\r\n                    {button}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  width: \"100%\",\r\n                  justifyContent: \"flex-end\",\r\n                }}\r\n              >\r\n                <div style={{ width: \"40%\" }}>\r\n                  <TextFilter\r\n                    filteringPlaceholder=\"Search\"\r\n                    filteringText={filteringText}\r\n                    onChange={handleSearchChange}\r\n                  />\r\n                </div>\r\n                <Pagination\r\n                  currentPageIndex={currentPage - 1}\r\n                  pagesCount={totalPages}\r\n                  openEnd\r\n                  onChange={({ detail }) =>\r\n                    handlePageChange(detail.currentPageIndex)\r\n                  }\r\n                />\r\n              </div>\r\n            </Grid>\r\n          </Box>\r\n          <Table\r\n            renderAriaLive={({ firstIndex, lastIndex, totalItemsCount }) =>\r\n              `Displaying items ${\r\n                firstIndex + 1\r\n              } to ${lastIndex} of ${totalItemsCount}`\r\n            }\r\n            onSelectionChange={({ detail }) =>\r\n              setSelectedItems(detail.selectedItems)\r\n            }\r\n            selectedItems={selectedItems}\r\n            ariaLabels={{\r\n              selectionGroupLabel: \"Items selection\",\r\n              allItemsSelectionLabel: ({ selectedItems }) =>\r\n                `${selectedItems.length} ${\r\n                  selectedItems.length === 1 ? \"item\" : \"items\"\r\n                } selected`,\r\n              itemSelectionLabel: ({ selectedItems }, item) => item.name,\r\n            }}\r\n            items={currentOrders}\r\n            columnDefinitions={[\r\n              {\r\n                id: \"id\",\r\n                header: \"Order ID\",\r\n                cell: (item) =>\r\n                  item.id ? (\r\n                    <Link to={`/app/order/orderdetail/${item.id}`}>#{item.id}</Link>\r\n                  ) : (\r\n                    \"N/A\"\r\n                  ),\r\n              },\r\n\r\n              {\r\n                id: \"orderDate\",\r\n                header: \"Order Date\",\r\n                cell: (item) => {\r\n                  if (!item.orderDate) {\r\n                    return \"N/A\";\r\n                  }\r\n                  const date = new Date(item.orderDate);\r\n                  const options = {\r\n                    day: \"2-digit\",\r\n                    month: \"2-digit\",\r\n                    year: \"numeric\",\r\n                  };\r\n                  return date\r\n                    .toLocaleDateString(\"en-GB\", options)\r\n                    .replace(/\\//g, \"-\"); \r\n                },\r\n              },\r\n              {\r\n                id: \"customerName\",\r\n                header: \"Customer Name\",\r\n                cell: (item) => {\r\n                  if (\r\n                    item.customerName &&\r\n                    item.customerName &&\r\n                    item.customerName\r\n                  ) {\r\n                    return item.customerName;\r\n                  }\r\n                  return \"N/A\";\r\n                },\r\n              },\r\n              {\r\n                id: \"item\",\r\n                header: \"Item\",\r\n                cell: (item) => {\r\n                  if (item.items) {\r\n                    const itemCount = item.items;\r\n                    return itemCount === 1\r\n                      ? `${itemCount} Item`\r\n                      : `${itemCount} Items`;\r\n                  }\r\n                  return \"N/A\";\r\n                },\r\n              },\r\n              {\r\n                id: \"orderStatus\",\r\n                header: \"Order Status\",\r\n                cell: (item) => item.orderStatus || \"N/A\",\r\n              },\r\n\r\n              {\r\n                id: \"totalAmount\",\r\n                header: \"Total Amount\",\r\n                cell: (item) =>\r\n                  item.totalAmount ? `Rs. ${item.totalAmount}` : \"N/A\",\r\n              },\r\n              {\r\n                id: \"area\",\r\n                header: \"Delivery Area\",\r\n                cell: (item) => item.area || \"N/A\",\r\n              },\r\n            ]}\r\n            loadingText=\"Loading resources\"\r\n            selectionType=\"multi\"\r\n            trackBy=\"id\"\r\n            variant=\"borderless\"\r\n            empty={\r\n              <Box\r\n                margin={{ vertical: \"xs\" }}\r\n                textAlign=\"center\"\r\n                color=\"inherit\"\r\n              >\r\n                <SpaceBetween size=\"m\">\r\n                  <b>No Orders</b>\r\n                </SpaceBetween>\r\n              </Box>\r\n            }\r\n          />\r\n        </SpaceBetween>\r\n      </SpaceBetween>\r\n    </ContentLayout>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n"],"names":["Orders","dispatch","useDispatch","ordersData","useSelector","state","orders","data","selectedItems","setSelectedItems","useState","currentPage","setCurrentPage","activeButton","setActiveButton","filteringText","setFilteringText","useEffect","fetchOrders","filteredOrders","items","filter","item","matchesStatus","status","matchesSearch","id","toLowerCase","includes","totalPages","Math","ceil","length","indexOfLastOrder","indexOfFirstOrder","currentOrders","slice","_jsx","ContentLayout","headerVariant","breadcrumbs","BreadcrumbGroup","text","href","ariaLabel","header","Header","variant","actions","_jsxs","SpaceBetween","direction","size","children","Button","iconName","Container","className","style","marginBottom","ColumnLayout","columns","minColumnWidth","Box","fontSize","fontWeight","lineHeight","color","Grid","gridDefinition","colspan","default","xxs","display","map","button","onClick","handleButtonClick","border","backgroundColor","padding","cursor","borderRadius","width","justifyContent","TextFilter","filteringPlaceholder","onChange","e","detail","Pagination","currentPageIndex","pagesCount","openEnd","_ref","pageIndex","Table","renderAriaLive","_ref2","firstIndex","lastIndex","totalItemsCount","concat","onSelectionChange","_ref3","ariaLabels","selectionGroupLabel","allItemsSelectionLabel","_ref4","itemSelectionLabel","_ref5","name","columnDefinitions","cell","Link","to","orderDate","Date","toLocaleDateString","day","month","year","replace","customerName","itemCount","orderStatus","totalAmount","area","loadingText","selectionType","trackBy","empty","margin","vertical","textAlign"],"sourceRoot":""}