{"version":3,"file":"static/js/351.8681370e.chunk.js","mappings":"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","sources":["Views/PreLogin/newPassword.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  FormField,\r\n  Input,\r\n  Container,\r\n  Header,\r\n  Flashbar\r\n} from \"@cloudscape-design/components\";\r\nimport { resetPassword } from \"Redux-Store/authenticate/newpwd/newPwdThunk\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { LuEyeOff } from \"react-icons/lu\";\r\nimport { FiEye } from \"react-icons/fi\";\r\n\r\nconst NewPassword = () => {\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [localError, setLocalError] = useState(\"\");\r\n  const [items, setItems] = React.useState([]);\r\n  const [confirmationCode, setConfirmationCode] = React.useState([]);\r\n  const [passwordVisible, setPasswordVisible] = useState(false);\r\n  const [newPasswordVisible, setNewPasswordVisible] = useState(false);\r\n  const [isSuccess, setIsSuccess] = useState(false); // State for success message\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { loading, error } = useSelector((state) => state.resetPwd);\r\n  const emailVal = localStorage.getItem(\"email\");\r\n  const parsedEmail = JSON.parse(emailVal);\r\n  const email = parsedEmail;\r\n\r\n  const handleSubmit = () => {\r\n    if (newPassword === confirmPassword) {\r\n      dispatch(resetPassword({ email, confirmationCode, newPassword }))\r\n        .unwrap()\r\n        .then(() => {\r\n          // If the API call is successful\r\n          setItems([\r\n            {\r\n              type: \"success\",\r\n              content: \"Password has been changed successfully!\",\r\n              dismissible: true,\r\n              dismissLabel: \"Dismiss message\",\r\n              onDismiss: () => setItems([]),\r\n              id: \"message_1\",\r\n            },\r\n          ]);\r\n          setIsSuccess(true); // Set success state to true\r\n          // Reset fields\r\n          setNewPassword(\"\");\r\n          setConfirmPassword(\"\");\r\n          setConfirmationCode(\"\");\r\n          localStorage.removeItem(\"email\");\r\n\r\n          // Navigate to the sign-in page after a delay\r\n          setTimeout(() => {\r\n            navigate(\"/auth/signin\");\r\n          }, 13000); // 13 seconds delay\r\n\r\n          console.log(email);\r\n          console.log(confirmationCode);\r\n          console.log(newPassword);\r\n        })\r\n        .catch((error) => {\r\n          // If the API call fails, show error flashbar\r\n          setItems([\r\n            {\r\n              type: \"error\",\r\n              content: `Password reset failed: ${error.message}`,\r\n              dismissible: true,\r\n              dismissLabel: \"Dismiss message\",\r\n              onDismiss: () => setItems([]),\r\n              id: \"message_2\",\r\n            },\r\n          ]);\r\n        });\r\n      setLocalError(\"\");\r\n    } else {\r\n      setLocalError(\"Passwords do not match!\");\r\n    }\r\n  };\r\n\r\n  // Extract the error message if the error is an object\r\n  const errorMessage = typeof error === \"string\" ? error : error?.message;\r\n\r\n  return (\r\n    <div style={{ paddingTop: \"10vh\" }}>\r\n      <Flashbar items={items} />\r\n\r\n      <div\r\n        style={{\r\n          paddingTop: \"10vh\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          height: isSuccess ? \"33vh\": \"63vh\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            padding: \"0 15px\",\r\n            borderRadius: \"10px\",\r\n            backgroundColor: \"white\",\r\n            boxShadow: \"0 1px 8px rgba(0, 0, 0, 0.2)\",\r\n            zIndex: 2,\r\n            width: isSuccess ? \"29vw\" : \"26vw\", // Conditionally adjust the width\r\n            // transition: \"width 0.5s ease-in-out\", // Smooth transition effect\r\n          }}\r\n        >\r\n          <Container variant=\"borderless\">\r\n            <div style={{ marginBottom: \"20px\", padding: \"0 0 0 0\" }}>\r\n              <Header variant=\"h1\">\r\n                <div\r\n                  style={{\r\n                    textShadow: \"0px 1px, 1px 0px, 1px 1px\",\r\n                    // display: \"flex\",\r\n                    // justifyContent: \"center\",\r\n                  }}\r\n                >\r\n                  {isSuccess ? <center>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Password Changed</center>: <div style={{display:\"flex\",width:\"21vw\",justifyContent:\"center\"}}><text>Create New Password</text></div>}\r\n                </div>\r\n                <span\r\n                  style={{\r\n                    fontSize: \"small\",\r\n                    color: \"#8B8D97\",\r\n                    fontWeight: \"lighter\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    paddingLeft : isSuccess ? \"3vw\" : \"0\"\r\n                  }}\r\n                >\r\n                  {isSuccess\r\n                    ? \"Your password has been changed successfully.\"\r\n                    : \"Create a strong password for your account\"}\r\n                </span>\r\n            </Header>\r\n            </div>\r\n            {!isSuccess ? (\r\n              <form\r\n                style={{ display: \"flex\", flexDirection: \"column\", gap: \"10px\" }}\r\n                onSubmit={(e) => {\r\n                  e.preventDefault();\r\n                  handleSubmit();\r\n                }}\r\n              >\r\n                <FormField label=\"Enter OTP\">\r\n                  <Input\r\n                    placeholder=\"Enter your 6-digit OTP\"\r\n                    value={confirmationCode}\r\n                    onChange={(e) => setConfirmationCode(e.detail.value)}\r\n                    maxLength={6}\r\n                  />\r\n                </FormField>\r\n                <FormField label=\"Enter New Password\">\r\n                  <div style={{ position: \"relative\", width: \"100%\" }}>\r\n                    <Input\r\n                      type={passwordVisible ? \"text\" : \"password\"}\r\n                      placeholder=\"New Password\"\r\n                      value={newPassword}\r\n                      onChange={(e) => setNewPassword(e.detail.value)}\r\n                      style={{ paddingRight: \"40px\" }} // Adjust padding for the icon\r\n                    />\r\n                    <div\r\n                      onClick={() => setPasswordVisible(!passwordVisible)}\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        right: \"10px\",\r\n                        top: \"50%\",\r\n                        transform: \"translateY(-50%)\",\r\n                        cursor: \"pointer\",\r\n                        color: \"#8B8D97\", // Adjust color as needed\r\n                      }}\r\n                    >\r\n                      {passwordVisible ? <FiEye /> : <LuEyeOff />}\r\n                    </div>\r\n                  </div>\r\n                </FormField>\r\n                <FormField label=\"Confirm\">\r\n                  <div style={{ position: \"relative\", width: \"100%\" }}>\r\n                    <Input\r\n                      type={newPasswordVisible ? \"text\" : \"password\"}\r\n                      placeholder=\"Confirm Password\"\r\n                      value={confirmPassword}\r\n                      onChange={(e) => setConfirmPassword(e.detail.value)}\r\n                    />\r\n                    <div\r\n                      onClick={() => setNewPasswordVisible(!newPasswordVisible)}\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        right: \"10px\",\r\n                        top: \"50%\",\r\n                        transform: \"translateY(-50%)\",\r\n                        cursor: \"pointer\",\r\n                        color: \"#8B8D97\", // Adjust color as needed\r\n                      }}\r\n                    >\r\n                      {newPasswordVisible ? <FiEye /> : <LuEyeOff />}\r\n                    </div>\r\n                  </div>\r\n                </FormField>\r\n                {localError && (\r\n                  <div style={{ color: \"red\", textAlign: \"center\" }}>\r\n                    {localError}\r\n                  </div>\r\n                )}\r\n                {errorMessage && (\r\n                  <div style={{ color: \"red\", textAlign: \"center\" }}>\r\n                    {errorMessage}\r\n                  </div>\r\n                )}\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    padding: \"2vh 2vw 0 2vw\",\r\n                  }}\r\n                >\r\n                  <Button\r\n                    fullWidth\r\n                    ariaExpanded\r\n                    variant=\"primary\"\r\n                    type=\"submit\"\r\n                    loading={loading}\r\n                  >\r\n                    Create Password\r\n                  </Button>\r\n                </div>\r\n              </form>\r\n            ) : (\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <Button\r\n                  variant=\"primary\"\r\n                  onClick={() => navigate(\"/auth/signin\")}\r\n                >\r\n                  Login\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </Container>\r\n        </div>\r\n      </div>\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          bottom: 0,\r\n          left: 0,\r\n          width: \"100%\",\r\n          overflow: \"hidden\",\r\n          lineHeight: 0,\r\n        }}\r\n      >\r\n        <svg\r\n          viewBox=\"0 0 1130 320\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <defs>\r\n            <linearGradient\r\n              id=\"gradient\"\r\n              x1=\"0%\"\r\n              y1=\"0%\"\r\n              x2=\"100%\"\r\n            >\r\n              <stop\r\n                offset=\"0%\"\r\n                style={{ stopColor: \"#9f4bad\", stopOpacity: 1 }}\r\n              />\r\n              <stop\r\n                offset=\"50%\"\r\n                style={{ stopColor: \"#f8a4b8\", stopOpacity: 1 }}\r\n              />\r\n              <stop\r\n                offset=\"100%\"\r\n                style={{ stopColor: \"#e2e290\", stopOpacity: 1 }}\r\n              />\r\n            </linearGradient>\r\n          </defs>\r\n          <path fill=\"url(#gradient)\" fill-opacity=\"0.98\" d=\"M0,160L60,176C120,192,240,224,360,213.3C480,203,600,149,720,117.3C840,85,960,75,1080,85.3C1200,96,1320,128,1380,144L1440,160L1440,320L1380,320C1320,320,1200,320,1080,320C960,320,840,320,720,320C600,320,480,320,360,320C240,320,120,320,60,320L0,320Z\"></path>\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewPassword;\r\n"],"names":["NewPassword","newPassword","setNewPassword","useState","confirmPassword","setConfirmPassword","localError","setLocalError","items","setItems","React","confirmationCode","setConfirmationCode","passwordVisible","setPasswordVisible","newPasswordVisible","setNewPasswordVisible","isSuccess","setIsSuccess","dispatch","useDispatch","navigate","useNavigate","loading","error","useSelector","state","resetPwd","emailVal","localStorage","getItem","email","JSON","parse","errorMessage","message","_jsxs","style","paddingTop","children","_jsx","Flashbar","display","justifyContent","height","padding","borderRadius","backgroundColor","boxShadow","zIndex","width","Container","variant","marginBottom","Header","textShadow","fontSize","color","fontWeight","paddingLeft","flexDirection","alignItems","Button","onClick","gap","onSubmit","e","preventDefault","resetPassword","unwrap","then","type","content","dismissible","dismissLabel","onDismiss","id","removeItem","setTimeout","console","log","catch","concat","FormField","label","Input","placeholder","value","onChange","detail","maxLength","position","paddingRight","right","top","transform","cursor","FiEye","LuEyeOff","textAlign","fullWidth","ariaExpanded","bottom","left","overflow","lineHeight","viewBox","xmlns","x1","y1","x2","offset","stopColor","stopOpacity","fill","d"],"sourceRoot":""}