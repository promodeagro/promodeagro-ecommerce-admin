{"version":3,"file":"static/js/211.b4886033.chunk.js","mappings":"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","sources":["Views/Postlogin/Orders/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchOrders, fetchOrderStatus } from \"Redux-Store/Orders/OrdersThunk\";\nimport {\n  Table,\n  Pagination,\n  TextFilter,\n  ContentLayout,\n  Container,\n  ColumnLayout,\n  BreadcrumbGroup,\n  Header,\n  Button,\n  Box,\n  SpaceBetween,\n  Grid,\n} from \"@cloudscape-design/components\";\nimport { Link } from \"react-router-dom\";\n\nconst Orders = () => {\n  const dispatch = useDispatch();\n  const ordersData = useSelector((state) => state.orders.ordersData);\n  const orderStatus = useSelector((state) => state.orders.order_status); // Ensure naming matches\n\n  const { data = [] } = ordersData;\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const ordersPerPage = 10;\n  const [activeButton, setActiveButton] = useState(\"All\");\n  const [filteringText, setFilteringText] = useState(\"\");\n\n  useEffect(() => {\n    dispatch(fetchOrders());\n    dispatch(fetchOrderStatus());\n  }, [dispatch]);\n  \n\n  const filteredOrders = data.items\n    ? data.items.filter((item) => {\n        const matchesStatus =\n          activeButton === \"All\" || item.status === activeButton;\n        const matchesSearch = item.id\n          .toLowerCase()\n          .includes(filteringText.toLowerCase());\n        return matchesStatus && matchesSearch;\n      })\n    : [];\n\n  const totalPages = Math.ceil(filteredOrders.length / ordersPerPage);\n\n  const indexOfLastOrder = currentPage * ordersPerPage;\n  const indexOfFirstOrder = indexOfLastOrder - ordersPerPage;\n  const currentOrders = filteredOrders.slice(\n    indexOfFirstOrder,\n    indexOfLastOrder\n  );\n\n  const handlePageChange = (pageIndex) => {\n    setCurrentPage(pageIndex + 1);\n  };\n\n  const handleButtonClick = (button) => {\n    setActiveButton(button);\n    setCurrentPage(1);\n  };\n\n  const handleSearchChange = (e) => {\n    setFilteringText(e.detail.filteringText);\n  };\n\n  const buttons = [\"All\", \"Confirmed\", \"Open\", \"Completed\"];\n\n  return (\n    <ContentLayout\n      headerVariant=\"high-contrast\"\n      breadcrumbs={\n        <BreadcrumbGroup\n          items={[\n            { text: \"Dashboard\", href: \"/app/Dashboard\" },\n            { text: \"Orders\", href: \"#\" },\n          ]}\n          ariaLabel=\"Breadcrumbs\"\n        />\n      }\n      header={\n        <Header\n          variant=\"h1\"\n          actions={\n            <SpaceBetween direction=\"horizontal\" size=\"xs\">\n              <Button>Export</Button>\n              <Button iconName=\"calendar\">Today</Button>\n            </SpaceBetween>\n          }\n        >\n          Orders\n        </Header>\n      }\n    >\n      <SpaceBetween direction=\"vertical\" size=\"xl\">\n      <Container className=\"top-container\" style={{ marginBottom: \"1rem\" }}>\n  <ColumnLayout columns={5} variant=\"default\" minColumnWidth={170}>\n    <div>\n      <Box variant=\"awsui-key-label\">\n        <p style={{ fontSize: 12, fontWeight: \"bold\" }}>Total Orders</p>\n      </Box>\n      <span\n        style={{\n          fontSize: 34,\n          fontWeight: \"900\",\n          lineHeight: 1.3,\n          color: \"#1D4ED8\",\n        }}\n      >\n  {orderStatus?.data?.totalOrderCount || \"N/A\"}\n  </span>\n    </div>\n    <div>\n      <Box variant=\"awsui-key-label\">\n        <p style={{ fontSize: 12, fontWeight: \"bold\" }}>Orders Completed</p>\n      </Box>\n      <span\n        style={{\n          fontSize: 34,\n          fontWeight: \"900\",\n          lineHeight: 1.3,\n          color: \"#1D4ED8\",\n        }}\n      >\n          {orderStatus?.data?.completedOrderCount}\n\n      </span>\n    </div>\n    <div>\n      <Box variant=\"awsui-key-label\">\n        <p style={{ fontSize: 12, fontWeight: \"bold\" }}>Orders Confirmed</p>\n      </Box>\n      <span\n        style={{\n          fontSize: 34,\n          fontWeight: \"900\",\n          lineHeight: 1.3,\n          color: \"#1D4ED8\",\n        }}\n      >\n  {orderStatus?.data?.confirmedOrderCount}\n  </span>\n    </div>\n    <div>\n      <Box variant=\"awsui-key-label\">\n        <p style={{ fontSize: 12, fontWeight: \"bold\" }}>Orders Cancelled</p>\n      </Box>\n      <span\n        style={{\n          fontSize: 34,\n          fontWeight: \"900\",\n          lineHeight: 1.3,\n          color: \"#1D4ED8\",\n        }}\n      >\n  {orderStatus?.data?.cancelledOrderCount}\n  </span>\n    </div>\n    <div>\n      <Box variant=\"awsui-key-label\">\n        <p style={{ fontSize: 12, fontWeight: \"bold\" }}>Orders Refunded</p>\n      </Box>\n      <span\n        style={{\n          fontSize: 34,\n          fontWeight: \"900\",\n          lineHeight: 1.3,\n          color: \"#1D4ED8\",\n        }}\n      >\n  {orderStatus?.data?.refundedOrderCount}\n  </span>\n    </div>\n  </ColumnLayout>\n</Container>\n\n\n\n        <SpaceBetween direction=\"vertical\" size=\"s\">\n          <Box>\n            <Grid\n              gridDefinition={[\n                { colspan: { default: 14, xxs: 4 } },\n                { colspan: { default: 12, xxs: 8 } },\n              ]}\n            >\n              <div style={{ display: \"flex\" }}>\n                {buttons.map((button) => (\n                  <button\n                    key={button}\n                    onClick={() => handleButtonClick(button)}\n                    style={{\n                      border:\n                        activeButton === button ? \"2px solid black\" : \"none\",\n                      color: activeButton === button ? \"black\" : \"gray\",\n                      backgroundColor:\n                        activeButton === button ? \"white\" : \"transparent\",\n                      fontWeight: activeButton === button ? \"bolder\" : \"normal\",\n                      padding: \"4px 12px\",\n                      cursor: \"pointer\",\n                      borderRadius: \"32px\",\n                    }}\n                  >\n                    {button}\n                  </button>\n                ))}\n              </div>\n              <div\n                style={{\n                  display: \"flex\",\n                  width: \"100%\",\n                  justifyContent: \"flex-end\",\n                }}\n              >\n                <div style={{ width: \"40%\" }}>\n                  <TextFilter\n                    filteringPlaceholder=\"Search\"\n                    filteringText={filteringText}\n                    onChange={handleSearchChange}\n                  />\n                </div>\n                <Pagination\n                  currentPageIndex={currentPage - 1}\n                  pagesCount={totalPages}\n                  openEnd\n                  onChange={({ detail }) =>\n                    handlePageChange(detail.currentPageIndex)\n                  }\n                />\n              </div>\n            </Grid>\n          </Box>\n          <Table\n            renderAriaLive={({ firstIndex, lastIndex, totalItemsCount }) =>\n              `Displaying items ${\n                firstIndex + 1\n              } to ${lastIndex} of ${totalItemsCount}`\n            }\n            onSelectionChange={({ detail }) =>\n              setSelectedItems(detail.selectedItems)\n            }\n            selectedItems={selectedItems}\n            ariaLabels={{\n              selectionGroupLabel: \"Items selection\",\n              allItemsSelectionLabel: ({ selectedItems }) =>\n                `${selectedItems.length} ${\n                  selectedItems.length === 1 ? \"item\" : \"items\"\n                } selected`,\n              itemSelectionLabel: ({ selectedItems }, item) => item.name,\n            }}\n            items={currentOrders}\n            columnDefinitions={[\n              {\n                id: \"id\",\n                header: \"Order ID\",\n                cell: (item) =>\n                  item.id ? (\n                    <Link to={`/app/order/orderdetail/${item.id}`}>#{item.id}</Link>\n                  ) : (\n                    \"N/A\"\n                  ),\n              },\n\n              {\n                id: \"orderDate\",\n                header: \"Order Date\",\n                cell: (item) => {\n                  if (!item.orderDate) {\n                    return \"N/A\";\n                  }\n                  const date = new Date(item.orderDate);\n                  const options = {\n                    day: \"2-digit\",\n                    month: \"2-digit\",\n                    year: \"numeric\",\n                  };\n                  return date\n                    .toLocaleDateString(\"en-GB\", options)\n                    .replace(/\\//g, \"-\"); \n                },\n              },\n              {\n                id: \"customerName\",\n                header: \"Customer Name\",\n                cell: (item) => {\n                  if (\n                    item.customerName &&\n                    item.customerName &&\n                    item.customerName\n                  ) {\n                    return item.customerName;\n                  }\n                  return \"N/A\";\n                },\n              },\n              {\n                id: \"item\",\n                header: \"Item\",\n                cell: (item) => {\n                  if (item.items) {\n                    const itemCount = item.items;\n                    return itemCount === 1\n                      ? `${itemCount} Item`\n                      : `${itemCount} Items`;\n                  }\n                  return \"N/A\";\n                },\n              },\n              {\n                id: \"orderStatus\",\n                header: \"Order Status\",\n                cell: (item) => item.orderStatus || \"N/A\",\n              },\n\n              {\n                id: \"totalAmount\",\n                header: \"Total Amount\",\n                cell: (item) =>\n                  item.totalAmount ? `Rs. ${item.totalAmount}` : \"N/A\",\n              },\n              {\n                id: \"area\",\n                header: \"Delivery Area\",\n                cell: (item) => item.area || \"N/A\",\n              },\n            ]}\n            loadingText=\"Loading resources\"\n            selectionType=\"multi\"\n            trackBy=\"id\"\n            variant=\"borderless\"\n            empty={\n              <Box\n                margin={{ vertical: \"xs\" }}\n                textAlign=\"center\"\n                color=\"inherit\"\n              >\n                <SpaceBetween size=\"m\">\n                  <b>No Orders</b>\n                </SpaceBetween>\n              </Box>\n            }\n          />\n        </SpaceBetween>\n      </SpaceBetween>\n    </ContentLayout>\n  );\n};\n\nexport default Orders;\n"],"names":["Orders","_orderStatus$data","_orderStatus$data2","_orderStatus$data3","_orderStatus$data4","_orderStatus$data5","dispatch","useDispatch","ordersData","useSelector","state","orders","orderStatus","order_status","data","selectedItems","setSelectedItems","useState","currentPage","setCurrentPage","activeButton","setActiveButton","filteringText","setFilteringText","useEffect","fetchOrders","fetchOrderStatus","filteredOrders","items","filter","item","matchesStatus","status","matchesSearch","id","toLowerCase","includes","totalPages","Math","ceil","length","indexOfLastOrder","indexOfFirstOrder","currentOrders","slice","_jsx","ContentLayout","headerVariant","breadcrumbs","BreadcrumbGroup","text","href","ariaLabel","header","Header","variant","actions","_jsxs","SpaceBetween","direction","size","children","Button","iconName","Container","className","style","marginBottom","ColumnLayout","columns","minColumnWidth","Box","fontSize","fontWeight","lineHeight","color","totalOrderCount","completedOrderCount","confirmedOrderCount","cancelledOrderCount","refundedOrderCount","Grid","gridDefinition","colspan","default","xxs","display","map","button","onClick","handleButtonClick","border","backgroundColor","padding","cursor","borderRadius","width","justifyContent","TextFilter","filteringPlaceholder","onChange","e","detail","Pagination","currentPageIndex","pagesCount","openEnd","_ref","pageIndex","Table","renderAriaLive","_ref2","firstIndex","lastIndex","totalItemsCount","concat","onSelectionChange","_ref3","ariaLabels","selectionGroupLabel","allItemsSelectionLabel","_ref4","itemSelectionLabel","_ref5","name","columnDefinitions","cell","Link","to","orderDate","Date","toLocaleDateString","day","month","year","replace","customerName","itemCount","totalAmount","area","loadingText","selectionType","trackBy","empty","margin","vertical","textAlign"],"sourceRoot":""}