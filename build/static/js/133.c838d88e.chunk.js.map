{"version":3,"file":"static/js/133.c838d88e.chunk.js","mappings":"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","sources":["Views/Postlogin/Products/Numbers.js","Views/Postlogin/Products/index.js","../node_modules/src/form-field/index.tsx","../node_modules/src/internal/context/reset-contexts-for-modal.tsx","../node_modules/@cloudscape-design/components/modal/styles.css.js","../node_modules/src/modal/body-scroll.ts","../node_modules/src/modal/internal.tsx","../node_modules/src/internal/hooks/use-intersection-observer/index.ts","../node_modules/src/modal/index.tsx","../node_modules/src/spinner/index.tsx","../node_modules/@cloudscape-design/components/toggle/styles.css.js","../node_modules/src/toggle/internal.tsx","../node_modules/src/toggle/index.tsx"],"sourcesContent":["import { Box } from '@cloudscape-design/components'\r\nimport ColumnLayout from '@cloudscape-design/components/column-layout'\r\nimport React, { act, useEffect, useState } from 'react'\r\nimport { useSelector,useDispatch } from 'react-redux'\r\n\r\n\r\nimport { fetchOrders } from 'Redux-Store/Orders/OrdersThunk'\r\n\r\n\r\nconst Numbers = ({products}) => {\r\n  const dispatch = useDispatch();\r\n  const ordersData = useSelector((state) => state.orders.ordersData);\r\n  const { data = [] } = ordersData;\r\n  useEffect(() => {\r\n    dispatch(fetchOrders());\r\n  }, [dispatch]);\r\n  //  console.log(data,\"orderssss\");\r\n  const [active, setActive] = useState([]);\r\n  const [inactive, setInactive] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    if (products.data) {\r\n      const activeProducts = [];\r\n      const inactiveProducts = [];\r\n  \r\n      products.data.map(e => {\r\n        if (e.active === true) {\r\n          activeProducts.push(e);\r\n        } else if (e.active === false) {\r\n          inactiveProducts.push(e);\r\n        }\r\n        return null; // Since map expects a return value, we return null here\r\n      });\r\n  \r\n      setActive(activeProducts);\r\n      setInactive(inactiveProducts);\r\n  \r\n\r\n    }\r\n  }, [products]);\r\n  \r\n  return (\r\n\r\n    <ColumnLayout columns={5} variant=\"default\" minColumnWidth={150}>\r\n    <div>\r\n      <Box variant=\"awsui-key-label\">\r\n        <p style={{ fontSize: 12 }}> Active Products</p>\r\n      </Box>\r\n      <span style={{ fontSize: 36, fontWeight: '900', lineHeight: 1.3, color: \"#0972D3\" }}>{active?.length}</span>\r\n    </div>\r\n    <div>\r\n      <Box variant=\"awsui-key-label\">\r\n        <p style={{ fontSize: 12 }}>Total Stock</p>\r\n      </Box>\r\n      <span style={{ fontSize: 36, fontWeight: '900', lineHeight: 1.3, color: \"#0972D3\" }}>436K</span>\r\n    </div>\r\n    <div>\r\n      <Box variant=\"awsui-key-label\">\r\n        <p style={{ fontSize: 12 }}>Total Orders</p>\r\n      </Box>\r\n      <span style={{ fontSize: 36, fontWeight: '900', lineHeight: 1.3, color: \"#0972D3\" }}>{data.items?.length}</span>\r\n    </div>\r\n    <div>\r\n      <Box variant=\"awsui-key-label\">\r\n        <p style={{ fontSize: 12 }}>Net Profit</p>\r\n      </Box>\r\n      <span style={{ fontSize: 36, fontWeight: '900', lineHeight: 1.3, color: \"#0972D3\" }}>₹123K</span>\r\n    </div>\r\n    <div>\r\n      <Box variant=\"awsui-key-label\">\r\n        <p style={{ fontSize: 12 }}>Inactive Products</p>\r\n      </Box>\r\n      <span style={{ fontSize: 36, fontWeight: '900', lineHeight: 1.3, color: \"#0972D3\" }}>{inactive?.length}</span>\r\n    </div>\r\n  </ColumnLayout>\r\n  )\r\n}\r\n\r\nexport default Numbers","import React, { useEffect,useState,useRef,useCallback } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Header,\r\n  SpaceBetween,\r\n  ContentLayout,\r\n  Table,\r\n  BreadcrumbGroup,\r\n  Toggle,\r\n  TextFilter,\r\n  Select,\r\n  Input,\r\n  Modal,\r\n  Flashbar,\r\n  FormField,\r\n  Grid,\r\n  Spinner\r\n} from \"@cloudscape-design/components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  fetchProducts,\r\n  PutToggle,\r\n  putPricingById,\r\n\r\n} from \"Redux-Store/Products/ProductThunk\";\r\nimport { resetProducts,toggleStatus } from \"Redux-Store/Products/ProductsSlice\";\r\nimport \"../../../assets/styles/CloudscapeGlobalstyle.css\";\r\nimport Numbers from \"./Numbers\";\r\n\r\nconst Products = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const { data, nextKey, hasMore, status,error} = useSelector((state) => state.products.products);\r\n\r\n  const [selectedItems, setSelectedItems] = useState([]);\r\n  const [filteringText, setFilteringText] = useState(\"\");\r\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n  const [selectedStatus, setSelectedStatus] = useState(\"\");\r\n  const [editedProducts, setEditedProducts] = useState({});\r\n  const [isModalVisible, setModalVisible] = useState(false);\r\n  const [isModalVisible1, setModalVisible1] = useState(false);\r\n  const [isBulkModifySuccess, setBulkModifySuccess] = useState(false);\r\n  const [isBulkModifySuccessflash, setBulkModifySuccessflash] = useState(false);\r\n  const [validationErrors, setValidationErrors] = useState({});\r\n  const [isToggle, setIsToggle] = useState(false);\r\n  const [toggleItem, setToggleItem] = useState(null);\r\n  const [isFetching, setIsFetching] = useState(false);\r\n  const [isFieldChanged, setIsFieldChanged] = useState(true);\r\n  const observer = useRef();\r\n\r\n  useEffect(() => {\r\n    // Reset products when filters change\r\n    dispatch(resetProducts());\r\n\r\n    // Fetch initial products\r\n    dispatch(fetchProducts({\r\n      search: filteringText,\r\n      category: selectedCategory,\r\n      active:selectedStatus,\r\n    }));\r\n  }, [dispatch,selectedStatus, filteringText, selectedCategory]);\r\n\r\n  const handleInputChange = (id, field, value) => {\r\n    setEditedProducts(prev => ({\r\n      ...prev,\r\n      [id]: {\r\n        ...prev[id],\r\n        [field]: value,\r\n      },\r\n    }));\r\n    \r\n    validateField(id, field, value);\r\n    setIsFieldChanged(false);\r\n  };\r\n\r\n  const validateField = (id, field, value) => {\r\n    const osp = value;\r\n    const cp = field === \"compareAt\" ? value : editedProducts[id]?.compareAt || \"\";\r\n    let errors = {};\r\n\r\n    if (field === \"onlineStorePrice\" && !osp) {\r\n      errors.onlineStorePrice = \"Required!\";\r\n    }\r\n\r\n    if (field === \"compareAt\") {\r\n      if (!cp) {\r\n        errors.compareAt = \"Required!\";\r\n      } else if (parseFloat(cp) < parseFloat(osp)) {\r\n        errors.compareAt = \"CP must be greater than OSP\";\r\n      }\r\n    }\r\n\r\n    setValidationErrors(prevErrors => ({\r\n      ...prevErrors,\r\n      [id]: errors,\r\n    }));\r\n  };\r\n\r\n \r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n  const confirmToggleChange = () => {\r\n    if (selectedItem) {\r\n      dispatch(PutToggle({ id: selectedItem.id, active: !selectedItem.active })).then((response) => {\r\n        if (response.meta.requestStatus === \"fulfilled\") {\r\n          dispatch(toggleStatus({ id: selectedItem.id }));\r\n        } else {\r\n          // Handle rollback or show an error message\r\n        }\r\n      });\r\n    }\r\n    setIsToggle(true);\r\n    // setModalVisible(false);\r\n\r\n    setTimeout(() => {\r\n      setIsToggle(false);\r\n    }, 5000);\r\n    setModalVisible(false); // Close the modal\r\n  };\r\n\r\n\r\n  const handleToggleChange = (item) => {\r\n    setToggleItem(item);\r\n    setModalVisible(true);\r\n    setSelectedItem(item);\r\n  \r\n  };\r\n\r\n\r\n  const handleSelectChange = ({ detail }) => {\r\n    setSelectedCategory(detail.selectedOption.value);\r\n  };\r\n  const handleSelectionChangeStatus = ({ detail }) => {\r\n    setSelectedStatus(detail.selectedOption.value);\r\n  };\r\n\r\n\r\n  const handleSearchChange = (e) => {\r\n    setFilteringText(e.detail.filteringText);\r\n  };\r\n\r\n  const selectOptions = [\r\n    { label: \"All\", value: \"\" },\r\n    { label: \"Fruits And Vegetables\", value: \"Fruits And Vegetables\" },\r\n    { label: \"Dairies And Groceries\", value: \"Diaries And Groceries\" },\r\n    { label: \"Meat/Fish/Eggs\", value: \"Meat/Fish/Eggs\" },\r\n    { label: \"Fruit\", value: \"Fruit\" },\r\n    { label: \"vegetable\", value: \"Vegetable\" },\r\n    { label: \"Bengali Special\", value: \"Bengali Special\" },\r\n  ];\r\n  const selectOptionsStatus = [\r\n    { label: \"All\", value: \"\" },\r\n    { label: \"Active\", value: \"true\" },\r\n    { label: \"Inactive\", value: \"false\" },\r\n\r\n  ];\r\n\r\n  const handleSelectionChange = ({ detail }) => {\r\n    setSelectedItems(detail.selectedItems);\r\n  };\r\n\r\n  const handleBulkModifyPrice = () => {\r\n    if (validateInputs()) {\r\n      setModalVisible1(true);\r\n    }\r\n  };\r\n\r\n  const validateInputs = () => {\r\n    let valid = true;\r\n    const errors = {};\r\n\r\n    selectedItems.forEach(item => {\r\n      const editedProduct = editedProducts[item.id] || {};\r\n      const osp = editedProduct.onlineStorePrice || item.onlineStorePrice;\r\n      const cp = editedProduct.compareAt || item.compareAt;\r\n      let itemErrors = {};\r\n\r\n      if (!osp) {\r\n        valid = false;\r\n        itemErrors.onlineStorePrice = \"Required!\";\r\n      }\r\n\r\n      if (!cp) {\r\n        valid = false;\r\n        itemErrors.compareAt = \"Required!\";\r\n      } else if (parseFloat(cp) < parseFloat(osp)) {\r\n        valid = false;\r\n        itemErrors.compareAt = \"CP must be greater than OSP\";\r\n      }\r\n\r\n      if (Object.keys(itemErrors).length > 0) {\r\n        errors[item.id] = itemErrors;\r\n      }\r\n    });\r\n\r\n    setValidationErrors(errors);\r\n    return valid;\r\n  };\r\n\r\n  const handleModalConfirm = async () => {\r\n    const pricingDataArray = selectedItems.map(item => ({\r\n      id: item.id,\r\n      compareAt: parseFloat(editedProducts[item.id]?.compareAt || item.compareAt),\r\n      onlineStorePrice: parseFloat(editedProducts[item.id]?.onlineStorePrice || item.onlineStorePrice),\r\n    }));\r\n\r\n    try {\r\n      const response = await dispatch(putPricingById(pricingDataArray));\r\n      console.log(response,\"bulk resp\");\r\n\r\n      if (response.meta.requestStatus === \"fulfilled\" && response.payload.status === 200) {\r\n        console.log(\"bulk modify\",response);\r\n        setBulkModifySuccessflash(true);\r\n        setBulkModifySuccess(true);\r\n        setSelectedItems([]);\r\n        setModalVisible1(false);\r\n      } else {\r\n        setBulkModifySuccessflash(true);\r\n        setBulkModifySuccess(true);\r\n        setSelectedItems([]);\r\n        setModalVisible1(false);\r\n      }\r\n\r\n      setTimeout(() => {\r\n        setBulkModifySuccessflash(false);\r\n      }, 5000);\r\n    } catch (err) {\r\n      console.error(\"Failed to update product pricing:\", err);\r\n      setBulkModifySuccess(false);\r\n    }\r\n  };\r\n\r\n  const navigateToStore = () => {\r\n    const baseCategoryUrl = \"https://promodeagro.com\";\r\n    // const categoryUrlPart = {\r\n    //   \"Leafy Vegetables\": \"/category/VEGETABLES/Leafy%20Vegetables\",\r\n    //   \"Fruit\": \"/category/Fruits/Fresh%20Fruits\",\r\n    //   \"Vegetable\": \"/category/VEGETABLES/Fresh%20Vegetables\",\r\n    //   \"Bengali Vegetable\": \"/category/VEGETABLES/Bengali%20Vegetables\",\r\n    // }[selectedCategory] || \"\";\r\n\r\n    window.open(`${baseCategoryUrl}`, \"_blank\");\r\n  };\r\n\r\n  const [items1, setItems] = \r\n  \r\n  useState([\r\n    {\r\n      type: \"info\",\r\n      dismissible: true,\r\n      dismissLabel: \"Dismiss message\",\r\n      onDismiss: () => setItems([]),\r\n      content: (\r\n        <>\r\n          <b>Price updated successfully! </b>\r\n          <p>The new price is now live on the online store</p>\r\n        </>\r\n      ),\r\n      id: \"message_1\",\r\n    },\r\n  ]);\r\n  const [flashbarItems, setFlashbarItems] = useState([\r\n    {\r\n      type: \"info\",\r\n      dismissible: true,\r\n      dismissLabel: \"Dismiss message\",\r\n      onDismiss: () => setFlashbarItems([]),\r\n      content: (\r\n        <>\r\n          <b>Status Updated successfully </b>\r\n          <p>Toggle status have been updated successfully</p>\r\n        </>\r\n      ),\r\n      id: \"message_1\",\r\n    },\r\n  ]);\r\n\r\n  // Infinite Scroll Logic\r\n  const previousNextKey = useRef(null); // Store the previous nextKey\r\n\r\n  const lastProductRef = useCallback(node => {\r\n    if (status === 'loading' || !hasMore || isFetching) return; // Stop if loading, no more data, or currently fetching\r\n\r\n    if (observer.current) observer.current.disconnect();\r\n\r\n    observer.current = new IntersectionObserver(entries => {\r\n      if (entries[0].isIntersecting && hasMore && nextKey) {\r\n        if (previousNextKey.current !== nextKey) {\r\n          setIsFetching(true);\r\n          console.log(\"Fetching next set of products with nextKey:\", nextKey);\r\n\r\n          dispatch(fetchProducts({\r\n            search: filteringText,\r\n            category: selectedCategory,\r\n            nextKey: nextKey,\r\n          })).finally(() => {\r\n            setIsFetching(false);\r\n            previousNextKey.current = nextKey; // Update previous nextKey after fetch\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    if (node) observer.current.observe(node);\r\n  }, [status, nextKey, dispatch, filteringText, selectedCategory, hasMore, isFetching]);\r\n\r\n  \r\n\r\n  return (\r\n    <ContentLayout\r\n    notifications={\r\n      <>\r\n        {/* Always render Flashbar with flashbarItems */}\r\n        {isToggle && <Flashbar items={flashbarItems} />}\r\n    \r\n        {/* Conditionally render Flashbar based on isBulkModifySuccess */}\r\n        {isBulkModifySuccessflash && <Flashbar items={items1} />}\r\n      </>\r\n    }\r\n  \r\n      breadcrumbs={\r\n        <BreadcrumbGroup\r\n          items={[\r\n            { text: \"Dashboard\", href: \"/app/dashboard\" },\r\n            { text: \"Products\", href: \"/app/dashboard/products\" },\r\n          ]}\r\n          ariaLabel=\"Breadcrumbs\"\r\n        />\r\n      }\r\n      headerVariant=\"high-contrast\"\r\n      header={\r\n        <Header\r\n          actions={\r\n            <SpaceBetween alignItems=\"center\" direction=\"horizontal\" size=\"xs\">\r\n              {/* <Button variant=\"normal\">Export</Button> */}\r\n            </SpaceBetween>\r\n          }\r\n          variant=\"h1\"\r\n        >\r\n          Products\r\n        </Header>\r\n      }\r\n    >\r\n\r\n      <SpaceBetween direction=\"vertical\" size=\"s\">\r\n        <Container>\r\n          <Numbers products={{ data, nextKey, status, error }} />\r\n        </Container>\r\n\r\n        <div>\r\n          <Table\r\n            header={\r\n              <Box>\r\n              <Grid\r\n                disableGutters\r\n                gridDefinition={[\r\n                  { colspan: { default: 12, xxs: 6 } },\r\n                  { colspan: { default: 12, xxs: 6 } },\r\n                ]}\r\n              >\r\n                              <div style={{ display: \"flex\", gap: \"0.4rem\" }}>\r\n\r\n                    <TextFilter\r\n                      filteringPlaceholder=\"Search\"\r\n                      filteringText={filteringText}\r\n                      onChange={handleSearchChange}\r\n                    />\r\n                    <Select\r\n                      options={selectOptions}\r\n                      selectedOption={selectOptions.find(\r\n                        (option) => option.value === selectedCategory\r\n                      )}\r\n                      onChange={handleSelectChange}\r\n                      placeholder=\"Select Category\"\r\n                    />             \r\n\r\n                    <Select\r\n                      options={selectOptionsStatus}\r\n                      selectedOption={selectOptionsStatus.find(\r\n                        (option) => option.value === selectedStatus\r\n                      )}\r\n                      onChange={handleSelectionChangeStatus}\r\n                      placeholder=\"Select Status\"\r\n                    />\r\n\r\n                                   </div>\r\n                   <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"flex-end\",\r\n                  gap: \"0.4rem\"\r\n                }}\r\n              >\r\n                  {isBulkModifySuccess && (\r\n                    <Button variant=\"normal\" onClick={navigateToStore}>\r\n                      View On Store\r\n                    </Button>\r\n                  )}\r\n\r\n                    <Button\r\n                      disabled={isFieldChanged}\r\n                      variant=\"normal\"\r\n                      onClick={handleBulkModifyPrice}\r\n                    >\r\n                      Bulk Modify Price\r\n                    </Button>\r\n                    </div>\r\n\r\n                    </Grid>\r\n\r\n              </Box>\r\n            }\r\n            variant=\"borderless\"\r\n            columnDefinitions={[\r\n              {\r\n                id: \"code\",\r\n                header: \"Item Code\",\r\n                cell: (item) => (\r\n                  <Link to={`/app/products/${item.id}`}>{item.itemCode}</Link>\r\n                ),\r\n              },\r\n              {\r\n                id: \"name\",\r\n                header: \"Name\",\r\n                cell: (item) => (\r\n                  <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                    <img\r\n                      src={item?.images}\r\n                      alt={item.name}\r\n                      height={35}\r\n                      width={35}\r\n                      style={{ borderRadius: \"8px\", marginRight: \"10px\" }}\r\n                    />\r\n                    <p style={{ width: \"90px\" }}>{item.name}</p>\r\n                  </div>\r\n                ),\r\n              },\r\n              {\r\n                id: \"category\",\r\n                header: \"Category\",\r\n                cell: (item) => <Box textAlign=\"center\">{item?.category}</Box>,\r\n              },\r\n              {\r\n                id: \"stock\",\r\n                header: \"On Hand Quantity\",\r\n                cell: (item) => (\r\n                  <Box textAlign=\"center\">\r\n                    {item?.stockQuantity}/{item?.units}\r\n                  </Box>\r\n                ),\r\n              },\r\n              {\r\n                id: \"alert\",\r\n                header: \"Stock Alert\",\r\n                cell: (item) => (\r\n                  <p style={{ color: \"#0972D3\", textAlign: \"center\" }}>\r\n                    Available\r\n                  </p>\r\n                ),\r\n              },\r\n              {\r\n                id: \"onlineStorePrice\",\r\n                header: \"Online Price\",\r\n                cell: (item) => (\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <FormField\r\n                      errorText={validationErrors[item.id]?.onlineStorePrice}\r\n                    >\r\n                      <Input\r\n                        disabled={\r\n                          !selectedItems.some(\r\n                            (selectedItem) => selectedItem.id === item.id\r\n                          )\r\n                        }\r\n                        placeholder=\"Enter Price\"\r\n                        type=\"number\"\r\n                        value={\r\n                          editedProducts[item.id]?.onlineStorePrice ??\r\n                          item.onlineStorePrice\r\n                        }\r\n                        onChange={(e) =>\r\n                          handleInputChange(\r\n                            item.id,\r\n                            \"onlineStorePrice\",\r\n                            e.detail.value\r\n                          )\r\n                        }\r\n                        ariaLabel=\"online store price\"\r\n                      />\r\n                    </FormField>\r\n                  </div>\r\n                ),\r\n              },\r\n              {\r\n                id: \"compareAt\",\r\n                header: \"Compare Price\",\r\n                cell: (item) => (\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <FormField errorText={validationErrors[item.id]?.compareAt}>\r\n                      <Input\r\n                        placeholder=\"Enter Price\"\r\n                        type=\"number\"\r\n                        value={\r\n                          editedProducts[item.id]?.compareAt ?? item.compareAt\r\n                        }\r\n                        onChange={(e) =>\r\n                          handleInputChange(\r\n                            item.id,\r\n                            \"compareAt\",\r\n                            e.detail.value\r\n                          )\r\n                        }\r\n                        ariaLabel=\"compare at price\"\r\n                        disabled={\r\n                          !selectedItems.some(\r\n                            (selectedItem) => selectedItem.id === item.id\r\n                          )\r\n                        }\r\n                      />\r\n                    </FormField>\r\n                  </div>\r\n                ),\r\n              },\r\n              {\r\n                id: \"status\",\r\n                header: \"Status\",\r\n                cell: (item) => (\r\n                  <div style={{ width: \"90px\" }}>\r\n                    <Toggle\r\n                      onChange={() => handleToggleChange(item)}\r\n                      checked={item.active}\r\n                    >\r\n                      <p>{item.active ? \"Active\" : \"Inactive\"}</p>\r\n                    </Toggle>\r\n                  </div>\r\n                ),\r\n              },\r\n\r\n            ]}\r\n            selectedItems={selectedItems}\r\n            onSelectionChange={handleSelectionChange}\r\n            items={data}\r\n            selectionType=\"multi\"\r\n          />\r\n          {/* Sentinel element for infinite scrolling */}\r\n          <div ref={lastProductRef} style={{ height: '20px',textAlign:\"center\" }}>\r\n            {isFetching && <Spinner size=\"large\" />}\r\n          </div>\r\n        </div>\r\n        {status === 'failed' && <Box color=\"red\">{error}</Box>}\r\n      </SpaceBetween>\r\n      <Modal\r\n     \r\n     visible={isModalVisible1}\r\n     onDismiss={() => setModalVisible1(false)}\r\n     header=\"Confirm Bulk Modify\"\r\n     footer={\r\n       <SpaceBetween direction=\"horizontal\" size=\"xs\">\r\n         <Button variant=\"link\" onClick={() => setModalVisible1(false)}>\r\n           Cancel\r\n         </Button>\r\n         <Button variant=\"primary\" onClick={handleModalConfirm}>\r\n           Confirm\r\n         </Button>\r\n       </SpaceBetween>\r\n     }\r\n   >\r\n     Are you sure you want to bulk modify the prices for the selected items?\r\n   </Modal>\r\n   {/* Modal for confirmation */}\r\n   <Modal\r\n        onDismiss={() => setModalVisible(false)}\r\n     visible={isModalVisible}\r\n     closeAriaLabel=\"Close modal\"\r\n     header=\"Confirm Status Change\"\r\n     footer={\r\n       <Box float=\"right\">\r\n         <SpaceBetween direction=\"horizontal\" size=\"xs\">\r\n         <Button variant=\"link\" onClick={() => setModalVisible(false)}>\r\n           Cancel\r\n         </Button>\r\n           <Button onClick={confirmToggleChange} variant=\"primary\">\r\n             Confirm\r\n           </Button>\r\n         </SpaceBetween>\r\n       </Box>\r\n     }\r\n   >\r\n     Are you sure you want to {toggleItem?.active ? \"deactivate\" : \"activate\"} this product?\r\n   </Modal>\r\n    </ContentLayout>\r\n  );\r\n};\r\n\r\nexport default Products;","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport { BasePropsWithAnalyticsMetadata, getAnalyticsMetadataProps } from '../internal/base-component';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { GeneratedAnalyticsMetadataFormFieldComponent } from './analytics-metadata/interfaces';\nimport { FormFieldProps } from './interfaces';\nimport InternalFormField from './internal';\n\nimport analyticsSelectors from './analytics-metadata/styles.css.js';\n\nexport { FormFieldProps };\n\nexport default function FormField({ stretch = false, ...props }: FormFieldProps) {\n  const analyticsMetadata = getAnalyticsMetadataProps(props as BasePropsWithAnalyticsMetadata);\n  const baseComponentProps = useBaseComponent('FormField', { props: { stretch } }, analyticsMetadata);\n\n  return (\n    <InternalFormField\n      stretch={stretch}\n      {...props}\n      __hideLabel={false}\n      __analyticsMetadata={analyticsMetadata}\n      {...baseComponentProps}\n      {...getAnalyticsMetadataAttribute({\n        component: {\n          name: 'awsui.FormField',\n          label: `.${analyticsSelectors.label}`,\n        } as GeneratedAnalyticsMetadataFormFieldComponent,\n      })}\n    />\n  );\n}\n\napplyDisplayName(FormField, 'FormField');\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { ButtonContext } from './button-context';\nimport { CollectionLabelContext } from './collection-label-context';\nimport { FormFieldContext } from './form-field-context';\nimport { InfoLinkLabelContext } from './info-link-label-context';\nimport { defaultValue as linkDefaultValue, LinkDefaultVariantContext } from './link-default-variant-context';\nimport {\n  defaultValue as singleTabStopDefaultValue,\n  SingleTabStopNavigationContext,\n} from './single-tab-stop-navigation-context';\n\n/*\n Use this context-resetter when creating a new modal-type context where typically the contents\n of the modal should not be affected by the surrounding components/DOM.\n */\nconst ResetContextsForModal = ({ children }: { children: React.ReactNode }) => (\n  <ButtonContext.Provider value={{ onClick: () => {} }}>\n    <CollectionLabelContext.Provider value={{ assignId: () => {} }}>\n      <FormFieldContext.Provider value={{}}>\n        <InfoLinkLabelContext.Provider value=\"\">\n          <LinkDefaultVariantContext.Provider value={linkDefaultValue}>\n            <SingleTabStopNavigationContext.Provider value={singleTabStopDefaultValue}>\n              {children}\n            </SingleTabStopNavigationContext.Provider>\n          </LinkDefaultVariantContext.Provider>\n        </InfoLinkLabelContext.Provider>\n      </FormFieldContext.Provider>\n    </CollectionLabelContext.Provider>\n  </ButtonContext.Provider>\n);\n\nexport default ResetContextsForModal;\n","\n    import './styles.scoped.css';\n    export default {\n  \"dialog\": \"awsui_dialog_1d2i7_xpcku_109\",\n  \"modal-slide-up\": \"awsui_modal-slide-up_1d2i7_xpcku_1\",\n  \"awsui-motion-fade-in-0\": \"awsui_awsui-motion-fade-in-0_1d2i7_xpcku_1\",\n  \"refresh\": \"awsui_refresh_1d2i7_xpcku_132\",\n  \"awsui-motion-scale-popup\": \"awsui_awsui-motion-scale-popup_1d2i7_xpcku_1\",\n  \"root\": \"awsui_root_1d2i7_xpcku_165\",\n  \"awsui-motion-fade-in\": \"awsui_awsui-motion-fade-in_1d2i7_xpcku_1\",\n  \"hidden\": \"awsui_hidden_1d2i7_xpcku_249\",\n  \"focus-lock\": \"awsui_focus-lock_1d2i7_xpcku_253\",\n  \"small\": \"awsui_small_1d2i7_xpcku_273\",\n  \"medium\": \"awsui_medium_1d2i7_xpcku_276\",\n  \"large\": \"awsui_large_1d2i7_xpcku_279\",\n  \"max\": \"awsui_max_1d2i7_xpcku_282\",\n  \"breakpoint-xs\": \"awsui_breakpoint-xs_1d2i7_xpcku_282\",\n  \"container\": \"awsui_container_1d2i7_xpcku_288\",\n  \"content\": \"awsui_content_1d2i7_xpcku_332\",\n  \"no-paddings\": \"awsui_no-paddings_1d2i7_xpcku_337\",\n  \"header\": \"awsui_header_1d2i7_xpcku_342\",\n  \"header--text\": \"awsui_header--text_1d2i7_xpcku_354\",\n  \"footer\": \"awsui_footer_1d2i7_xpcku_358\",\n  \"footer--stuck\": \"awsui_footer--stuck_1d2i7_xpcku_367\",\n  \"dismiss-control\": \"awsui_dismiss-control_1d2i7_xpcku_379\",\n  \"modal-open\": \"awsui_modal-open_1d2i7_xpcku_383\"\n};\n  ","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { browserScrollbarSize } from '../internal/utils/browser-scrollbar-size';\n\nimport styles from './styles.css.js';\n\n// Read this before making changes to the code below.\n//\n// When a modal is used from an iframe the body scrolling utils take no effect because they need to be applied to another document.\n// The customers replicate this behavior by running the same code on the correct document instance, see AWSUI-41915.\n// Hence, we should avoid making changes to the component that break the body scrolling logic in its current form.\n\nlet initialBodyPaddingRightStyle: string | undefined = undefined;\n\nexport function disableBodyScrolling() {\n  setBodyScrollbarPadding();\n  document.body.classList.add(styles['modal-open']);\n}\n\nexport function enableBodyScrolling() {\n  document.body.classList.remove(styles['modal-open']);\n  restoreBodyScrollbarPadding();\n}\n\nfunction setBodyScrollbarPadding() {\n  if (bodyHasScrollbar()) {\n    initialBodyPaddingRightStyle = document.body.style.paddingRight;\n    const initialBodyPaddingRight = computedBodyPaddingRightPixels();\n    const scrollbarWidth = browserScrollbarSize().width;\n    const newBodyPaddingRight = initialBodyPaddingRight + scrollbarWidth;\n    document.body.style.paddingRight = newBodyPaddingRight + 'px';\n  }\n}\n\nfunction computedBodyPaddingRightPixels() {\n  return parseInt(window.getComputedStyle(document.body).paddingRight, 10);\n}\n\nfunction restoreBodyScrollbarPadding() {\n  if (initialBodyPaddingRightStyle) {\n    document.body.style.setProperty('padding-right', initialBodyPaddingRightStyle);\n  } else {\n    document.body.style.removeProperty('padding-right');\n  }\n  initialBodyPaddingRightStyle = undefined;\n}\n\nfunction bodyHasScrollbar() {\n  // Unfortunately this difference doesn't appear to match the scrollbar width during testing,\n  // otherwise we could remove browserScrollbarSize().  Bootstrap also doesn't use this difference\n  // directly.\n  return document.body.clientWidth < window.innerWidth;\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { useContainerQuery } from '@cloudscape-design/component-toolkit';\n\nimport { InternalButton } from '../button/internal';\nimport InternalHeader from '../header/internal';\nimport { useInternalI18n } from '../i18n/context';\nimport { FunnelNameSelectorContext } from '../internal/analytics/context/analytics-context';\nimport { useFunnelSubStep } from '../internal/analytics/hooks/use-funnel';\nimport { getBaseProps } from '../internal/base-component';\nimport FocusLock from '../internal/components/focus-lock';\nimport Portal from '../internal/components/portal';\nimport { ModalContext } from '../internal/context/modal-context';\nimport ResetContextsForModal from '../internal/context/reset-contexts-for-modal';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { useContainerBreakpoints } from '../internal/hooks/container-queries';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { useIntersectionObserver } from '../internal/hooks/use-intersection-observer';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { KeyCode } from '../internal/keycode';\nimport { SomeRequired } from '../internal/types';\nimport { disableBodyScrolling, enableBodyScrolling } from './body-scroll';\nimport { ModalProps } from './interfaces';\n\nimport styles from './styles.css.js';\n\ntype InternalModalProps = SomeRequired<ModalProps, 'size'> & InternalBaseComponentProps;\n\nexport default function InternalModal({ modalRoot, getModalRoot, removeModalRoot, ...rest }: InternalModalProps) {\n  return (\n    <Portal container={modalRoot} getContainer={getModalRoot} removeContainer={removeModalRoot}>\n      <PortaledModal {...rest} />\n    </Portal>\n  );\n}\n\ntype PortaledModalProps = Omit<InternalModalProps, 'modalRoot' | 'getModalRoot' | 'removeModalRoot'>;\n\n// Separate component to prevent the Portal from getting in the way of refs, as it needs extra cycles to render the inner components.\n// useContainerQuery needs its targeted element to exist on the first render in order to work properly.\nfunction PortaledModal({\n  size,\n  visible,\n  header,\n  children,\n  footer,\n  disableContentPaddings,\n  onDismiss,\n  __internalRootRef = null,\n  ...rest\n}: PortaledModalProps) {\n  const instanceUniqueId = useUniqueId();\n  const headerId = `${rest.id || instanceUniqueId}-header`;\n  const lastMouseDownElementRef = useRef<HTMLElement | null>(null);\n  const [breakpoint, breakpointsRef] = useContainerBreakpoints(['xs']);\n\n  const i18n = useInternalI18n('modal');\n  const closeAriaLabel = i18n('closeAriaLabel', rest.closeAriaLabel);\n\n  const refObject = useRef<HTMLDivElement>(null);\n  const mergedRef = useMergeRefs(breakpointsRef, refObject, __internalRootRef);\n\n  const isRefresh = useVisualRefresh();\n\n  const baseProps = getBaseProps(rest);\n\n  // enable body scroll and restore focus if unmounting while visible\n  useEffect(() => {\n    return () => {\n      enableBodyScrolling();\n    };\n  }, []);\n\n  // enable / disable body scroll\n  useEffect(() => {\n    if (visible) {\n      disableBodyScrolling();\n    } else {\n      enableBodyScrolling();\n    }\n  }, [visible]);\n\n  // Because we hide the element with styles (and not actually detach it from DOM), we need to scroll to top\n  useEffect(() => {\n    if (visible && refObject.current) {\n      refObject.current.scrollTop = 0;\n    }\n  }, [visible]);\n\n  const dismiss = (reason: string) => fireNonCancelableEvent(onDismiss, { reason });\n\n  const onOverlayMouseDown = (event: React.MouseEvent) => {\n    lastMouseDownElementRef.current = event.target as HTMLElement;\n  };\n  const onOverlayClick = (event: React.MouseEvent) => {\n    const overlay = refObject.current;\n    const lastClicked = lastMouseDownElementRef.current;\n\n    if (event.target === overlay && lastClicked === overlay) {\n      dismiss('overlay');\n    }\n  };\n  const onCloseButtonClick = () => dismiss('closeButton');\n  const escKeyHandler = (event: React.KeyboardEvent) => {\n    if (event.keyCode === KeyCode.escape) {\n      dismiss('keyboard');\n    }\n  };\n\n  // We use an empty div element at the end of the content slot as a sentinel\n  // to detect when the user has scrolled to the bottom.\n  const { ref: stickySentinelRef, isIntersecting: footerStuck } = useIntersectionObserver();\n\n  // Add extra scroll padding to account for the height of the sticky footer,\n  // to prevent it from covering focused elements.\n  const [footerHeight, footerRef] = useContainerQuery(rect => rect.borderBoxHeight);\n  const { subStepRef } = useFunnelSubStep();\n\n  return (\n    <FunnelNameSelectorContext.Provider value={`.${styles['header--text']}`}>\n      <ResetContextsForModal>\n        <ModalContext.Provider value={{ isInModal: true }}>\n          <div\n            {...baseProps}\n            className={clsx(\n              styles.root,\n              { [styles.hidden]: !visible },\n              baseProps.className,\n              isRefresh && styles.refresh\n            )}\n            role=\"dialog\"\n            aria-modal={true}\n            aria-labelledby={headerId}\n            onMouseDown={onOverlayMouseDown}\n            onClick={onOverlayClick}\n            ref={mergedRef}\n            style={footerHeight ? { scrollPaddingBottom: footerHeight } : undefined}\n            data-awsui-referrer-id={subStepRef.current?.id}\n          >\n            <FocusLock disabled={!visible} autoFocus={true} restoreFocus={true} className={styles['focus-lock']}>\n              <div\n                className={clsx(\n                  styles.dialog,\n                  styles[size],\n                  styles[`breakpoint-${breakpoint}`],\n                  isRefresh && styles.refresh\n                )}\n                onKeyDown={escKeyHandler}\n              >\n                <div className={styles.container}>\n                  <div className={styles.header}>\n                    <InternalHeader\n                      variant=\"h2\"\n                      __disableActionsWrapping={true}\n                      actions={\n                        <InternalButton\n                          ariaLabel={closeAriaLabel}\n                          className={styles['dismiss-control']}\n                          variant=\"modal-dismiss\"\n                          iconName=\"close\"\n                          formAction=\"none\"\n                          onClick={onCloseButtonClick}\n                        />\n                      }\n                    >\n                      <span id={headerId} className={styles['header--text']}>\n                        {header}\n                      </span>\n                    </InternalHeader>\n                  </div>\n                  <div className={clsx(styles.content, { [styles['no-paddings']]: disableContentPaddings })}>\n                    {children}\n                    <div ref={stickySentinelRef} />\n                  </div>\n                  {footer && (\n                    <div ref={footerRef} className={clsx(styles.footer, footerStuck && styles['footer--stuck'])}>\n                      {footer}\n                    </div>\n                  )}\n                </div>\n              </div>\n            </FocusLock>\n          </div>\n        </ModalContext.Provider>\n      </ResetContextsForModal>\n    </FunnelNameSelectorContext.Provider>\n  );\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { RefCallback, useCallback, useRef, useState } from 'react';\n\n/**\n * A hook that uses an Intersection Observer on the target element ref\n * and detects if the element is intersecting with its parent.\n */\nexport function useIntersectionObserver<T extends HTMLElement>() {\n  const observerRef = useRef<IntersectionObserver | null>(null);\n  const [isIntersecting, setIsIntersecting] = useState(false);\n\n  const ref = useCallback<RefCallback<T>>(targetElement => {\n    if (typeof IntersectionObserver === 'undefined') {\n      // Do nothing in environments like JSDOM\n      return;\n    }\n\n    if (observerRef.current) {\n      // Dismiss previous observer because the target changed\n      observerRef.current.disconnect();\n    }\n\n    // Create a new observer with the target element\n    if (targetElement) {\n      observerRef.current = new IntersectionObserver(([entry]) => setIsIntersecting(entry.isIntersecting));\n      observerRef.current.observe(targetElement);\n    }\n  }, []);\n\n  return { ref, isIntersecting };\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { ModalProps } from './interfaces';\nimport InternalModal from './internal';\n\nexport { ModalProps };\n\nexport default function Modal({ size = 'medium', ...props }: ModalProps) {\n  const baseComponentProps = useBaseComponent('Modal', {\n    props: { size, disableContentPaddings: props.disableContentPaddings },\n  });\n  return <InternalModal size={size} {...props} {...baseComponentProps} />;\n}\n\napplyDisplayName(Modal, 'Modal');\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { SpinnerProps } from './interfaces';\nimport InternalSpinner from './internal';\n\nexport { SpinnerProps };\n\nexport default function Spinner({ size = 'normal', variant = 'normal', ...props }: SpinnerProps) {\n  const baseComponentProps = useBaseComponent('Spinner', {\n    props: { size, variant },\n  });\n  return <InternalSpinner size={size} variant={variant} {...props} {...baseComponentProps} />;\n}\n\napplyDisplayName(Spinner, 'Spinner');\n","\n    import './styles.scoped.css';\n    export default {\n  \"root\": \"awsui_root_4yi2u_1w171_97\",\n  \"outline\": \"awsui_outline_4yi2u_1w171_133\",\n  \"toggle-control\": \"awsui_toggle-control_4yi2u_1w171_155\",\n  \"toggle-control-checked\": \"awsui_toggle-control-checked_4yi2u_1w171_168\",\n  \"toggle-control-disabled\": \"awsui_toggle-control-disabled_4yi2u_1w171_171\",\n  \"toggle-control-readonly\": \"awsui_toggle-control-readonly_4yi2u_1w171_177\",\n  \"toggle-handle\": \"awsui_toggle-handle_4yi2u_1w171_181\",\n  \"toggle-handle-checked\": \"awsui_toggle-handle-checked_4yi2u_1w171_196\",\n  \"toggle-handle-disabled\": \"awsui_toggle-handle-disabled_4yi2u_1w171_203\",\n  \"toggle-handle-readonly\": \"awsui_toggle-handle-readonly_4yi2u_1w171_207\"\n};\n  ","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { getBaseProps } from '../internal/base-component';\nimport AbstractSwitch from '../internal/components/abstract-switch';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { ToggleProps } from './interfaces';\n\nimport styles from './styles.css.js';\n\ntype InternalToggleProps = ToggleProps & InternalBaseComponentProps;\n\nconst InternalToggle = React.forwardRef<ToggleProps.Ref, InternalToggleProps>(\n  (\n    {\n      controlId,\n      checked,\n      name,\n      disabled,\n      readOnly,\n      children,\n      description,\n      ariaLabel,\n      ariaControls,\n      onFocus,\n      onBlur,\n      onChange,\n      __internalRootRef = null,\n      ...rest\n    },\n    ref\n  ) => {\n    const { ariaDescribedby, ariaLabelledby } = useFormFieldContext(rest);\n    const baseProps = getBaseProps(rest);\n    const checkboxRef = useRef<HTMLInputElement>(null);\n    useForwardFocus(ref, checkboxRef);\n\n    return (\n      <AbstractSwitch\n        {...baseProps}\n        className={clsx(styles.root, baseProps.className)}\n        controlClassName={clsx(styles['toggle-control'], {\n          [styles['toggle-control-checked']]: checked,\n          [styles['toggle-control-disabled']]: disabled,\n          [styles['toggle-control-readonly']]: readOnly,\n        })}\n        outlineClassName={styles.outline}\n        controlId={controlId}\n        disabled={disabled}\n        readOnly={readOnly}\n        label={children}\n        description={description}\n        descriptionBottomPadding={true}\n        ariaLabel={ariaLabel}\n        ariaLabelledby={ariaLabelledby}\n        ariaDescribedby={ariaDescribedby}\n        ariaControls={ariaControls}\n        nativeControl={nativeControlProps => (\n          <input\n            {...nativeControlProps}\n            ref={checkboxRef}\n            type=\"checkbox\"\n            checked={checked}\n            name={name}\n            aria-disabled={readOnly && !disabled ? 'true' : undefined}\n            onFocus={() => fireNonCancelableEvent(onFocus)}\n            onBlur={() => fireNonCancelableEvent(onBlur)}\n            // empty handler to suppress React controllability warning\n            onChange={() => {}}\n          />\n        )}\n        onClick={() => {\n          checkboxRef.current?.focus();\n          fireNonCancelableEvent(onChange, { checked: !checked });\n        }}\n        styledControl={\n          /*Using span, not div for HTML validity*/\n          <span\n            className={clsx(styles['toggle-handle'], {\n              [styles['toggle-handle-checked']]: checked,\n              [styles['toggle-handle-disabled']]: disabled,\n              [styles['toggle-handle-readonly']]: readOnly,\n            })}\n          />\n        }\n        __internalRootRef={__internalRootRef}\n      />\n    );\n  }\n);\n\nexport default InternalToggle;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { ToggleProps } from './interfaces';\nimport InternalToggle from './internal';\n\nexport { ToggleProps };\n\nconst Toggle = React.forwardRef<ToggleProps.Ref, ToggleProps>((props, ref) => {\n  const baseComponentProps = useBaseComponent('Toggle');\n  return <InternalToggle {...props} {...baseComponentProps} ref={ref} />;\n});\n\napplyDisplayName(Toggle, 'Toggle');\nexport default Toggle;\n"],"names":["_ref","_data$items","products","dispatch","useDispatch","ordersData","useSelector","state","orders","data","useEffect","fetchOrders","active","setActive","useState","inactive","setInactive","activeProducts","inactiveProducts","map","e","push","_jsxs","ColumnLayout","columns","variant","minColumnWidth","children","_jsx","Box","style","fontSize","fontWeight","lineHeight","color","length","items","Products","nextKey","hasMore","status","error","selectedItems","setSelectedItems","filteringText","setFilteringText","selectedCategory","setSelectedCategory","selectedStatus","setSelectedStatus","editedProducts","setEditedProducts","isModalVisible","setModalVisible","isModalVisible1","setModalVisible1","isBulkModifySuccess","setBulkModifySuccess","isBulkModifySuccessflash","setBulkModifySuccessflash","validationErrors","setValidationErrors","isToggle","setIsToggle","toggleItem","setToggleItem","isFetching","setIsFetching","isFieldChanged","setIsFieldChanged","observer","useRef","resetProducts","fetchProducts","search","category","handleInputChange","id","field","value","prev","validateField","_editedProducts$id","osp","cp","compareAt","errors","onlineStorePrice","parseFloat","prevErrors","selectedItem","setSelectedItem","selectOptions","label","selectOptionsStatus","validateInputs","valid","forEach","item","editedProduct","itemErrors","Object","keys","items1","setItems","type","dismissible","dismissLabel","onDismiss","content","_Fragment","flashbarItems","setFlashbarItems","previousNextKey","lastProductRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","console","log","finally","observe","ContentLayout","notifications","Flashbar","breadcrumbs","BreadcrumbGroup","text","href","ariaLabel","headerVariant","header","Header","actions","SpaceBetween","alignItems","direction","size","Container","Numbers","Table","Grid","disableGutters","gridDefinition","colspan","default","xxs","display","gap","TextFilter","filteringPlaceholder","onChange","detail","Select","options","selectedOption","find","option","placeholder","_ref2","justifyContent","Button","onClick","navigateToStore","window","open","concat","disabled","handleBulkModifyPrice","columnDefinitions","cell","Link","to","itemCode","src","images","alt","name","height","width","borderRadius","marginRight","textAlign","stockQuantity","units","_validationErrors$ite","_editedProducts$item$3","_editedProducts$item$4","FormField","errorText","Input","some","_validationErrors$ite2","_editedProducts$item$5","_editedProducts$item$6","Toggle","handleToggleChange","checked","onSelectionChange","_ref3","selectionType","ref","Spinner","Modal","visible","footer","async","pricingDataArray","_editedProducts$item$","_editedProducts$item$2","response","putPricingById","meta","requestStatus","payload","setTimeout","err","closeAriaLabel","float","confirmToggleChange","PutToggle","then","toggleStatus","_a","stretch","props","__rest","analyticsMetadata","getAnalyticsMetadataProps","baseComponentProps","useBaseComponent","React","InternalFormField","assign","__hideLabel","__analyticsMetadata","getAnalyticsMetadataAttribute","component","analyticsSelectors","applyDisplayName","ButtonContext","Provider","CollectionLabelContext","assignId","FormFieldContext","InfoLinkLabelContext","LinkDefaultVariantContext","linkDefaultValue","SingleTabStopNavigationContext","singleTabStopDefaultValue","initialBodyPaddingRightStyle","disableBodyScrolling","document","body","clientWidth","innerWidth","paddingRight","newBodyPaddingRight","parseInt","getComputedStyle","browserScrollbarSize","setBodyScrollbarPadding","classList","add","styles","enableBodyScrolling","remove","setProperty","removeProperty","undefined","restoreBodyScrollbarPadding","InternalModal","modalRoot","getModalRoot","removeModalRoot","rest","Portal","container","getContainer","removeContainer","PortaledModal","disableContentPaddings","__internalRootRef","instanceUniqueId","useUniqueId","headerId","lastMouseDownElementRef","breakpoint","breakpointsRef","useContainerBreakpoints","useInternalI18n","i18n","refObject","mergedRef","useMergeRefs","isRefresh","useVisualRefresh","baseProps","getBaseProps","scrollTop","dismiss","reason","fireNonCancelableEvent","stickySentinelRef","footerStuck","observerRef","setIsIntersecting","targetElement","entry","useIntersectionObserver","footerHeight","footerRef","useContainerQuery","rect","borderBoxHeight","subStepRef","useFunnelSubStep","FunnelNameSelectorContext","ResetContextsForModal","ModalContext","isInModal","className","clsx","root","hidden","refresh","role","onMouseDown","event","target","overlay","lastClicked","scrollPaddingBottom","_b","FocusLock","autoFocus","restoreFocus","dialog","onKeyDown","keyCode","KeyCode","escape","InternalHeader","__disableActionsWrapping","InternalButton","iconName","formAction","onCloseButtonClick","InternalSpinner","controlId","readOnly","description","ariaControls","onFocus","onBlur","ariaDescribedby","ariaLabelledby","useFormFieldContext","checkboxRef","useForwardFocus","AbstractSwitch","controlClassName","outlineClassName","descriptionBottomPadding","nativeControl","nativeControlProps","focus","styledControl","InternalToggle"],"sourceRoot":""}