{"version":3,"file":"static/js/687.974b91ac.chunk.js","mappings":"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","sources":["Views/Postlogin/Products/Numbers.js","Views/Postlogin/Products/index.js"],"sourcesContent":["import { Box } from '@cloudscape-design/components'\r\nimport ColumnLayout from '@cloudscape-design/components/column-layout'\r\nimport React, { act, useEffect, useState } from 'react'\r\nimport { useSelector,useDispatch } from 'react-redux'\r\n\r\n\r\nimport { fetchOrders } from 'Redux-Store/Orders/OrdersThunk'\r\n\r\n\r\nconst Numbers = ({products}) => {\r\n  const dispatch = useDispatch();\r\n  const ordersData = useSelector((state) => state.orders.ordersData);\r\n  const { data = [] } = ordersData;\r\n  useEffect(() => {\r\n    dispatch(fetchOrders());\r\n  }, [dispatch]);\r\n  //  console.log(data,\"orderssss\");\r\n  const [active, setActive] = useState([]);\r\n  const [inactive, setInactive] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    if (products.data) {\r\n      const activeProducts = [];\r\n      const inactiveProducts = [];\r\n  \r\n      products.data.map(e => {\r\n        if (e.active === true) {\r\n          activeProducts.push(e);\r\n        } else if (e.active === false) {\r\n          inactiveProducts.push(e);\r\n        }\r\n        return null; // Since map expects a return value, we return null here\r\n      });\r\n  \r\n      setActive(activeProducts);\r\n      setInactive(inactiveProducts);\r\n  \r\n\r\n    }\r\n  }, [products]);\r\n  \r\n\r\n  \r\n\r\n\r\n\r\n\r\n  \r\n  return (\r\n\r\n    <ColumnLayout columns={5} variant=\"default\" minColumnWidth={170}>\r\n    <div>\r\n      <Box variant=\"awsui-key-label\">\r\n        <p style={{ fontSize: 12 }}>Total Active Products</p>\r\n      </Box>\r\n      <span style={{ fontSize: 36, fontWeight: '900', lineHeight: 1.3, color: \"#0972D3\" }}>{active?.length}</span>\r\n    </div>\r\n    <div>\r\n      <Box variant=\"awsui-key-label\">\r\n        <p style={{ fontSize: 12 }}>Total Stock</p>\r\n      </Box>\r\n      <span style={{ fontSize: 36, fontWeight: '900', lineHeight: 1.3, color: \"#0972D3\" }}>₹436K</span>\r\n    </div>\r\n    <div>\r\n      <Box variant=\"awsui-key-label\">\r\n        <p style={{ fontSize: 12 }}>Total Orders</p>\r\n      </Box>\r\n      <span style={{ fontSize: 36, fontWeight: '900', lineHeight: 1.3, color: \"#0972D3\" }}>{data.items?.length}</span>\r\n    </div>\r\n    <div>\r\n      <Box variant=\"awsui-key-label\">\r\n        <p style={{ fontSize: 12 }}>Net Profit</p>\r\n      </Box>\r\n      <span style={{ fontSize: 36, fontWeight: '900', lineHeight: 1.3, color: \"#0972D3\" }}>123K</span>\r\n    </div>\r\n    <div>\r\n      <Box variant=\"awsui-key-label\">\r\n        <p style={{ fontSize: 12 }}>Inactive Products</p>\r\n      </Box>\r\n      <span style={{ fontSize: 36, fontWeight: '900', lineHeight: 1.3, color: \"#0972D3\" }}>{inactive?.length}</span>\r\n    </div>\r\n  </ColumnLayout>\r\n  )\r\n}\r\n\r\nexport default Numbers","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Button,\n  Container,\n  Header,\n  SpaceBetween,\n  ContentLayout,\n  Table,\n  BreadcrumbGroup,\n  Toggle,\n  TextFilter,\n  Select,\n  Pagination,\n  Input,\n  Modal,\n  Flashbar,\n  FormField,\n} from \"@cloudscape-design/components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n  fetchProducts,\n  PutToggle,\n  putPricingById,\n} from \"Redux-Store/Products/ProductThunk\";\nimport \"../../../assets/styles/CloudscapeGlobalstyle.css\";\nimport Numbers from \"./Numbers\";\n\nconst Products = () => {\n  const dispatch = useDispatch();\n  const products = useSelector((state) => state.products.products);\n  const { data = [] } = products;\n\n  const [activeButton, setActiveButton] = useState(\"All\");\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const productsPerPage = 20;\n  const [filteringText, setFilteringText] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState(\"All\");\n\n  const [editedProducts, setEditedProducts] = useState({});\n  const [isModalVisible, setModalVisible] = useState(false);\n  const [isBulkModifySuccess, setBulkModifySuccess] = useState(false);\n  const [validationErrors, setValidationErrors] = useState({});\n  const [priceError, setPriceError] = useState(\"\");\n  const [compareAtError, setCompareAtError] = useState(\"\");\n  useEffect(() => {\n    dispatch(fetchProducts());\n    setCurrentPage(1);\n    // setCurrentPage(1);\n  }, [dispatch]);\n\n  const handleInputChange = (id, field, value) => {\n    setEditedProducts((prev) => ({\n      ...prev,\n      [id]: {\n        ...prev[id],\n        [field]: value,\n      },\n    }));\n  \n    // Validate the current field and update errors\n    const osp = value; // Updated price value\n    const cp = field === \"compareAt\" ? value : editedProducts[id]?.compareAt ?? \"\";\n  \n    let errors = {};\n  \n    if (field === \"onlineStorePrice\" && !osp) {\n      errors.onlineStorePrice = \"Required!\";\n    }\n  \n    if (field === \"compareAt\") {\n      if (!cp) {\n        errors.compareAt = \"Required!\";\n      } else if (parseFloat(cp) < parseFloat(osp)) {\n        errors.compareAt = \"CP must be greater than OSP\";\n      }\n    }\n  \n    setValidationErrors((prevErrors) => ({\n      ...prevErrors,\n      [id]: errors,\n    }));\n  };\n  \n\n\n  const getStockAlertStyle = (stockQuantity) => {\n    if (stockQuantity === 0) {\n      return { color: \"gray\", textAlign: \"center\" };\n    } else if (stockQuantity > 5) {\n      return { color: \"#0972D3\", textAlign: \"center\" };\n    } else {\n      return { color: \"red\", textAlign: \"center\" };\n    }\n  };\n\n  const handleToggleChange = (item) => {\n    const newStatus = !item.active;\n\n    dispatch(PutToggle({ id: item.id, active: newStatus })).then((response) => {\n      if (\n        response.meta.requestStatus === \"fulfilled\" &&\n        response.payload.status === 200\n      ) {\n        dispatch(fetchProducts());\n      } else {\n        dispatch(fetchProducts());\n      }\n    });\n  };\n\n  const validateInputs = () => {\n    let valid = true;\n    const errors = {};\n  \n    selectedItems.forEach((item) => {\n      const editedProduct = editedProducts[item.id] || {};\n      const osp = editedProduct.onlineStorePrice !== undefined ? editedProduct.onlineStorePrice : item.onlineStorePrice;\n      const cp = editedProduct.compareAt !== undefined ? editedProduct.compareAt : item.compareAt;\n  \n      let itemErrors = {};\n  \n      if (editedProduct.onlineStorePrice !== undefined && osp === \"\") {\n        valid = false;\n        itemErrors.onlineStorePrice = \"Required!\";\n      }\n  \n      if (editedProduct.compareAt !== undefined && cp === \"\") {\n        valid = false;\n        itemErrors.compareAt = \"Required!\";\n      } else if (parseFloat(cp) < parseFloat(osp)) {\n        valid = false;\n        itemErrors.compareAt = \"CP must be greater than OSP\";\n      }\n  \n      if (Object.keys(itemErrors).length > 0) {\n        errors[item.id] = itemErrors;\n      }\n    });\n  \n    setValidationErrors(errors);\n    return valid;\n  };\n  \n\n\n  const filteredProducts = data\n    ? data.filter((item) => {\n        const matchesStatus =\n          activeButton === \"All\" || item.active === (activeButton === \"Active\");\n        const matchesSearch =\n          item.itemCode.toLowerCase().includes(filteringText.toLowerCase()) ||\n          item.name.toLowerCase().includes(filteringText.toLowerCase()) ||\n          (item.active ? \"active\" : \"inactive\").includes(\n            filteringText.toLowerCase()\n          );\n        const matchesCategory =\n          selectedCategory === \"All\" || item.category === selectedCategory;\n\n        return matchesStatus && matchesSearch && matchesCategory;\n      })\n    : [];\n\n  const indexOfLastProduct = currentPage * productsPerPage;\n  const indexOfFirstProduct = indexOfLastProduct - productsPerPage;\n  const currentProducts = filteredProducts.slice(\n    indexOfFirstProduct,\n    indexOfLastProduct\n  );\n\n  const handlePageChange = (pageIndex) => {\n    setCurrentPage(pageIndex + 0); // Set `currentPage` to be 1-based\n  };\n\n  const handleSelectChange = ({ detail }) => {\n    setSelectedCategory(detail.selectedOption.value);\n    setCurrentPage(1);\n  };\n\n  const handleSearchChange = (e) => {\n    setFilteringText(e.detail.filteringText);\n    setCurrentPage(1);\n  };\n\n  const selectOptions = [\n    { label: \"All\", value: \"All\" },\n    { label: \"Leafy\", value: \"Leafy\" },\n    { label: \"Fruit\", value: \"Fruit\" },\n    { label: \"Vegetable\", value: \"Vegetable\" },\n    { label: \"Bengali Vegetable\", value: \"Bengali Vegetable\" },\n  ];\n\n  const handleSelectionChange = ({ detail }) => {\n    setSelectedItems(detail.selectedItems);\n  };\n\n  const handleBulkModifyPrice = () => {\n    if (validateInputs()) {\n      setModalVisible(true);\n    }\n  };\n\n  const confirmBulkModifyPrice = () => {\n    let success = true;\n\n    selectedItems.forEach((item) => {\n      const pricingData = {\n        onlineStorePrice:\n          editedProducts[item.id]?.onlineStorePrice || item.onlineStorePrice,\n        compareAt: editedProducts[item.id]?.compareAt || item.compareAt,\n      };\n\n      dispatch(putPricingById({ id: item.id, pricingData })).then(\n        (response) => {\n          if (\n            response.meta.requestStatus !== \"fulfilled\" ||\n            response.payload.status !== 200\n          ) {\n            success = false;\n          }\n        }\n      );\n    });\n\n    if (success) {\n      setBulkModifySuccess(true);\n      setSelectedItems([]); // Clear selected checkboxes\n    }\n\n    setModalVisible(false);\n  };\n\n  const navigatetogoogle = () => {\n    window.open(\"https://promodeagro.com/\", \"_blank\");\n  };\n  const [items, setItems] = React.useState([\n    {\n      type: \"info\",\n      dismissible: true,\n      dismissLabel: \"Dismiss message\",\n      onDismiss: () => setItems([]),\n      content: (\n        <>\n          <b>Price updated successfully! </b>\n          <p>The new price is now live on the online store</p>\n        </>\n      ),\n      id: \"message_1\",\n    },\n  ]);\n\n  return (\n    <ContentLayout\n      notifications={\n        <>{isBulkModifySuccess ? <Flashbar items={items} /> : <></>}</>\n      }\n      breadcrumbs={\n        <BreadcrumbGroup\n          items={[\n            { text: \"Dashboard\", href: \"/app/dashboard\" },\n            { text: \"Products\", href: \"/app/dashboard/products\" },\n          ]}\n          ariaLabel=\"Breadcrumbs\"\n        />\n      }\n      headerVariant=\"high-contrast\"\n      header={\n        <Header\n          actions={\n            <SpaceBetween alignItems=\"center\" direction=\"horizontal\" size=\"xs\">\n              <Button variant=\"normal\">Export</Button>\n            </SpaceBetween>\n          }\n          variant=\"h1\"\n        >\n          Products\n        </Header>\n      }\n    >\n      <SpaceBetween direction=\"vertical\" size=\"s\">\n        <Container>\n          <Numbers products={products} />\n        </Container>\n\n        <div>\n          <Table\n            header={\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <div style={{ display: \"flex\", gap: \"1rem\" }}>\n                  <div style={{ width: \"390px\" }}>\n                    <TextFilter\n                      filteringPlaceholder=\"Search\"\n                      filteringText={filteringText}\n                      onChange={handleSearchChange}\n                    />\n                  </div>\n                  <div style={{ width: \"140px\" }}>\n                    <Select\n                      options={selectOptions}\n                      selectedOption={selectOptions.find(\n                        (option) => option.value === selectedCategory\n                      )}\n                      onChange={handleSelectChange}\n                      placeholder=\"Select Category\"\n                    />\n                  </div>\n                </div>\n                <div style={{ display: \"flex\", gap: \"1rem\" }}>\n                  {isBulkModifySuccess ? (\n                    <Button variant=\"normal\" onClick={navigatetogoogle}>\n                      View Product Page\n                    </Button>\n                  ) : (\n                    <Button\n                      disabled={selectedItems.length === 0}\n                      variant=\"normal\"\n                      onClick={handleBulkModifyPrice}\n                    >\n                      Bulk Modify Price\n                    </Button>\n                  )}\n                  <Pagination\n                    currentPageIndex={currentPage} // Set this to reflect the `currentPage` state\n                    onChange={({ detail }) =>\n                      handlePageChange(detail.currentPageIndex)\n                    }\n                    pagesCount={Math.ceil(\n                      filteredProducts.length / productsPerPage\n                    )}\n                  />\n                </div>\n              </div>\n            }\n            variant=\"borderless\"\n            columnDefinitions={[\n              {\n                id: \"code\",\n                header: \"Item Code\",\n                cell: (item) => (\n                  <Link to={`/app/products/${item.id}`}>{item.itemCode}</Link>\n                ),\n              },\n              {\n                id: \"name\",\n                header: \"Name\",\n                cell: (item) => (\n                  <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                    <img\n                      src={item?.images[0]}\n                      alt={item.name}\n                      height={35}\n                      width={35}\n                      style={{ borderRadius: \"8px\", marginRight: \"10px\" }}\n                    />\n                    <p style={{ width: \"90px\" }}>{item.name}</p>\n                  </div>\n                ),\n              },\n              {\n                id: \"category\",\n                header: \"Category\",\n                cell: (item) => <Box textAlign=\"center\">{item?.category}</Box>,\n              },\n\n              {\n                id: \"stock\",\n                header: \"On Hand Quantity\",\n                cell: (item) => (\n                  <Box textAlign=\"center\">{item?.stockQuantity}/{item?.units}</Box>\n                ),\n              },\n              {\n                id: \"alert\",\n                header: \"Stock Alert\",\n                cell: (item) => (\n                  <div style={getStockAlertStyle(item?.stockQuantity)}>\n                    {item?.stockQuantity === 0\n                      ? \"Not Available\"\n                      : item?.stockQuantity > 5\n                      ? \"Available\"\n                      : \"Low Stock\"}\n                  </div>\n                ),\n              },\n\n              {\n                id: \"onlineStorePrice\",\n                header: \"Online Price\",\n                cell: (item) => (\n                  <div style={{ width: \"80px\" }}>\n                  <FormField\n  errorText={\n    validationErrors[item.id]?.onlineStorePrice\n  }\n>\n  <Input\n    disabled={!selectedItems.some((selectedItem) => selectedItem.id === item.id)}\n    placeholder=\"Enter Price\"\n    type=\"number\"\n    value={editedProducts[item.id]?.onlineStorePrice ?? item.onlineStorePrice}\n    onChange={(e) => handleInputChange(item.id, \"onlineStorePrice\", e.detail.value)}\n    ariaLabel=\"online store price\"\n  />\n</FormField>\n                  </div>\n                ),\n              },\n              {\n                id: \"compareAt\",\n                header: \"Compare Price\",\n                cell: (item) => (\n                  <div style={{ width: \"80px\" }}>\n<FormField\n  errorText={\n    validationErrors[item.id]?.compareAt\n  }\n>\n  <Input\n    placeholder=\"Enter Price\"\n    type=\"number\"\n    value={editedProducts[item.id]?.compareAt ?? item.compareAt}\n    onChange={(e) => handleInputChange(item.id, \"compareAt\", e.detail.value)}\n    ariaLabel=\"compare at price\"\n    disabled={!selectedItems.some((selectedItem) => selectedItem.id === item.id)}\n  />\n</FormField>\n\n\n\n\n\n\n\n\n\n\n                \n                 \n                  </div>\n                ),\n              },\n              {\n                id: \"status\",\n                header: \"Status\",\n                cell: (item) => (\n                  <div style={{ width: \"90px\" }}>\n                    <Toggle\n                      onChange={() => handleToggleChange(item)}\n                      checked={item.active}\n                    >\n                      <p>{item.active ? \"Active\" : \"Inactive\"}</p>\n                    </Toggle>\n                  </div>\n                ),\n              },\n            ]}\n            selectedItems={selectedItems}\n            onSelectionChange={handleSelectionChange}\n            items={currentProducts}\n            selectionType=\"multi\"\n          />\n        </div>\n      </SpaceBetween>\n\n      <Modal\n        visible={isModalVisible}\n        onDismiss={() => setModalVisible(false)}\n        header=\"Confirm Bulk Modify\"\n        footer={\n          <SpaceBetween direction=\"horizontal\" size=\"xs\">\n            <Button variant=\"link\" onClick={() => setModalVisible(false)}>\n              Cancel\n            </Button>\n            <Button variant=\"primary\" onClick={confirmBulkModifyPrice}>\n              Confirm\n            </Button>\n          </SpaceBetween>\n        }\n      >\n        Are you sure you want to bulk modify the prices for the selected items?\n      </Modal>\n    </ContentLayout>\n  );\n};\n\nexport default Products;\n\n"],"names":["_ref","_data$items","products","dispatch","useDispatch","ordersData","useSelector","state","orders","data","useEffect","fetchOrders","active","setActive","useState","inactive","setInactive","activeProducts","inactiveProducts","map","e","push","_jsxs","ColumnLayout","columns","variant","minColumnWidth","children","_jsx","Box","style","fontSize","fontWeight","lineHeight","color","length","items","Products","activeButton","setActiveButton","selectedItems","setSelectedItems","currentPage","setCurrentPage","filteringText","setFilteringText","selectedCategory","setSelectedCategory","editedProducts","setEditedProducts","isModalVisible","setModalVisible","isBulkModifySuccess","setBulkModifySuccess","validationErrors","setValidationErrors","priceError","setPriceError","compareAtError","setCompareAtError","fetchProducts","handleInputChange","id","field","value","_editedProducts$id$co","_editedProducts$id","prev","osp","cp","compareAt","errors","onlineStorePrice","parseFloat","prevErrors","filteredProducts","filter","item","matchesStatus","matchesSearch","itemCode","toLowerCase","includes","name","matchesCategory","category","indexOfLastProduct","indexOfFirstProduct","currentProducts","slice","selectOptions","label","setItems","React","type","dismissible","dismissLabel","onDismiss","content","_Fragment","ContentLayout","notifications","Flashbar","breadcrumbs","BreadcrumbGroup","text","href","ariaLabel","headerVariant","header","Header","actions","SpaceBetween","alignItems","direction","size","Button","Container","Numbers","Table","display","justifyContent","gap","width","TextFilter","filteringPlaceholder","onChange","detail","Select","options","selectedOption","find","option","placeholder","onClick","navigatetogoogle","window","open","disabled","handleBulkModifyPrice","validateInputs","valid","forEach","editedProduct","undefined","itemErrors","Object","keys","Pagination","currentPageIndex","_ref3","pageIndex","pagesCount","Math","ceil","columnDefinitions","cell","Link","to","concat","src","images","alt","height","borderRadius","marginRight","textAlign","stockQuantity","units","_validationErrors$ite","_editedProducts$item$3","_editedProducts$item$4","FormField","errorText","Input","some","selectedItem","_validationErrors$ite2","_editedProducts$item$5","_editedProducts$item$6","Toggle","newStatus","PutToggle","then","response","meta","requestStatus","payload","status","handleToggleChange","checked","onSelectionChange","_ref2","selectionType","Modal","visible","footer","confirmBulkModifyPrice","success","_editedProducts$item$","_editedProducts$item$2","pricingData","putPricingById"],"sourceRoot":""}