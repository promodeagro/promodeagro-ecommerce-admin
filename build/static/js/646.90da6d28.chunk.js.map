{"version":3,"file":"static/js/646.90da6d28.chunk.js","mappings":"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","sources":["../node_modules/@cloudscape-design/components/checkbox/styles.css.js","../node_modules/src/checkbox/internal.tsx","../node_modules/src/grid/index.tsx","../node_modules/src/header/index.tsx","../node_modules/@cloudscape-design/components/internal/components/abstract-switch/analytics-metadata/styles.css.js","../node_modules/@cloudscape-design/components/internal/components/abstract-switch/styles.css.js","../node_modules/src/internal/components/abstract-switch/index.tsx","../node_modules/@cloudscape-design/components/internal/components/checkbox-icon/styles.css.js","../node_modules/src/internal/components/checkbox-icon/index.tsx","../node_modules/src/internal/hooks/use-previous/index.ts","../node_modules/src/internal/utils/browser-scrollbar-size.ts","../node_modules/src/internal/utils/calculate-once.ts","../node_modules/src/space-between/index.tsx","../node_modules/@cloudscape-design/components/space-between/styles.css.js","../node_modules/src/space-between/internal.tsx","../node_modules/@cloudscape-design/components/status-indicator/styles.css.js","../node_modules/src/status-indicator/internal.tsx","../node_modules/src/table/header-cell/utils.ts","../node_modules/src/internal/hooks/use-mouse-down-target.ts","../node_modules/src/table/body-cell/click-away.tsx","../node_modules/@cloudscape-design/components/table/expandable-rows/styles.css.js","../node_modules/src/table/expandable-rows/expand-toggle-button.tsx","../node_modules/src/area-chart/async-store/index.ts","../node_modules/src/table/sticky-columns/use-sticky-columns.ts","../node_modules/src/table/sticky-columns/utils.ts","../node_modules/src/table/table-role/table-role-helper.ts","../node_modules/src/table/utils.ts","../node_modules/@cloudscape-design/components/table/body-cell/styles.css.js","../node_modules/src/table/body-cell/td-element.tsx","../node_modules/src/table/body-cell/disabled-inline-editor.tsx","../node_modules/src/table/body-cell/inline-editor.tsx","../node_modules/src/table/body-cell/index.tsx","../node_modules/src/table/column-widths-utils.ts","../node_modules/src/table/selection/utils.ts","../node_modules/@cloudscape-design/components/table/styles.css.js","../node_modules/src/table/no-data-cell.tsx","../node_modules/@cloudscape-design/components/table/progressive-loading/styles.css.js","../node_modules/src/table/progressive-loading/items-loader.tsx","../node_modules/src/table/use-column-widths.tsx","../node_modules/@cloudscape-design/components/table/resizer/styles.css.js","../node_modules/src/table/resizer/resizer-lookup.ts","../node_modules/src/table/resizer/index.tsx","../node_modules/@cloudscape-design/components/table/selection/styles.css.js","../node_modules/src/table/selection/use-selection-focus-move.ts","../node_modules/src/table/selection/use-selection.ts","../node_modules/@cloudscape-design/components/radio-group/styles.css.js","../node_modules/src/radio-group/radio-button.tsx","../node_modules/src/table/selection/selection-control.tsx","../node_modules/@cloudscape-design/components/table/header-cell/styles.css.js","../node_modules/src/table/header-cell/th-element.tsx","../node_modules/@cloudscape-design/components/table/analytics-metadata/styles.css.js","../node_modules/src/table/header-cell/index.tsx","../node_modules/src/table/thead.tsx","../node_modules/src/table/sticky-scrolling.ts","../node_modules/src/table/use-sticky-header.ts","../node_modules/src/table/sticky-header.tsx","../node_modules/@cloudscape-design/components/table/sticky-scrollbar/styles.css.js","../node_modules/src/table/sticky-scrollbar/use-sticky-scrollbar.ts","../node_modules/src/table/sticky-scrollbar/sticky-scrollbar.tsx","../node_modules/src/table/table-role/utils.ts","../node_modules/src/table/table-role/grid-navigation.tsx","../node_modules/src/table/tools-header.tsx","../node_modules/src/table/use-table-focus-navigation.ts","../node_modules/src/table/internal.tsx","../node_modules/src/table/expandable-rows/expandable-rows-utils.ts","../node_modules/src/table/progressive-loading/progressive-loading-utils.ts","../node_modules/src/table/use-cell-editing.ts","../node_modules/src/internal/hooks/use-table-interaction-metrics/index.ts","../node_modules/src/internal/hooks/use-scroll-sync/index.ts","../node_modules/src/table/use-row-events.ts","../node_modules/src/table/index.tsx"],"sourcesContent":["\n    import './styles.scoped.css';\n    export default {\n  \"root\": \"awsui_root_k2y2q_1wk1c_97\",\n  \"checkbox-control\": \"awsui_checkbox-control_k2y2q_1wk1c_133\",\n  \"outline\": \"awsui_outline_k2y2q_1wk1c_141\"\n};\n  ","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport {\n  GeneratedAnalyticsMetadataFragment,\n  getAnalyticsMetadataAttribute,\n} from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport { getBaseProps } from '../internal/base-component';\nimport AbstractSwitch from '../internal/components/abstract-switch';\nimport CheckboxIcon from '../internal/components/checkbox-icon';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport { useSingleTabStopNavigation } from '../internal/context/single-tab-stop-navigation-context';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport {\n  GeneratedAnalyticsMetadataCheckboxComponent,\n  GeneratedAnalyticsMetadataCheckboxSelect,\n} from './analytics-metadata/interfaces';\nimport { CheckboxProps } from './interfaces';\n\nimport styles from './styles.css.js';\n\ninterface InternalProps extends CheckboxProps, InternalBaseComponentProps {\n  tabIndex?: -1;\n  showOutline?: boolean;\n  __injectAnalyticsComponentMetadata?: boolean;\n}\n\nconst InternalCheckbox = React.forwardRef<CheckboxProps.Ref, InternalProps>(\n  (\n    {\n      controlId,\n      name,\n      checked,\n      disabled,\n      readOnly,\n      ariaRequired,\n      indeterminate,\n      children,\n      description,\n      ariaLabel,\n      onFocus,\n      onBlur,\n      onChange,\n      tabIndex: explicitTabIndex,\n      showOutline,\n      ariaControls,\n      __internalRootRef,\n      __injectAnalyticsComponentMetadata = false,\n      ...rest\n    },\n    ref\n  ) => {\n    const { ariaDescribedby, ariaLabelledby } = useFormFieldContext(rest);\n    const baseProps = getBaseProps(rest);\n    const checkboxRef = useRef<HTMLInputElement>(null);\n    useForwardFocus(ref, checkboxRef);\n    useEffect(() => {\n      if (checkboxRef.current) {\n        checkboxRef.current.indeterminate = Boolean(indeterminate);\n      }\n    });\n\n    const { tabIndex } = useSingleTabStopNavigation(checkboxRef, { tabIndex: explicitTabIndex });\n\n    const analyticsMetadata: GeneratedAnalyticsMetadataFragment = {};\n    const analyticsComponentMetadata: GeneratedAnalyticsMetadataCheckboxComponent = {\n      name: 'awsui.Checkbox',\n      label: { root: 'self' },\n    };\n    if (__injectAnalyticsComponentMetadata) {\n      analyticsMetadata.component = analyticsComponentMetadata;\n    }\n    if (!disabled && !readOnly) {\n      analyticsMetadata.detail = {\n        selected: `${!checked}`,\n      } as Partial<GeneratedAnalyticsMetadataCheckboxSelect['detail']>;\n    }\n\n    return (\n      <AbstractSwitch\n        {...baseProps}\n        className={clsx(styles.root, baseProps.className)}\n        controlClassName={styles['checkbox-control']}\n        outlineClassName={styles.outline}\n        controlId={controlId}\n        disabled={disabled}\n        readOnly={readOnly}\n        label={children}\n        description={description}\n        descriptionBottomPadding={true}\n        ariaLabel={ariaLabel}\n        ariaLabelledby={ariaLabelledby}\n        ariaDescribedby={ariaDescribedby}\n        ariaControls={ariaControls}\n        showOutline={showOutline}\n        nativeControl={nativeControlProps => (\n          <input\n            {...nativeControlProps}\n            ref={checkboxRef}\n            type=\"checkbox\"\n            checked={checked}\n            name={name}\n            aria-required={ariaRequired ? 'true' : undefined}\n            aria-disabled={readOnly && !disabled ? 'true' : undefined}\n            tabIndex={tabIndex}\n            onFocus={() => fireNonCancelableEvent(onFocus)}\n            onBlur={() => fireNonCancelableEvent(onBlur)}\n            // empty handler to suppress React controllability warning\n            onChange={() => {}}\n          />\n        )}\n        onClick={() => {\n          checkboxRef.current?.focus();\n          fireNonCancelableEvent(\n            onChange,\n            // for deterministic transitions \"indeterminate\" -> \"checked\" -> \"unchecked\"\n            indeterminate ? { checked: true, indeterminate: false } : { checked: !checked, indeterminate: false }\n          );\n        }}\n        styledControl={\n          <CheckboxIcon checked={checked} indeterminate={indeterminate} disabled={disabled} readOnly={readOnly} />\n        }\n        __internalRootRef={__internalRootRef}\n        {...getAnalyticsMetadataAttribute(analyticsMetadata)}\n      />\n    );\n  }\n);\n\nexport default InternalCheckbox;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { getBaseProps } from '../internal/base-component';\nimport { useContainerBreakpoints } from '../internal/hooks/container-queries';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { GridProps } from './interfaces';\nimport InternalGrid from './internal';\n\nexport { GridProps };\n\nexport default function Grid({ gridDefinition = [], disableGutters = false, children, ...restProps }: GridProps) {\n  const baseComponentProps = useBaseComponent('Grid', {\n    props: { disableGutters },\n  });\n  const baseProps = getBaseProps(restProps);\n  const [breakpoint, ref] = useContainerBreakpoints(undefined);\n\n  return (\n    <InternalGrid\n      {...baseProps}\n      {...baseComponentProps}\n      ref={ref}\n      __breakpoint={breakpoint}\n      gridDefinition={gridDefinition}\n      disableGutters={disableGutters}\n    >\n      {children}\n    </InternalGrid>\n  );\n}\n\napplyDisplayName(Grid, 'Grid');\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { HeaderProps } from './interfaces';\nimport InternalHeader from './internal';\n\nexport { HeaderProps };\n\nexport default function Header({ variant = 'h2', ...props }: HeaderProps) {\n  const baseComponentProps = useBaseComponent('Header', {\n    props: { headingTagOverride: props.headingTagOverride, variant },\n  });\n  return <InternalHeader variant={variant} {...props} {...baseComponentProps} />;\n}\n\napplyDisplayName(Header, 'Header');\n","\n    import './styles.scoped.css';\n    export default {\n  \"label\": \"awsui_label_13tpe_9w8pd_5\",\n  \"native-input\": \"awsui_native-input_13tpe_9w8pd_6\"\n};\n  ","\n    import './styles.scoped.css';\n    export default {\n  \"content\": \"awsui_content_1wepg_s8qpr_97\",\n  \"description\": \"awsui_description_1wepg_s8qpr_98\",\n  \"label\": \"awsui_label_1wepg_s8qpr_99\",\n  \"outline\": \"awsui_outline_1wepg_s8qpr_107\",\n  \"show-outline\": \"awsui_show-outline_1wepg_s8qpr_110\",\n  \"native-input\": \"awsui_native-input_1wepg_s8qpr_114\",\n  \"wrapper\": \"awsui_wrapper_1wepg_s8qpr_118\",\n  \"label-wrapper\": \"awsui_label-wrapper_1wepg_s8qpr_124\",\n  \"empty-content\": \"awsui_empty-content_1wepg_s8qpr_135\",\n  \"description-bottom-padding\": \"awsui_description-bottom-padding_1wepg_s8qpr_145\",\n  \"label-disabled\": \"awsui_label-disabled_1wepg_s8qpr_153\",\n  \"description-disabled\": \"awsui_description-disabled_1wepg_s8qpr_154\",\n  \"control\": \"awsui_control_1wepg_s8qpr_158\"\n};\n  ","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport {\n  getAnalyticsLabelAttribute,\n  getAnalyticsMetadataAttribute,\n} from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport { InternalBaseComponentProps } from '../../hooks/use-base-component/index.js';\nimport { useUniqueId } from '../../hooks/use-unique-id';\n\nimport analyticsSelectors from './analytics-metadata/styles.css.js';\nimport styles from './styles.css.js';\n\nexport interface AbstractSwitchProps extends React.HTMLAttributes<HTMLElement>, InternalBaseComponentProps {\n  controlId?: string;\n  controlClassName: string;\n  outlineClassName: string;\n  showOutline?: boolean;\n  disabled?: boolean;\n  readOnly?: boolean;\n  nativeControl: (props: React.InputHTMLAttributes<HTMLInputElement>) => React.ReactElement;\n  styledControl: React.ReactElement;\n  label?: React.ReactNode;\n  description?: React.ReactNode;\n  descriptionBottomPadding?: boolean;\n  ariaLabel?: string;\n  ariaLabelledby?: string;\n  ariaDescribedby?: string;\n  ariaControls?: string;\n  onClick: () => void;\n}\n\nfunction joinString(values: (string | undefined)[]) {\n  return values.filter((value): value is string => !!value).join(' ');\n}\n\nexport default function AbstractSwitch({\n  controlId,\n  controlClassName,\n  outlineClassName,\n  showOutline,\n  disabled,\n  readOnly,\n  nativeControl,\n  styledControl,\n  label,\n  description,\n  descriptionBottomPadding,\n  ariaLabel,\n  ariaLabelledby,\n  ariaDescribedby,\n  ariaControls,\n  onClick,\n  __internalRootRef,\n  ...rest\n}: AbstractSwitchProps) {\n  const uniqueId = useUniqueId();\n  const id = controlId || uniqueId;\n\n  const labelId = `${id}-label`;\n  const descriptionId = `${id}-description`;\n\n  const ariaLabelledByIds = [];\n  if (label && !ariaLabel) {\n    ariaLabelledByIds.push(labelId);\n  }\n  if (ariaLabelledby) {\n    ariaLabelledByIds.push(ariaLabelledby);\n  }\n\n  const ariaDescriptions = [];\n  if (ariaDescribedby) {\n    ariaDescriptions.push(ariaDescribedby);\n  }\n  if (description) {\n    ariaDescriptions.push(descriptionId);\n  }\n\n  return (\n    <span\n      {...rest}\n      className={clsx(styles.wrapper, rest.className)}\n      ref={__internalRootRef}\n      {...getAnalyticsLabelAttribute(label ? `.${analyticsSelectors.label}` : `.${analyticsSelectors['native-input']}`)}\n    >\n      <span\n        className={styles['label-wrapper']}\n        aria-disabled={disabled ? 'true' : undefined}\n        onClick={disabled || readOnly ? undefined : onClick}\n        {...getAnalyticsMetadataAttribute(\n          disabled || readOnly\n            ? {}\n            : {\n                action: 'select',\n                detail: {\n                  label: label ? `.${analyticsSelectors.label}` : `.${analyticsSelectors['native-input']}`,\n                },\n              }\n        )}\n      >\n        <span className={clsx(styles.control, controlClassName)}>\n          {styledControl}\n          {nativeControl({\n            id,\n            disabled,\n            className: clsx(styles['native-input'], analyticsSelectors['native-input']),\n            'aria-describedby': ariaDescriptions.length ? joinString(ariaDescriptions) : undefined,\n            'aria-labelledby': ariaLabelledByIds.length ? joinString(ariaLabelledByIds) : undefined,\n            'aria-label': ariaLabel,\n            'aria-controls': ariaControls,\n          })}\n          <span className={clsx(styles.outline, outlineClassName, showOutline && styles['show-outline'])} />\n        </span>\n        <span className={clsx(styles.content, !label && !description && styles['empty-content'])}>\n          {label && (\n            <span\n              id={labelId}\n              className={clsx(styles.label, analyticsSelectors.label, { [styles['label-disabled']]: disabled })}\n            >\n              {label}\n            </span>\n          )}\n          {description && (\n            <span\n              id={descriptionId}\n              className={clsx(styles.description, {\n                [styles['description-disabled']]: disabled,\n                [styles['description-bottom-padding']]: descriptionBottomPadding,\n              })}\n            >\n              {description}\n            </span>\n          )}\n        </span>\n      </span>\n    </span>\n  );\n}\n","\n    import './styles.scoped.css';\n    export default {\n  \"root\": \"awsui_root_1fn7j_1yjhw_97\",\n  \"styled-box\": \"awsui_styled-box_1fn7j_1yjhw_104\",\n  \"styled-box-checked\": \"awsui_styled-box-checked_1fn7j_1yjhw_110\",\n  \"styled-box-indeterminate\": \"awsui_styled-box-indeterminate_1fn7j_1yjhw_110\",\n  \"styled-box-disabled\": \"awsui_styled-box-disabled_1fn7j_1yjhw_114\",\n  \"styled-box-readonly\": \"awsui_styled-box-readonly_1fn7j_1yjhw_114\",\n  \"styled-line\": \"awsui_styled-line_1fn7j_1yjhw_128\",\n  \"styled-line-disabled\": \"awsui_styled-line-disabled_1fn7j_1yjhw_133\",\n  \"styled-line-readonly\": \"awsui_styled-line-readonly_1fn7j_1yjhw_136\"\n};\n  ","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport { BaseComponentProps, getBaseProps } from '../../base-component';\nimport { useVisualRefresh } from '../../hooks/use-visual-mode';\n\nimport styles from './styles.css.js';\n\nexport interface CheckboxIconProps extends BaseComponentProps {\n  checked?: boolean;\n  indeterminate?: boolean;\n  disabled?: boolean;\n  readOnly?: boolean;\n}\nexport interface Dimension {\n  viewBox: string;\n  indeterminate: string;\n  checked: string;\n  xy: number;\n  r: number;\n  size: number;\n}\n\n// Can't use css variables for svg attributes\nexport const dimensionsByTheme: Record<NonNullable<'default' | 'refresh'>, Dimension> = {\n  default: {\n    viewBox: '0 0 14 14',\n    indeterminate: '2.5,7 11.5,7',\n    checked: '2.5,7 6,10 11,3',\n    xy: 0.5,\n    r: 1.5,\n    size: 13,\n  },\n  refresh: {\n    viewBox: '0 0 16 16',\n    indeterminate: '3.5,8 12.5,8',\n    checked: '3.5,8 7,11 12,4',\n    xy: 1,\n    r: 2,\n    size: 14,\n  },\n};\n\nconst CheckboxIcon = ({\n  checked,\n  indeterminate,\n  disabled = false,\n  readOnly = false,\n  ...restProps\n}: CheckboxIconProps) => {\n  const baseProps = getBaseProps(restProps);\n  const theme = useVisualRefresh() ? 'refresh' : 'default';\n  const dimensions = dimensionsByTheme[theme];\n  return (\n    <svg className={styles.root} viewBox={dimensions.viewBox} aria-hidden=\"true\" focusable=\"false\" {...baseProps}>\n      <rect\n        className={clsx(styles['styled-box'], {\n          [styles['styled-box-checked']]: checked,\n          [styles['styled-box-indeterminate']]: indeterminate,\n          [styles['styled-box-disabled']]: disabled,\n          [styles['styled-box-readonly']]: readOnly,\n        })}\n        x={dimensions.xy}\n        y={dimensions.xy}\n        rx={dimensions.r}\n        ry={dimensions.r}\n        width={dimensions.size}\n        height={dimensions.size}\n      />\n      {checked || indeterminate ? (\n        <polyline\n          className={clsx(styles['styled-line'], {\n            [styles['styled-line-disabled']]: disabled,\n            [styles['styled-line-readonly']]: readOnly,\n          })}\n          points={indeterminate ? dimensions.indeterminate : dimensions.checked}\n        />\n      ) : null}\n    </svg>\n  );\n};\n\nexport default CheckboxIcon;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useEffect, useRef } from 'react';\n\n/**\n * This hook gives the value of any variable from the previous render invocation\n */\nexport const usePrevious = <T>(value: T) => {\n  const ref = useRef<T>();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\n","/*\n * ** Detect scrollbar width (blog post); version N/A -- https://davidwalsh.name/detect-scrollbar-width\n *\n * MIT License\n *\n * Copyright (c) 2007-2021 David Walsh\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n/* eslint-disable header/header */\nimport { calculateOnce } from './calculate-once';\n\nexport const browserScrollbarSize = calculateOnce(() => {\n  if (typeof document === 'undefined') {\n    return { width: 0, height: 0 };\n  }\n  const scrollDiv = document.createElement('div');\n  scrollDiv.style.overflow = 'scroll';\n  scrollDiv.style.height = '100px';\n  scrollDiv.style.width = '100px';\n  scrollDiv.style.position = 'absolute';\n  scrollDiv.style.top = '-9999px';\n  scrollDiv.style.left = '-9999px';\n  document.body.appendChild(scrollDiv);\n\n  const width = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n  const height = scrollDiv.offsetHeight - scrollDiv.clientHeight;\n  document.body.removeChild(scrollDiv);\n  return { width, height };\n});\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport function calculateOnce<T>(callback: () => T) {\n  let result: T | undefined = undefined;\n  return () => {\n    if (result === undefined) {\n      result = callback();\n    }\n    return result;\n  };\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { SpaceBetweenProps } from './interfaces';\nimport InternalSpaceBetween from './internal';\n\nexport { SpaceBetweenProps };\n\nexport default function SpaceBetween({ direction = 'vertical', ...props }: SpaceBetweenProps) {\n  const baseComponentProps = useBaseComponent('SpaceBetween', {\n    props: { alignItems: props.alignItems, direction, size: props.size },\n  });\n  return <InternalSpaceBetween direction={direction} {...props} {...baseComponentProps} />;\n}\n\napplyDisplayName(SpaceBetween, 'SpaceBetween');\n","\n    import './styles.scoped.css';\n    export default {\n  \"root\": \"awsui_root_18582_jftqg_97\",\n  \"child\": \"awsui_child_18582_jftqg_101\",\n  \"horizontal\": \"awsui_horizontal_18582_jftqg_112\",\n  \"horizontal-xxxs\": \"awsui_horizontal-xxxs_18582_jftqg_116\",\n  \"horizontal-xxs\": \"awsui_horizontal-xxs_18582_jftqg_119\",\n  \"horizontal-xs\": \"awsui_horizontal-xs_18582_jftqg_122\",\n  \"horizontal-s\": \"awsui_horizontal-s_18582_jftqg_125\",\n  \"horizontal-m\": \"awsui_horizontal-m_18582_jftqg_128\",\n  \"horizontal-l\": \"awsui_horizontal-l_18582_jftqg_131\",\n  \"horizontal-xl\": \"awsui_horizontal-xl_18582_jftqg_134\",\n  \"horizontal-xxl\": \"awsui_horizontal-xxl_18582_jftqg_137\",\n  \"vertical\": \"awsui_vertical_18582_jftqg_144\",\n  \"vertical-xxxs\": \"awsui_vertical-xxxs_18582_jftqg_147\",\n  \"vertical-xxs\": \"awsui_vertical-xxs_18582_jftqg_150\",\n  \"vertical-xs\": \"awsui_vertical-xs_18582_jftqg_153\",\n  \"vertical-s\": \"awsui_vertical-s_18582_jftqg_156\",\n  \"vertical-m\": \"awsui_vertical-m_18582_jftqg_159\",\n  \"vertical-l\": \"awsui_vertical-l_18582_jftqg_162\",\n  \"vertical-xl\": \"awsui_vertical-xl_18582_jftqg_165\",\n  \"vertical-xxl\": \"awsui_vertical-xxl_18582_jftqg_168\",\n  \"align-center\": \"awsui_align-center_18582_jftqg_172\",\n  \"align-start\": \"awsui_align-start_18582_jftqg_176\",\n  \"align-end\": \"awsui_align-end_18582_jftqg_180\"\n};\n  ","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport flattenChildren from 'react-keyed-flatten-children';\nimport clsx from 'clsx';\n\nimport { getBaseProps } from '../internal/base-component';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { SpaceBetweenProps } from './interfaces';\n\nimport styles from './styles.css.js';\n\ntype InternalSpaceBetweenProps = SpaceBetweenProps & InternalBaseComponentProps;\n\nexport default function InternalSpaceBetween({\n  direction = 'vertical',\n  size,\n  children,\n  alignItems,\n  __internalRootRef,\n  ...props\n}: InternalSpaceBetweenProps) {\n  const baseProps = getBaseProps(props);\n\n  /*\n   Flattening the children allows us to \"see through\" React Fragments and nested arrays.\n   */\n  const flattenedChildren = flattenChildren(children);\n\n  return (\n    <div\n      {...baseProps}\n      className={clsx(\n        baseProps.className,\n        styles.root,\n        styles[direction],\n        styles[`${direction}-${size}`],\n        alignItems && styles[`align-${alignItems}`]\n      )}\n      ref={__internalRootRef}\n    >\n      {flattenedChildren.map(child => {\n        const key = typeof child === 'object' ? child.key : undefined;\n\n        return (\n          <div key={key} className={styles.child}>\n            {child}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","\n    import './styles.scoped.css';\n    export default {\n  \"icon-shake\": \"awsui_icon-shake_1cbgc_pjowk_101\",\n  \"awsui-motion-shake-horizontally\": \"awsui_awsui-motion-shake-horizontally_1cbgc_pjowk_1\",\n  \"container-fade-in\": \"awsui_container-fade-in_1cbgc_pjowk_129\",\n  \"awsui-motion-fade-in-0\": \"awsui_awsui-motion-fade-in-0_1cbgc_pjowk_1\",\n  \"root\": \"awsui_root_1cbgc_pjowk_151\",\n  \"status-error\": \"awsui_status-error_1cbgc_pjowk_160\",\n  \"status-warning\": \"awsui_status-warning_1cbgc_pjowk_163\",\n  \"status-success\": \"awsui_status-success_1cbgc_pjowk_166\",\n  \"status-info\": \"awsui_status-info_1cbgc_pjowk_169\",\n  \"status-stopped\": \"awsui_status-stopped_1cbgc_pjowk_172\",\n  \"status-pending\": \"awsui_status-pending_1cbgc_pjowk_175\",\n  \"status-in-progress\": \"awsui_status-in-progress_1cbgc_pjowk_178\",\n  \"status-loading\": \"awsui_status-loading_1cbgc_pjowk_181\",\n  \"color-override-red\": \"awsui_color-override-red_1cbgc_pjowk_184\",\n  \"color-override-grey\": \"awsui_color-override-grey_1cbgc_pjowk_187\",\n  \"color-override-blue\": \"awsui_color-override-blue_1cbgc_pjowk_190\",\n  \"color-override-green\": \"awsui_color-override-green_1cbgc_pjowk_193\",\n  \"color-override-yellow\": \"awsui_color-override-yellow_1cbgc_pjowk_196\",\n  \"container\": \"awsui_container_1cbgc_pjowk_129\",\n  \"display-inline\": \"awsui_display-inline_1cbgc_pjowk_200\",\n  \"icon\": \"awsui_icon_1cbgc_pjowk_101\",\n  \"display-inline-block\": \"awsui_display-inline-block_1cbgc_pjowk_208\",\n  \"overflow-ellipsis\": \"awsui_overflow-ellipsis_1cbgc_pjowk_217\"\n};\n  ","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport { IconProps } from '../icon/interfaces';\nimport InternalIcon from '../icon/internal';\nimport { BaseComponentProps, getBaseProps } from '../internal/base-component';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { SomeRequired } from '../internal/types';\nimport InternalSpinner from '../spinner/internal';\n\nimport styles from './styles.css.js';\n\nconst typeToIcon: (size: IconProps.Size) => Record<StatusIndicatorProps.Type, JSX.Element> = size => ({\n  error: <InternalIcon name=\"status-negative\" size={size} />,\n  warning: <InternalIcon name=\"status-warning\" size={size} />,\n  success: <InternalIcon name=\"status-positive\" size={size} />,\n  info: <InternalIcon name=\"status-info\" size={size} />,\n  stopped: <InternalIcon name=\"status-stopped\" size={size} />,\n  pending: <InternalIcon name=\"status-pending\" size={size} />,\n  'in-progress': <InternalIcon name=\"status-in-progress\" size={size} />,\n  loading: <InternalSpinner />,\n});\n\nexport interface StatusIndicatorProps extends BaseComponentProps {\n  /**\n   * Specifies the status type.\n   */\n  type?: StatusIndicatorProps.Type;\n  /**\n   * A text fragment that communicates the status.\n   */\n  children?: React.ReactNode;\n  /**\n   * Specifies an `aria-label` for the icon. If the status text alone does not fully describe the status,\n   * use this to communicate additional context.\n   */\n  iconAriaLabel?: string;\n  /**\n   * Specifies an override for the status indicator color.\n   */\n  colorOverride?: StatusIndicatorProps.Color;\n  /**\n   * Specifies if the text content should wrap. If you set it to false, it prevents the text from wrapping\n   * and truncates it with an ellipsis.\n   */\n  wrapText?: boolean;\n}\n\nexport interface InternalStatusIndicatorProps\n  extends SomeRequired<StatusIndicatorProps, 'type'>,\n    InternalBaseComponentProps {\n  /**\n   * Play an animation on the error icon when first rendered\n   */\n  __animate?: boolean;\n\n  /**\n   * Size of icon.\n   */\n  __size?: IconProps.Size;\n\n  /**\n   * The CSS behavior of the status indicator container element.\n   */\n  __display?: 'inline' | 'inline-block';\n}\n\nexport namespace StatusIndicatorProps {\n  // Why not enums? Explained there\n  // https://stackoverflow.com/questions/52393730/typescript-string-literal-union-type-from-enum\n  export type Type = 'error' | 'warning' | 'success' | 'info' | 'stopped' | 'pending' | 'in-progress' | 'loading';\n  export type Color = 'blue' | 'grey' | 'green' | 'red' | 'yellow';\n}\n\nexport default function StatusIndicator({\n  type,\n  children,\n  iconAriaLabel,\n  colorOverride,\n  wrapText = true,\n  __animate = false,\n  __internalRootRef,\n  __size = 'normal',\n  __display = 'inline-block',\n  ...rest\n}: InternalStatusIndicatorProps) {\n  const baseProps = getBaseProps(rest);\n  return (\n    <span\n      {...baseProps}\n      className={clsx(\n        styles.root,\n        styles[`status-${type}`],\n        {\n          [styles[`color-override-${colorOverride}`]]: colorOverride,\n        },\n        baseProps.className\n      )}\n      ref={__internalRootRef}\n    >\n      <span\n        className={clsx(\n          styles.container,\n          styles[`display-${__display}`],\n          wrapText === false && styles['overflow-ellipsis'],\n          __animate && styles['container-fade-in']\n        )}\n      >\n        <span\n          className={clsx(styles.icon, __animate && styles['icon-shake'])}\n          aria-label={iconAriaLabel}\n          role={iconAriaLabel ? 'img' : undefined}\n        >\n          {typeToIcon(__size)[type]}\n          {__display === 'inline' && <>&nbsp;</>}\n        </span>\n        {children}\n      </span>\n    </span>\n  );\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { TableProps } from '../interfaces';\n\nexport type SortingStatus = 'sortable' | 'ascending' | 'descending';\nconst stateToIcon = {\n  sortable: 'caret-down',\n  ascending: 'caret-up-filled',\n  descending: 'caret-down-filled',\n} as const;\n\nexport const getSortingStatus = (\n  sortable: boolean,\n  sorted: boolean,\n  descending: boolean,\n  disabled: boolean\n): SortingStatus | undefined => {\n  if (sorted) {\n    if (descending) {\n      return 'descending';\n    }\n    return 'ascending';\n  }\n  if (sortable && !disabled) {\n    return 'sortable';\n  }\n  return undefined;\n};\n\nexport const getSortingIconName = (sortingState: SortingStatus) => stateToIcon[sortingState];\nexport const isSorted = <T>(column: TableProps.ColumnDefinition<T>, sortingColumn: TableProps.SortingColumn<T>) =>\n  column === sortingColumn ||\n  (column.sortingField !== undefined && column.sortingField === sortingColumn.sortingField) ||\n  (column.sortingComparator !== undefined && column.sortingComparator === sortingColumn.sortingComparator);\nexport const getSortingColumnId = <T>(\n  columnDefinitions: ReadonlyArray<TableProps.ColumnDefinition<T>> = [],\n  sortingColumn?: TableProps.SortingColumn<T>\n) => {\n  if (!sortingColumn) {\n    return null;\n  }\n  for (let i = 0; i < columnDefinitions.length; i++) {\n    if (isSorted(columnDefinitions[i], sortingColumn)) {\n      return columnDefinitions[i].id || null;\n    }\n  }\n  return null;\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useRef } from 'react';\n\nimport { createSingletonHandler } from '@cloudscape-design/component-toolkit/internal';\n\nconst useEventListenersSingleton = createSingletonHandler<Node | null>(setTarget => {\n  function handleMouseDown(event: MouseEvent) {\n    setTarget(event.target as Node);\n  }\n  function handleKeyDown() {\n    setTarget(null);\n  }\n  window.addEventListener('mousedown', handleMouseDown);\n  window.addEventListener('keydown', handleKeyDown);\n  return () => {\n    window.removeEventListener('mousedown', handleMouseDown);\n    window.removeEventListener('keydown', handleKeyDown);\n  };\n});\n\n/**\n * Captures last mouse down target and clears it on keydown.\n * @returns a callback to get the last detected mouse down target.\n */\nexport default function useMouseDownTarget() {\n  const mouseDownTargetRef = useRef<null | Node>(null);\n  useEventListenersSingleton(target => {\n    mouseDownTargetRef.current = target;\n  });\n  return () => mouseDownTargetRef.current;\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useEffect, useRef } from 'react';\n\nimport { useStableCallback } from '@cloudscape-design/component-toolkit/internal';\n\nimport { nodeBelongs } from '../../internal/utils/node-belongs';\n\nexport function useClickAway(onClick: () => void) {\n  const awayRef = useRef<any>(null);\n  const onClickStable = useStableCallback(onClick);\n  useEffect(() => {\n    function handleClick(event: Event) {\n      if (!nodeBelongs(awayRef.current, event.target as HTMLElement)) {\n        onClickStable();\n      }\n    }\n    // contains returns wrong result if the next render would remove the element\n    // but capture phase happens before the render, so returns correct result\n    // Ref: https://github.com/facebook/react/issues/20325\n    document.addEventListener('click', handleClick, { capture: true });\n    return () => document.removeEventListener('click', handleClick, { capture: true });\n  }, [onClickStable]);\n  return awayRef;\n}\n","\n    import './styles.scoped.css';\n    export default {\n  \"expand-toggle-icon\": \"awsui_expand-toggle-icon_1ss49_1npai_97\",\n  \"expand-toggle-icon-expanded\": \"awsui_expand-toggle-icon-expanded_1ss49_1npai_122\",\n  \"expand-toggle\": \"awsui_expand-toggle_1ss49_1npai_97\"\n};\n  ","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\n\nimport InternalIcon from '../../icon/internal';\nimport { useSingleTabStopNavigation } from '../../internal/context/single-tab-stop-navigation-context';\n\nimport styles from './styles.css.js';\n\nexport function ExpandToggleButton({\n  isExpanded,\n  onExpandableItemToggle,\n  expandButtonLabel,\n  collapseButtonLabel,\n}: {\n  isExpanded?: boolean;\n  onExpandableItemToggle?: () => void;\n  expandButtonLabel?: string;\n  collapseButtonLabel?: string;\n}) {\n  const buttonRef = useRef<HTMLButtonElement>(null);\n  const { tabIndex } = useSingleTabStopNavigation(buttonRef);\n  return (\n    <button\n      ref={buttonRef}\n      tabIndex={tabIndex}\n      aria-label={isExpanded ? collapseButtonLabel : expandButtonLabel}\n      aria-expanded={isExpanded}\n      className={styles['expand-toggle']}\n      onClick={onExpandableItemToggle}\n    >\n      <InternalIcon\n        size=\"small\"\n        name=\"caret-down-filled\"\n        className={clsx(styles['expand-toggle-icon'], isExpanded && styles['expand-toggle-icon-expanded'])}\n      />\n    </button>\n  );\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useLayoutEffect, useState } from 'react';\nimport { unstable_batchedUpdates } from 'react-dom';\n\nimport { usePrevious } from '../../internal/hooks/use-previous';\n\ntype Selector<S, R> = (state: S) => R;\ntype Listener<S> = (state: S, prevState: S) => void;\n\nexport interface ReadonlyAsyncStore<S> {\n  get(): S;\n  subscribe<R>(selector: Selector<S, R>, listener: Listener<S>): () => void;\n  unsubscribe(listener: Listener<S>): void;\n}\n\nexport default class AsyncStore<S> implements ReadonlyAsyncStore<S> {\n  _state: S;\n  _listeners: [Selector<S, unknown>, Listener<S>][] = [];\n\n  constructor(state: S) {\n    this._state = state;\n  }\n\n  get(): S {\n    return this._state;\n  }\n\n  set(cb: (state: S) => S): void {\n    const prevState = this._state;\n    const newState = cb(prevState);\n\n    this._state = newState;\n\n    unstable_batchedUpdates(() => {\n      for (const [selector, listener] of this._listeners) {\n        if (selector(prevState) !== selector(newState)) {\n          listener(newState, prevState);\n        }\n      }\n    });\n  }\n\n  subscribe<R>(selector: Selector<S, R>, listener: Listener<S>): () => void {\n    this._listeners.push([selector, listener]);\n\n    return () => this.unsubscribe(listener);\n  }\n\n  unsubscribe(listener: Listener<S>): void {\n    for (let index = 0; index < this._listeners.length; index++) {\n      const [, storedListener] = this._listeners[index];\n\n      if (storedListener === listener) {\n        this._listeners.splice(index, 1);\n        break;\n      }\n    }\n  }\n}\n\nexport function useReaction<S, R>(store: ReadonlyAsyncStore<S>, selector: Selector<S, R>, effect: Listener<R>): void {\n  useLayoutEffect(\n    () => {\n      const unsubscribe = store.subscribe(selector, (newState, prevState) =>\n        effect(selector(newState), selector(prevState))\n      );\n      return unsubscribe;\n    },\n    // ignoring selector and effect as they are expected to stay constant\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [store]\n  );\n}\n\nexport function useSelector<S, R>(store: ReadonlyAsyncStore<S>, selector: Selector<S, R>): R {\n  const [state, setState] = useState<R>(selector(store.get()));\n\n  useReaction(store, selector, newState => {\n    setState(newState);\n  });\n\n  // When store changes we need the state to be updated synchronously to avoid inconsistencies.\n  const prevStore = usePrevious(store);\n  if (prevStore !== null && prevStore !== store) {\n    return selector(store.get());\n  }\n\n  return state;\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useCallback, useEffect, useMemo, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { useResizeObserver, useStableCallback } from '@cloudscape-design/component-toolkit/internal';\nimport { getLogicalBoundingClientRect, getScrollInlineStart } from '@cloudscape-design/component-toolkit/internal';\n\nimport AsyncStore, { ReadonlyAsyncStore } from '../../area-chart/async-store';\nimport {\n  CellOffsets,\n  StickyColumnsCellState,\n  StickyColumnsProps,\n  StickyColumnsState,\n  StickyColumnsWrapperState,\n} from './interfaces';\nimport { isCellStatesEqual, isWrapperStatesEqual, updateCellOffsets } from './utils';\n\n// We allow the table to have a minimum of 148px of available space besides the sum of the widths of the sticky columns\n// This value is an UX recommendation and is approximately 1/3 of our smallest breakpoint (465px)\nconst MINIMUM_SCROLLABLE_SPACE = 148;\n\nexport interface StickyColumnsModel {\n  store: ReadonlyAsyncStore<StickyColumnsState>;\n  style: {\n    wrapper?: React.CSSProperties;\n  };\n  refs: {\n    table: React.RefCallback<HTMLElement>;\n    wrapper: React.RefCallback<HTMLElement>;\n    cell: (columnId: PropertyKey, node: null | HTMLElement) => void;\n  };\n}\n\nexport function useStickyColumns({\n  visibleColumns,\n  stickyColumnsFirst,\n  stickyColumnsLast,\n}: StickyColumnsProps): StickyColumnsModel {\n  const store = useMemo(() => new StickyColumnsStore(), []);\n  const wrapperRef = useRef<HTMLElement>(null) as React.MutableRefObject<null | HTMLElement>;\n  const tableRef = useRef<HTMLElement>(null) as React.MutableRefObject<null | HTMLElement>;\n  const cellsRef = useRef(new Map<PropertyKey, HTMLElement>());\n\n  const hasStickyColumns = stickyColumnsFirst + stickyColumnsLast > 0;\n\n  const updateStickyStyles = useStableCallback(() => {\n    if (wrapperRef.current && tableRef.current) {\n      store.updateCellStyles({\n        wrapper: wrapperRef.current,\n        table: tableRef.current,\n        cells: cellsRef.current,\n        visibleColumns,\n        stickyColumnsFirst,\n        stickyColumnsLast,\n      });\n    }\n  });\n\n  useResizeObserver(wrapperRef, updateStickyStyles);\n\n  useResizeObserver(tableRef, updateStickyStyles);\n\n  useEffect(() => {\n    if (wrapperRef.current && tableRef.current) {\n      store.updateCellStyles({\n        wrapper: wrapperRef.current,\n        table: tableRef.current,\n        cells: cellsRef.current,\n        visibleColumns,\n        stickyColumnsFirst,\n        stickyColumnsLast,\n      });\n    }\n  }, [store, stickyColumnsFirst, stickyColumnsLast, visibleColumns]);\n\n  // Update wrapper styles imperatively to avoid unnecessary re-renders.\n  useEffect(() => {\n    if (!hasStickyColumns) {\n      return;\n    }\n\n    const selector = (state: StickyColumnsState) => state.wrapperState;\n\n    const updateWrapperStyles = (state: StickyColumnsWrapperState, prev: StickyColumnsWrapperState) => {\n      if (isWrapperStatesEqual(state, prev)) {\n        return;\n      }\n\n      if (wrapperRef.current) {\n        wrapperRef.current.style.scrollPaddingInlineStart = state.scrollPaddingInlineStart + 'px';\n        wrapperRef.current.style.scrollPaddingInlineEnd = state.scrollPaddingInlineEnd + 'px';\n      }\n    };\n\n    const unsubscribe = store.subscribe(selector, (newState, prevState) =>\n      updateWrapperStyles(selector(newState), selector(prevState))\n    );\n    return unsubscribe;\n  }, [store, hasStickyColumns]);\n\n  const setWrapper = useCallback(\n    (node: null | HTMLElement) => {\n      if (wrapperRef.current) {\n        wrapperRef.current.removeEventListener('scroll', updateStickyStyles);\n      }\n      if (node && hasStickyColumns) {\n        node.addEventListener('scroll', updateStickyStyles);\n      }\n      wrapperRef.current = node;\n    },\n    [hasStickyColumns, updateStickyStyles]\n  );\n\n  const setTable = useCallback((node: null | HTMLElement) => {\n    tableRef.current = node;\n  }, []);\n\n  const setCell = useCallback((columnId: PropertyKey, node: null | HTMLElement) => {\n    if (node) {\n      cellsRef.current.set(columnId, node);\n    } else {\n      cellsRef.current.delete(columnId);\n    }\n  }, []);\n\n  return {\n    store,\n    style: {\n      // Provide wrapper styles as props so that a re-render won't cause invalidation.\n      wrapper: hasStickyColumns ? { ...store.get().wrapperState } : undefined,\n    },\n    refs: { wrapper: setWrapper, table: setTable, cell: setCell },\n  };\n}\n\ninterface UseStickyCellStylesProps {\n  stickyColumns: StickyColumnsModel;\n  columnId: PropertyKey;\n  getClassName: (styles: null | StickyColumnsCellState) => Record<string, boolean>;\n}\n\ninterface StickyCellStyles {\n  ref: React.RefCallback<HTMLElement>;\n  className?: string;\n  style?: React.CSSProperties;\n}\n\nexport function useStickyCellStyles({\n  stickyColumns,\n  columnId,\n  getClassName,\n}: UseStickyCellStylesProps): StickyCellStyles {\n  const setCell = stickyColumns.refs.cell;\n\n  // unsubscribeRef to hold the function to unsubscribe from the store's updates\n  const unsubscribeRef = useRef<null | (() => void)>(null);\n\n  // refCallback updates the cell ref and sets up the store subscription\n  const refCallback = useCallback(\n    (cellElement: null | HTMLElement) => {\n      if (unsubscribeRef.current) {\n        // Unsubscribe before we do any updates to avoid leaving any subscriptions hanging\n        unsubscribeRef.current();\n      }\n\n      // Update cellRef and the store's state to point to the new DOM node\n      setCell(columnId, cellElement);\n\n      // Update cell styles imperatively to avoid unnecessary re-renders.\n      const selector = (state: StickyColumnsState) => state.cellState.get(columnId) ?? null;\n\n      const updateCellStyles = (state: null | StickyColumnsCellState, prev: null | StickyColumnsCellState) => {\n        if (isCellStatesEqual(state, prev)) {\n          return;\n        }\n\n        const className = getClassName(state);\n        if (cellElement) {\n          Object.keys(className).forEach(key => {\n            if (className[key]) {\n              cellElement.classList.add(key);\n            } else {\n              cellElement.classList.remove(key);\n            }\n          });\n          cellElement.style.insetInlineStart =\n            state?.offset.insetInlineStart !== undefined ? `${state.offset.insetInlineStart}px` : '';\n          cellElement.style.insetInlineEnd =\n            state?.offset.insetInlineEnd !== undefined ? `${state.offset.insetInlineEnd}px` : '';\n        }\n      };\n\n      // If the node is not null (i.e., the table cell is being mounted or updated, not unmounted),\n      // set up a new subscription to the store's updates\n      if (cellElement) {\n        unsubscribeRef.current = stickyColumns.store.subscribe(selector, (newState, prevState) => {\n          updateCellStyles(selector(newState), selector(prevState));\n        });\n      }\n    },\n\n    // getClassName is expected to be pure\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [columnId, setCell, stickyColumns.store]\n  );\n\n  // Provide cell styles as props so that a re-render won't cause invalidation.\n  const cellStyles = stickyColumns.store.get().cellState.get(columnId);\n  return {\n    ref: refCallback,\n    className: cellStyles ? clsx(getClassName(cellStyles)) : undefined,\n    style: cellStyles?.offset ?? undefined,\n  };\n}\n\ninterface UpdateCellStylesProps {\n  wrapper: HTMLElement;\n  table: HTMLElement;\n  cells: Map<PropertyKey, HTMLElement>;\n  visibleColumns: readonly PropertyKey[];\n  stickyColumnsFirst: number;\n  stickyColumnsLast: number;\n}\n\nexport default class StickyColumnsStore extends AsyncStore<StickyColumnsState> {\n  private cellOffsets: CellOffsets = {\n    offsets: new Map(),\n    stickyWidthInlineStart: 0,\n    stickyWidthInlineEnd: 0,\n  };\n  private isStuckToTheInlineStart = false;\n  private isStuckToTheInlineEnd = false;\n  private padInlineStart = false;\n\n  constructor() {\n    super({ cellState: new Map(), wrapperState: { scrollPaddingInlineStart: 0, scrollPaddingInlineEnd: 0 } });\n  }\n\n  public updateCellStyles(props: UpdateCellStylesProps) {\n    const hasStickyColumns = props.stickyColumnsFirst + props.stickyColumnsLast > 0;\n    const hadStickyColumns = this.cellOffsets.offsets.size > 0;\n\n    if (hasStickyColumns || hadStickyColumns) {\n      this.updateScroll(props);\n      this.updateCellOffsets(props);\n      this.set(() => ({\n        cellState: this.generateCellStyles(props),\n        wrapperState: {\n          scrollPaddingInlineStart: this.cellOffsets.stickyWidthInlineStart,\n          scrollPaddingInlineEnd: this.cellOffsets.stickyWidthInlineEnd,\n        },\n      }));\n    }\n  }\n\n  private updateScroll(props: UpdateCellStylesProps) {\n    const wrapperScrollInlineStart = getScrollInlineStart(props.wrapper);\n    const wrapperScrollWidth = props.wrapper.scrollWidth;\n    const wrapperClientWidth = props.wrapper.clientWidth;\n    const tablePaddingInlineStart = parseFloat(getComputedStyle(props.table).paddingInlineStart) || 0;\n    const tablePaddingInlineEnd = parseFloat(getComputedStyle(props.table).paddingInlineEnd) || 0;\n\n    this.isStuckToTheInlineStart = wrapperScrollInlineStart > tablePaddingInlineStart;\n\n    // Math.ceil() is used here to address an edge-case in certain browsers, where they return non-integer wrapperScrollInlineStart values\n    // which are lower than expected (sub-pixel difference), resulting in the table always being in the \"stuck to the right\" state\n    this.isStuckToTheInlineEnd =\n      Math.ceil(wrapperScrollInlineStart) < wrapperScrollWidth - wrapperClientWidth - tablePaddingInlineEnd;\n\n    this.padInlineStart = tablePaddingInlineStart !== 0 && this.isStuckToTheInlineStart;\n  }\n\n  private generateCellStyles = (props: UpdateCellStylesProps): Map<PropertyKey, StickyColumnsCellState> => {\n    const isEnabled = this.isEnabled(props);\n    const lastLeftStickyColumnIndex = props.stickyColumnsFirst - 1;\n    const lastRightStickyColumnIndex = props.visibleColumns.length - props.stickyColumnsLast;\n\n    return props.visibleColumns.reduce((acc, columnId, index) => {\n      let stickySide = 'non-sticky';\n      if (index < props.stickyColumnsFirst) {\n        stickySide = 'inline-start';\n      } else if (index >= props.visibleColumns.length - props.stickyColumnsLast) {\n        stickySide = 'inline-end';\n      }\n\n      if (!isEnabled || stickySide === 'non-sticky') {\n        return acc;\n      }\n\n      // Determine the offset of the sticky column using the `cellOffsets` state object\n      const isFirstColumn = index === 0;\n      const stickyColumnOffsetLeft = this.cellOffsets.offsets.get(columnId)?.first ?? 0;\n      const stickyColumnOffsetRight = this.cellOffsets.offsets.get(columnId)?.last ?? 0;\n\n      acc.set(columnId, {\n        padInlineStart: isFirstColumn && this.padInlineStart,\n        lastInsetInlineStart: this.isStuckToTheInlineStart && lastLeftStickyColumnIndex === index,\n        lastInsetInlineEnd: this.isStuckToTheInlineEnd && lastRightStickyColumnIndex === index,\n        offset: {\n          insetInlineStart: stickySide === 'inline-start' ? stickyColumnOffsetLeft : undefined,\n          insetInlineEnd: stickySide === 'inline-end' ? stickyColumnOffsetRight : undefined,\n        },\n      });\n      return acc;\n    }, new Map<PropertyKey, StickyColumnsCellState>());\n  };\n\n  private updateCellOffsets = (props: UpdateCellStylesProps): void => {\n    this.cellOffsets = updateCellOffsets(props.cells, props);\n  };\n\n  private isEnabled = (props: UpdateCellStylesProps): boolean => {\n    const noStickyColumns = props.stickyColumnsFirst + props.stickyColumnsLast === 0;\n    if (noStickyColumns) {\n      return false;\n    }\n\n    const wrapperWidth = getLogicalBoundingClientRect(props.wrapper).inlineSize;\n    const tableWidth = getLogicalBoundingClientRect(props.table).inlineSize;\n    const isWrapperScrollable = tableWidth > wrapperWidth;\n    if (!isWrapperScrollable) {\n      return false;\n    }\n\n    const totalStickySpace = this.cellOffsets.stickyWidthInlineStart + this.cellOffsets.stickyWidthInlineEnd;\n    const tablePaddingLeft = parseFloat(getComputedStyle(props.table).paddingLeft) || 0;\n    const tablePaddingRight = parseFloat(getComputedStyle(props.table).paddingRight) || 0;\n    const hasEnoughScrollableSpace =\n      totalStickySpace + MINIMUM_SCROLLABLE_SPACE + tablePaddingLeft + tablePaddingRight < wrapperWidth;\n    if (!hasEnoughScrollableSpace) {\n      return false;\n    }\n\n    return true;\n  };\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { getLogicalBoundingClientRect } from '@cloudscape-design/component-toolkit/internal';\n\nimport { CellOffsets, StickyColumnsCellState, StickyColumnsProps, StickyColumnsWrapperState } from './interfaces';\n\nexport function isCellStatesEqual(s1: null | StickyColumnsCellState, s2: null | StickyColumnsCellState): boolean {\n  if (s1 && s2) {\n    return (\n      s1.padInlineStart === s2.padInlineStart &&\n      s1.lastInsetInlineStart === s2.lastInsetInlineStart &&\n      s1.lastInsetInlineEnd === s2.lastInsetInlineEnd &&\n      s1.offset.insetInlineStart === s2.offset.insetInlineStart &&\n      s1.offset.insetInlineEnd === s2.offset.insetInlineEnd\n    );\n  }\n  return s1 === s2;\n}\n\nexport function isWrapperStatesEqual(s1: StickyColumnsWrapperState, s2: StickyColumnsWrapperState): boolean {\n  return (\n    s1.scrollPaddingInlineStart === s2.scrollPaddingInlineStart &&\n    s1.scrollPaddingInlineEnd === s2.scrollPaddingInlineEnd\n  );\n}\n\nexport function updateCellOffsets(cells: Map<PropertyKey, HTMLElement>, props: StickyColumnsProps): CellOffsets {\n  const totalColumns = props.visibleColumns.length;\n\n  const firstColumnsWidths: number[] = [];\n  for (let i = 0; i < Math.min(totalColumns, props.stickyColumnsFirst); i++) {\n    const element = cells.get(props.visibleColumns[i]);\n    const cellWidth = element ? getLogicalBoundingClientRect(element).inlineSize : 0;\n    firstColumnsWidths[i] = (firstColumnsWidths[i - 1] ?? 0) + cellWidth;\n  }\n\n  const lastColumnsWidths: number[] = [];\n  for (let i = 0; i < Math.min(totalColumns, props.stickyColumnsLast); i++) {\n    const element = cells.get(props.visibleColumns[totalColumns - 1 - i]);\n    const cellWidth = element ? getLogicalBoundingClientRect(element).inlineSize : 0;\n    lastColumnsWidths[i] = (lastColumnsWidths[i - 1] ?? 0) + cellWidth;\n  }\n\n  const stickyWidthInlineStart = firstColumnsWidths[props.stickyColumnsFirst - 1] ?? 0;\n  const stickyWidthInlineEnd = lastColumnsWidths[props.stickyColumnsLast - 1] ?? 0;\n  const offsets = props.visibleColumns.reduce(\n    (map, columnId, columnIndex) =>\n      map.set(columnId, {\n        first: firstColumnsWidths[columnIndex - 1] ?? 0,\n        last: lastColumnsWidths[totalColumns - 1 - columnIndex - 1] ?? 0,\n      }),\n    new Map()\n  );\n\n  return { offsets, stickyWidthInlineStart, stickyWidthInlineEnd };\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { TableRole } from './interfaces';\n\ntype SortingStatus = 'sortable' | 'ascending' | 'descending';\n\nconst stateToAriaSort = {\n  sortable: 'none',\n  ascending: 'ascending',\n  descending: 'descending',\n} as const;\nconst getAriaSort = (sortingState: SortingStatus) => stateToAriaSort[sortingState];\n\n// Depending on its content the table can have different semantic representation which includes the\n// ARIA role of the table component (\"table\", \"grid\", \"treegrid\") but also roles and other semantic attributes\n// of the child elements. The TableRole helper encapsulates table's semantic structure.\n\nexport function getTableRoleProps(options: {\n  tableRole: TableRole;\n  ariaLabel?: string;\n  ariaLabelledby?: string;\n  totalItemsCount?: number;\n  totalColumnsCount?: number;\n}): React.TableHTMLAttributes<HTMLTableElement> {\n  const nativeProps: React.TableHTMLAttributes<HTMLTableElement> = {};\n\n  // Browsers have weird mechanism to guess whether it's a data table or a layout table.\n  // If we state explicitly, they get it always correctly even with low number of rows.\n  nativeProps.role = options.tableRole === 'grid-default' ? 'grid' : options.tableRole;\n\n  nativeProps['aria-label'] = options.ariaLabel;\n  nativeProps['aria-labelledby'] = options.ariaLabelledby;\n\n  // Incrementing the total count by one to account for the header row.\n  nativeProps['aria-rowcount'] = typeof options.totalItemsCount === 'number' ? options.totalItemsCount + 1 : -1;\n\n  if (options.tableRole === 'grid' || options.tableRole === 'treegrid') {\n    nativeProps['aria-colcount'] = options.totalColumnsCount;\n  }\n\n  // Make table component programmatically focusable to attach focusin/focusout for keyboard navigation.\n  if (options.tableRole === 'grid' || options.tableRole === 'treegrid') {\n    nativeProps.tabIndex = -1;\n  }\n\n  return nativeProps;\n}\n\nexport function getTableWrapperRoleProps(options: {\n  tableRole: TableRole;\n  isScrollable: boolean;\n  ariaLabel?: string;\n  ariaLabelledby?: string;\n}) {\n  const nativeProps: React.HTMLAttributes<HTMLDivElement> = {};\n\n  // When the table is scrollable, the wrapper is made focusable so that keyboard users can scroll it horizontally with arrow keys.\n  if (options.isScrollable) {\n    nativeProps.role = 'region';\n    nativeProps.tabIndex = 0;\n    nativeProps['aria-label'] = options.ariaLabel;\n    nativeProps['aria-labelledby'] = options.ariaLabelledby;\n  }\n\n  return nativeProps;\n}\n\nexport function getTableHeaderRowRoleProps(options: { tableRole: TableRole }) {\n  const nativeProps: React.HTMLAttributes<HTMLTableRowElement> = {};\n\n  // For grids headers are treated similar to data rows and are indexed accordingly.\n  if (options.tableRole === 'grid' || options.tableRole === 'grid-default' || options.tableRole === 'treegrid') {\n    nativeProps['aria-rowindex'] = 1;\n  }\n\n  return nativeProps;\n}\n\nexport function getTableRowRoleProps(options: {\n  tableRole: TableRole;\n  rowIndex: number;\n  firstIndex?: number;\n  level?: number;\n  setSize?: number;\n  posInSet?: number;\n}) {\n  const nativeProps: React.HTMLAttributes<HTMLTableRowElement> = {};\n\n  // The data cell indices are incremented by 1 to account for the header cells.\n  if (options.tableRole === 'grid' || options.tableRole === 'treegrid') {\n    nativeProps['aria-rowindex'] = (options.firstIndex || 1) + options.rowIndex + 1;\n  }\n  // For tables indices are only added when the first index is not 0 (not the first page/frame).\n  else if (options.firstIndex !== undefined) {\n    nativeProps['aria-rowindex'] = options.firstIndex + options.rowIndex + 1;\n  }\n  if (options.tableRole === 'treegrid' && options.level && options.level !== 0) {\n    nativeProps['aria-level'] = options.level;\n  }\n  if (options.tableRole === 'treegrid' && options.setSize) {\n    nativeProps['aria-setsize'] = options.setSize;\n  }\n  if (options.tableRole === 'treegrid' && options.posInSet) {\n    nativeProps['aria-posinset'] = options.posInSet;\n  }\n\n  return nativeProps;\n}\n\nexport function getTableColHeaderRoleProps(options: {\n  tableRole: TableRole;\n  colIndex: number;\n  sortingStatus?: SortingStatus;\n}) {\n  const nativeProps: React.ThHTMLAttributes<HTMLTableCellElement> = {};\n\n  nativeProps.scope = 'col';\n\n  if (options.tableRole === 'grid' || options.tableRole === 'treegrid') {\n    nativeProps['aria-colindex'] = options.colIndex + 1;\n  }\n\n  if (options.sortingStatus) {\n    nativeProps['aria-sort'] = getAriaSort(options.sortingStatus);\n  }\n\n  return nativeProps;\n}\n\nexport function getTableCellRoleProps(options: { tableRole: TableRole; colIndex: number; isRowHeader?: boolean }) {\n  const nativeProps: React.TdHTMLAttributes<HTMLTableCellElement> = {};\n\n  if (options.tableRole === 'grid' || options.tableRole === 'treegrid') {\n    nativeProps['aria-colindex'] = options.colIndex + 1;\n  }\n\n  if (options.isRowHeader) {\n    nativeProps.scope = 'row';\n  }\n\n  return nativeProps;\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\n\nimport { InternalContainerProps } from '../container/internal';\nimport { TableProps } from './interfaces';\nimport { StickyColumnsCellState } from './sticky-columns';\n\nexport const applyTrackBy = <T>(trackBy: TableProps.TrackBy<T>, item: T) => {\n  if (typeof trackBy === 'function') {\n    return trackBy(item);\n  }\n  return (item as any)[trackBy];\n};\n\nexport const getItemKey = <T>(trackBy: TableProps.TrackBy<T> | undefined, item: T, index: number) => {\n  if (!trackBy) {\n    return index;\n  }\n  return applyTrackBy(trackBy, item);\n};\n\nexport const getTrackableValue = <T>(trackBy: TableProps.TrackBy<T> | undefined, item: T) => {\n  if (!trackBy) {\n    return item;\n  }\n  return applyTrackBy(trackBy, item);\n};\n\nexport const getColumnKey = <T>(column: TableProps.ColumnDefinition<T>, index: number) => {\n  return column.id || index;\n};\n\nexport const toContainerVariant = (variant: TableProps.Variant | undefined): InternalContainerProps['variant'] => {\n  const isDefaultVariant = !variant || variant === 'container';\n  return isDefaultVariant ? 'default' : variant === 'borderless' ? 'embedded' : variant;\n};\n\nexport function checkSortingState<T>(\n  columnDefinitions: ReadonlyArray<TableProps.ColumnDefinition<T>>,\n  sortingComparator: TableProps.SortingColumn<T>['sortingComparator']\n) {\n  const matchedColumn = columnDefinitions.filter(column => column.sortingComparator === sortingComparator)[0];\n  if (!matchedColumn) {\n    warnOnce(\n      'Table',\n      'Currently active sorting comparator was not found in any columns. Make sure to provide the same comparator function instance on each render.'\n    );\n  }\n}\n\nexport function getVisibleColumnDefinitions<T>({\n  columnDisplay,\n  visibleColumns,\n  columnDefinitions,\n}: {\n  columnDisplay?: ReadonlyArray<TableProps.ColumnDisplayProperties>;\n  visibleColumns?: ReadonlyArray<string>;\n  columnDefinitions: ReadonlyArray<TableProps.ColumnDefinition<T>>;\n}) {\n  // columnsDisplay has a precedence over visibleColumns.\n  if (columnDisplay) {\n    return getVisibleColumnDefinitionsFromColumnDisplay({ columnDisplay, columnDefinitions });\n  } else if (visibleColumns) {\n    return getVisibleColumnDefinitionsFromVisibleColumns({ visibleColumns, columnDefinitions });\n  } else {\n    return columnDefinitions;\n  }\n}\n\nfunction getVisibleColumnDefinitionsFromColumnDisplay<T>({\n  columnDisplay,\n  columnDefinitions,\n}: {\n  columnDisplay: ReadonlyArray<TableProps.ColumnDisplayProperties>;\n  columnDefinitions: ReadonlyArray<TableProps.ColumnDefinition<T>>;\n}) {\n  const columnDefinitionsById: Record<string, TableProps.ColumnDefinition<T>> = columnDefinitions.reduce(\n    (accumulator, item) => (item.id === undefined ? accumulator : { ...accumulator, [item.id]: item }),\n    {}\n  );\n  return columnDisplay\n    .filter(item => item.visible)\n    .map(item => columnDefinitionsById[item.id])\n    .filter(Boolean);\n}\n\nfunction getVisibleColumnDefinitionsFromVisibleColumns<T>({\n  visibleColumns,\n  columnDefinitions,\n}: {\n  visibleColumns: ReadonlyArray<string>;\n  columnDefinitions: ReadonlyArray<TableProps.ColumnDefinition<T>>;\n}) {\n  const ids = new Set(visibleColumns);\n  return columnDefinitions.filter(({ id }) => id !== undefined && ids.has(id));\n}\n\nexport function getStickyClassNames(styles: Record<string, string>, props: StickyColumnsCellState | null) {\n  return {\n    [styles['sticky-cell']]: !!props,\n    [styles['sticky-cell-pad-inline-start']]: !!props?.padInlineStart,\n    [styles['sticky-cell-last-inline-start']]: !!props?.lastInsetInlineStart,\n    [styles['sticky-cell-last-inline-end']]: !!props?.lastInsetInlineEnd,\n  };\n}\n","\n    import './styles.scoped.css';\n    export default {\n  \"expandable-toggle-wrapper\": \"awsui_expandable-toggle-wrapper_c6tup_1j1xu_97\",\n  \"body-cell\": \"awsui_body-cell_c6tup_1j1xu_104\",\n  \"body-cell-content\": \"awsui_body-cell-content_c6tup_1j1xu_112\",\n  \"expandable-level-0\": \"awsui_expandable-level-0_c6tup_1j1xu_118\",\n  \"expandable-level-1\": \"awsui_expandable-level-1_c6tup_1j1xu_124\",\n  \"expandable-level-2\": \"awsui_expandable-level-2_c6tup_1j1xu_130\",\n  \"expandable-level-3\": \"awsui_expandable-level-3_c6tup_1j1xu_136\",\n  \"expandable-level-4\": \"awsui_expandable-level-4_c6tup_1j1xu_142\",\n  \"expandable-level-5\": \"awsui_expandable-level-5_c6tup_1j1xu_148\",\n  \"expandable-level-6\": \"awsui_expandable-level-6_c6tup_1j1xu_154\",\n  \"expandable-level-7\": \"awsui_expandable-level-7_c6tup_1j1xu_160\",\n  \"expandable-level-8\": \"awsui_expandable-level-8_c6tup_1j1xu_166\",\n  \"expandable-level-9\": \"awsui_expandable-level-9_c6tup_1j1xu_172\",\n  \"expandable-level-next\": \"awsui_expandable-level-next_c6tup_1j1xu_178\",\n  \"body-cell-wrap\": \"awsui_body-cell-wrap_c6tup_1j1xu_198\",\n  \"is-visual-refresh\": \"awsui_is-visual-refresh_c6tup_1j1xu_212\",\n  \"has-striped-rows\": \"awsui_has-striped-rows_c6tup_1j1xu_224\",\n  \"body-cell-edit-active\": \"awsui_body-cell-edit-active_c6tup_1j1xu_296\",\n  \"body-cell-interactive\": \"awsui_body-cell-interactive_c6tup_1j1xu_296\",\n  \"body-cell-editable\": \"awsui_body-cell-editable_c6tup_1j1xu_296\",\n  \"has-striped-rows-sticky-cell-pad-inline-start\": \"awsui_has-striped-rows-sticky-cell-pad-inline-start_c6tup_1j1xu_440\",\n  \"has-selection\": \"awsui_has-selection_c6tup_1j1xu_512\",\n  \"body-cell-align-top\": \"awsui_body-cell-align-top_c6tup_1j1xu_591\",\n  \"body-cell-first-row\": \"awsui_body-cell-first-row_c6tup_1j1xu_594\",\n  \"body-cell-last-row\": \"awsui_body-cell-last-row_c6tup_1j1xu_597\",\n  \"body-cell-selected\": \"awsui_body-cell-selected_c6tup_1j1xu_597\",\n  \"has-footer\": \"awsui_has-footer_c6tup_1j1xu_597\",\n  \"body-cell-shaded\": \"awsui_body-cell-shaded_c6tup_1j1xu_607\",\n  \"sticky-cell\": \"awsui_sticky-cell_c6tup_1j1xu_635\",\n  \"sticky-cell-pad-left\": \"awsui_sticky-cell-pad-left_c6tup_1j1xu_643\",\n  \"sticky-cell-last-inline-end\": \"awsui_sticky-cell-last-inline-end_c6tup_1j1xu_729\",\n  \"sticky-cell-last-inline-start\": \"awsui_sticky-cell-last-inline-start_c6tup_1j1xu_738\",\n  \"body-cell-next-selected\": \"awsui_body-cell-next-selected_c6tup_1j1xu_771\",\n  \"body-cell-prev-selected\": \"awsui_body-cell-prev-selected_c6tup_1j1xu_777\",\n  \"body-cell-editor-wrapper\": \"awsui_body-cell-editor-wrapper_c6tup_1j1xu_803\",\n  \"body-cell-success\": \"awsui_body-cell-success_c6tup_1j1xu_810\",\n  \"body-cell-editor\": \"awsui_body-cell-editor_c6tup_1j1xu_803\",\n  \"body-cell-editor-disabled\": \"awsui_body-cell-editor-disabled_c6tup_1j1xu_837\",\n  \"body-cell-editor-form\": \"awsui_body-cell-editor-form_c6tup_1j1xu_846\",\n  \"body-cell-editor-row\": \"awsui_body-cell-editor-row_c6tup_1j1xu_856\",\n  \"body-cell-editor-controls\": \"awsui_body-cell-editor-controls_c6tup_1j1xu_866\",\n  \"body-cell-editor-row-editor\": \"awsui_body-cell-editor-row-editor_c6tup_1j1xu_869\",\n  \"body-cell-expandable\": \"awsui_body-cell-expandable_c6tup_1j1xu_872\",\n  \"resizable-columns\": \"awsui_resizable-columns_c6tup_1j1xu_893\",\n  \"expandable-cell-content\": \"awsui_expandable-cell-content_c6tup_1j1xu_896\",\n  \"body-cell-has-success\": \"awsui_body-cell-has-success_c6tup_1j1xu_965\",\n  \"body-cell-edit-disabled-popover\": \"awsui_body-cell-edit-disabled-popover_c6tup_1j1xu_965\"\n};\n  ","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { copyAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport { useSingleTabStopNavigation } from '../../internal/context/single-tab-stop-navigation-context';\nimport { useMergeRefs } from '../../internal/hooks/use-merge-refs';\nimport { ExpandToggleButton } from '../expandable-rows/expand-toggle-button';\nimport { TableProps } from '../interfaces.js';\nimport { StickyColumnsModel, useStickyCellStyles } from '../sticky-columns';\nimport { getTableCellRoleProps, TableRole } from '../table-role';\nimport { getStickyClassNames } from '../utils';\n\nimport styles from './styles.css.js';\n\nexport interface TableTdElementProps {\n  className?: string;\n  style?: React.CSSProperties;\n  wrapLines: boolean | undefined;\n  isRowHeader?: boolean;\n  isFirstRow: boolean;\n  isLastRow: boolean;\n  isSelected: boolean;\n  isNextSelected: boolean;\n  isPrevSelected: boolean;\n  nativeAttributes?: Omit<\n    React.TdHTMLAttributes<HTMLTableCellElement> | React.ThHTMLAttributes<HTMLTableCellElement>,\n    'style' | 'className' | 'onClick'\n  >;\n  onClick?: () => void;\n  onMouseEnter?: () => void;\n  onMouseLeave?: () => void;\n  children?: React.ReactNode;\n  isEvenRow?: boolean;\n  stripedRows?: boolean;\n  hasSelection?: boolean;\n  hasFooter?: boolean;\n  columnId: PropertyKey;\n  colIndex: number;\n  stickyState: StickyColumnsModel;\n  isVisualRefresh?: boolean;\n  tableRole: TableRole;\n  level?: number;\n  isExpandable?: boolean;\n  isExpanded?: boolean;\n  onExpandableItemToggle?: () => void;\n  expandButtonLabel?: string;\n  collapseButtonLabel?: string;\n  verticalAlign?: TableProps.VerticalAlign;\n}\n\nexport const TableTdElement = React.forwardRef<HTMLTableCellElement, TableTdElementProps>(\n  (\n    {\n      className,\n      style,\n      children,\n      wrapLines,\n      isRowHeader,\n      isFirstRow,\n      isLastRow,\n      isSelected,\n      isNextSelected,\n      isPrevSelected,\n      nativeAttributes,\n      onClick,\n      onMouseEnter,\n      onMouseLeave,\n      isEvenRow,\n      stripedRows,\n      isVisualRefresh,\n      hasSelection,\n      hasFooter,\n      columnId,\n      colIndex,\n      stickyState,\n      tableRole,\n      level,\n      isExpandable,\n      isExpanded,\n      onExpandableItemToggle,\n      expandButtonLabel,\n      collapseButtonLabel,\n      verticalAlign,\n      ...rest\n    },\n    ref\n  ) => {\n    const Element = isRowHeader ? 'th' : 'td';\n\n    nativeAttributes = { ...nativeAttributes, ...getTableCellRoleProps({ tableRole, isRowHeader, colIndex }) };\n\n    const stickyStyles = useStickyCellStyles({\n      stickyColumns: stickyState,\n      columnId,\n      getClassName: props => getStickyClassNames(styles, props),\n    });\n\n    const cellRefObject = useRef<HTMLTableCellElement>(null);\n    const mergedRef = useMergeRefs(stickyStyles.ref, ref, cellRefObject);\n    const { tabIndex: cellTabIndex } = useSingleTabStopNavigation(cellRefObject);\n\n    return (\n      <Element\n        style={{ ...style, ...stickyStyles.style }}\n        className={clsx(\n          className,\n          styles['body-cell'],\n          wrapLines && styles['body-cell-wrap'],\n          isFirstRow && styles['body-cell-first-row'],\n          isLastRow && styles['body-cell-last-row'],\n          isSelected && styles['body-cell-selected'],\n          isNextSelected && styles['body-cell-next-selected'],\n          isPrevSelected && styles['body-cell-prev-selected'],\n          !isEvenRow && stripedRows && styles['body-cell-shaded'],\n          stripedRows && styles['has-striped-rows'],\n          isVisualRefresh && styles['is-visual-refresh'],\n          hasSelection && styles['has-selection'],\n          hasFooter && styles['has-footer'],\n          level !== undefined && styles['body-cell-expandable'],\n          level !== undefined && styles[`expandable-level-${getLevelClassSuffix(level)}`],\n          verticalAlign === 'top' && styles['body-cell-align-top'],\n          stickyStyles.className\n        )}\n        onClick={onClick}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n        ref={mergedRef}\n        {...nativeAttributes}\n        tabIndex={cellTabIndex === -1 ? undefined : cellTabIndex}\n        {...copyAnalyticsMetadataAttribute(rest)}\n      >\n        {level !== undefined && isExpandable && (\n          <div className={styles['expandable-toggle-wrapper']}>\n            <ExpandToggleButton\n              isExpanded={isExpanded}\n              onExpandableItemToggle={onExpandableItemToggle}\n              expandButtonLabel={expandButtonLabel}\n              collapseButtonLabel={collapseButtonLabel}\n            />\n          </div>\n        )}\n\n        <div className={styles['body-cell-content']}>{children}</div>\n      </Element>\n    );\n  }\n);\n\nfunction getLevelClassSuffix(level: number) {\n  return 0 <= level && level <= 9 ? level : 'next';\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef, useState } from 'react';\nimport clsx from 'clsx';\n\nimport Icon from '../../icon/internal';\nimport Portal from '../../internal/components/portal';\nimport { useSingleTabStopNavigation } from '../../internal/context/single-tab-stop-navigation-context';\nimport useHiddenDescription from '../../internal/hooks/use-hidden-description';\nimport { usePortalModeClasses } from '../../internal/hooks/use-portal-mode-classes';\nimport Arrow from '../../popover/arrow';\nimport PopoverBody from '../../popover/body';\nimport PopoverContainer from '../../popover/container';\nimport { useClickAway } from './click-away';\nimport { TableBodyCellProps } from './index';\nimport { TableTdElement, TableTdElementProps } from './td-element';\n\nimport styles from './styles.css.js';\n\ninterface DisabledInlineEditorProps<ItemType> extends TableBodyCellProps<ItemType> {\n  editDisabledReason: string;\n}\n\nexport function DisabledInlineEditor<ItemType>({\n  className,\n  item,\n  column,\n  ariaLabels,\n  isEditing,\n  onEditStart,\n  onEditEnd,\n  editDisabledReason,\n  isVisualRefresh,\n  interactiveCell = true,\n  resizableColumns = false,\n  ...rest\n}: DisabledInlineEditorProps<ItemType>) {\n  const clickAwayRef = useClickAway(() => {\n    if (isEditing) {\n      onEditEnd(true);\n    }\n  });\n\n  const [hasHover, setHasHover] = useState(false);\n  const [hasFocus, setHasFocus] = useState(false);\n  // When a cell is both expandable and editable the icon is always shown.\n  const showIcon = hasHover || hasFocus || isEditing || !interactiveCell;\n\n  const iconRef = useRef(null);\n  const buttonRef = useRef<HTMLButtonElement>(null);\n  const portalRef = useRef<HTMLSpanElement>(null);\n\n  function handleEscape(event: React.KeyboardEvent): void {\n    if (event.key === 'Escape') {\n      onEditEnd(true);\n    }\n  }\n\n  const onClick = () => {\n    onEditStart();\n    buttonRef.current?.focus();\n  };\n\n  const { targetProps, descriptionEl } = useHiddenDescription(editDisabledReason);\n  const portalClasses = usePortalModeClasses(portalRef);\n\n  const { tabIndex } = useSingleTabStopNavigation(buttonRef);\n\n  return (\n    <TableTdElement\n      {...rest}\n      nativeAttributes={\n        { 'data-inline-editing-active': isEditing.toString() } as TableTdElementProps['nativeAttributes']\n      }\n      className={clsx(\n        className,\n        styles['body-cell-editable'],\n        interactiveCell && styles['body-cell-interactive'],\n        resizableColumns && styles['resizable-columns'],\n        isEditing && styles['body-cell-edit-disabled-popover'],\n        isVisualRefresh && styles['is-visual-refresh']\n      )}\n      onClick={interactiveCell && !isEditing ? onClick : undefined}\n      onMouseEnter={() => setHasHover(true)}\n      onMouseLeave={() => setHasHover(false)}\n      ref={clickAwayRef}\n    >\n      {column.cell(item)}\n\n      <div className={styles['body-cell-editor-wrapper']}>\n        <button\n          ref={buttonRef}\n          tabIndex={tabIndex}\n          className={clsx(styles['body-cell-editor'], styles['body-cell-editor-disabled'])}\n          aria-label={ariaLabels?.activateEditLabel?.(column, item)}\n          aria-haspopup=\"dialog\"\n          aria-disabled=\"true\"\n          onClick={!interactiveCell && !isEditing ? onClick : undefined}\n          onFocus={() => setHasFocus(true)}\n          onBlur={() => setHasFocus(false)}\n          onKeyDown={handleEscape}\n          {...targetProps}\n        >\n          {showIcon && <Icon name=\"lock-private\" variant=\"normal\" __internalRootRef={iconRef} />}\n          {descriptionEl}\n        </button>\n      </div>\n\n      {isEditing && (\n        <span ref={portalRef}>\n          <Portal>\n            <span className={portalClasses}>\n              <PopoverContainer\n                size=\"medium\"\n                fixedWidth={false}\n                position=\"top\"\n                trackRef={iconRef}\n                arrow={position => <Arrow position={position} />}\n                renderWithPortal={true}\n                zIndex={2000}\n              >\n                <PopoverBody\n                  dismissButton={false}\n                  dismissAriaLabel={undefined}\n                  header={null}\n                  onDismiss={() => {}}\n                  overflowVisible=\"both\"\n                >\n                  <span aria-live=\"polite\">{editDisabledReason}</span>\n                </PopoverBody>\n              </PopoverContainer>\n            </span>\n          </Portal>\n        </span>\n      )}\n    </TableTdElement>\n  );\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef, useState } from 'react';\n\nimport Button from '../../button/internal';\nimport FormField from '../../form-field/internal';\nimport { useInternalI18n } from '../../i18n/context';\nimport FocusLock, { FocusLockRef } from '../../internal/components/focus-lock';\nimport LiveRegion from '../../internal/components/live-region';\nimport { Optional } from '../../internal/types';\nimport SpaceBetween from '../../space-between/internal';\nimport { TableProps } from '../interfaces';\nimport { useClickAway } from './click-away';\n\nimport styles from './styles.css.js';\n\n// A function that does nothing\nconst noop = () => undefined;\n\ninterface OnEditEndOptions {\n  cancelled: boolean;\n  refocusCell: boolean;\n}\n\ninterface InlineEditorProps<ItemType> {\n  ariaLabels: TableProps['ariaLabels'];\n  column: TableProps.ColumnDefinition<ItemType>;\n  item: ItemType;\n  onEditEnd: (options: OnEditEndOptions) => void;\n  submitEdit: TableProps.SubmitEditFunction<ItemType>;\n  __onRender?: () => void;\n}\n\nexport function InlineEditor<ItemType>({\n  ariaLabels,\n  item,\n  column,\n  onEditEnd,\n  submitEdit,\n  __onRender,\n}: InlineEditorProps<ItemType>) {\n  const [currentEditLoading, setCurrentEditLoading] = useState(false);\n  const [currentEditValue, setCurrentEditValue] = useState<Optional<any>>();\n  const i18n = useInternalI18n('table');\n\n  const focusLockRef = useRef<FocusLockRef>(null);\n\n  const cellContext = {\n    currentValue: currentEditValue,\n    setValue: setCurrentEditValue,\n  };\n\n  function finishEdit({ cancelled = false, refocusCell = true }: Partial<OnEditEndOptions> = {}) {\n    if (!cancelled) {\n      setCurrentEditValue(undefined);\n    }\n    onEditEnd({ cancelled, refocusCell: refocusCell });\n  }\n\n  async function onSubmitClick(evt: React.FormEvent) {\n    evt.preventDefault();\n    if (currentEditValue === undefined) {\n      finishEdit();\n      return;\n    }\n\n    setCurrentEditLoading(true);\n    try {\n      await submitEdit(item, column, currentEditValue);\n      setCurrentEditLoading(false);\n      finishEdit();\n    } catch (e) {\n      setCurrentEditLoading(false);\n      focusLockRef.current?.focusFirst();\n    }\n  }\n\n  function onCancel({ reFocusEditedCell = true } = {}) {\n    if (currentEditLoading) {\n      return;\n    }\n    finishEdit({ cancelled: true, refocusCell: reFocusEditedCell });\n  }\n\n  function handleEscape(event: React.KeyboardEvent): void {\n    if (event.key === 'Escape') {\n      onCancel();\n    }\n  }\n\n  const clickAwayRef = useClickAway(() => onCancel({ reFocusEditedCell: false }));\n\n  useEffect(() => {\n    if (__onRender) {\n      const timer = setTimeout(__onRender, 1);\n      return () => clearTimeout(timer);\n    }\n  }, [__onRender]);\n\n  // asserting non-undefined editConfig here because this component is unreachable otherwise\n  const {\n    ariaLabel = undefined,\n    validation = noop,\n    errorIconAriaLabel,\n    constraintText,\n    editingCell,\n  } = column.editConfig!;\n\n  return (\n    <FocusLock restoreFocus={true} ref={focusLockRef}>\n      <div\n        role=\"dialog\"\n        ref={clickAwayRef}\n        aria-label={ariaLabels?.activateEditLabel?.(column, item)}\n        onKeyDown={handleEscape}\n      >\n        <form onSubmit={onSubmitClick} className={styles['body-cell-editor-form']}>\n          <FormField\n            stretch={true}\n            label={ariaLabel}\n            constraintText={constraintText}\n            __hideLabel={true}\n            __disableGutters={true}\n            i18nStrings={{ errorIconAriaLabel }}\n            errorText={validation(item, currentEditValue)}\n          >\n            <div className={styles['body-cell-editor-row']}>\n              <div className={styles['body-cell-editor-row-editor']}>{editingCell(item, cellContext)}</div>\n              <span className={styles['body-cell-editor-controls']}>\n                <SpaceBetween direction=\"horizontal\" size=\"xxs\">\n                  {!currentEditLoading ? (\n                    <Button\n                      ariaLabel={ariaLabels?.cancelEditLabel?.(column)}\n                      formAction=\"none\"\n                      iconName=\"close\"\n                      variant=\"inline-icon\"\n                      onClick={() => onCancel()}\n                    />\n                  ) : null}\n                  <Button\n                    ariaLabel={ariaLabels?.submitEditLabel?.(column)}\n                    formAction=\"submit\"\n                    iconName=\"check\"\n                    variant=\"inline-icon\"\n                    loading={currentEditLoading}\n                  />\n                </SpaceBetween>\n                <LiveRegion>\n                  {currentEditLoading\n                    ? i18n('ariaLabels.submittingEditText', ariaLabels?.submittingEditText?.(column))\n                    : ''}\n                </LiveRegion>\n              </span>\n            </div>\n          </FormField>\n        </form>\n      </div>\n    </FocusLock>\n  );\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { useInternalI18n } from '../../i18n/context';\nimport Icon from '../../icon/internal';\nimport LiveRegion from '../../internal/components/live-region/index.js';\nimport { useSingleTabStopNavigation } from '../../internal/context/single-tab-stop-navigation-context.js';\nimport { usePrevious } from '../../internal/hooks/use-previous';\nimport { TableProps } from '../interfaces';\nimport { DisabledInlineEditor } from './disabled-inline-editor';\nimport { InlineEditor } from './inline-editor';\nimport { TableTdElement, TableTdElementProps } from './td-element';\n\nimport styles from './styles.css.js';\n\nconst submitHandlerFallback = () => {\n  throw new Error('The function `handleSubmit` is required for editable columns');\n};\n\nexport interface TableBodyCellProps<ItemType> extends TableTdElementProps {\n  column: TableProps.ColumnDefinition<ItemType>;\n  item: ItemType;\n  isEditing: boolean;\n  resizableColumns?: boolean;\n  successfulEdit?: boolean;\n  onEditStart: () => void;\n  onEditEnd: (cancelled: boolean) => void;\n  submitEdit?: TableProps.SubmitEditFunction<ItemType>;\n  ariaLabels: TableProps['ariaLabels'];\n  interactiveCell?: boolean;\n}\n\nfunction TableCellEditable<ItemType>({\n  className,\n  item,\n  column,\n  isEditing,\n  onEditStart,\n  onEditEnd,\n  submitEdit,\n  ariaLabels,\n  isVisualRefresh,\n  resizableColumns = false,\n  successfulEdit = false,\n  interactiveCell = true,\n  ...rest\n}: TableBodyCellProps<ItemType>) {\n  const i18n = useInternalI18n('table');\n  const editActivateRef = useRef<HTMLButtonElement>(null);\n  const tdNativeAttributes = {\n    'data-inline-editing-active': isEditing.toString(),\n  };\n  const isFocusMoveNeededRef = useRef(false);\n\n  useEffect(() => {\n    if (!isEditing && editActivateRef.current && isFocusMoveNeededRef.current) {\n      isFocusMoveNeededRef.current = false;\n      editActivateRef.current.focus();\n    }\n  }, [isEditing]);\n  // To improve the initial page render performance we only show the edit icon when necessary.\n  const [hasHover, setHasHover] = useState(false);\n  const [hasFocus, setHasFocus] = useState(false);\n  // When a cell is both expandable and editable the icon is always shown.\n  const showIcon = hasHover || hasFocus || !interactiveCell;\n\n  const prevSuccessfulEdit = usePrevious(successfulEdit);\n  const prevHasFocus = usePrevious(hasFocus);\n  const [showSuccessIcon, setShowSuccessIcon] = useState(false);\n\n  useEffect(() => {\n    // Hide the success icon after a successful edit, when cell loses focus.\n    if (successfulEdit && prevSuccessfulEdit && !hasFocus && prevHasFocus) {\n      setShowSuccessIcon(false);\n    }\n    // Show success icon right after a successful edit, when `successfulEdit` switches to true.\n    if (successfulEdit && !prevSuccessfulEdit) {\n      setShowSuccessIcon(true);\n    }\n  }, [hasFocus, successfulEdit, prevHasFocus, prevSuccessfulEdit]);\n\n  const { tabIndex: editActivateTabIndex } = useSingleTabStopNavigation(editActivateRef);\n\n  return (\n    <TableTdElement\n      {...rest}\n      nativeAttributes={tdNativeAttributes as TableTdElementProps['nativeAttributes']}\n      className={clsx(\n        className,\n        styles['body-cell-editable'],\n        interactiveCell && styles['body-cell-interactive'],\n        resizableColumns && styles['resizable-columns'],\n        isEditing && styles['body-cell-edit-active'],\n        showSuccessIcon && showIcon && styles['body-cell-has-success'],\n        isVisualRefresh && styles['is-visual-refresh']\n      )}\n      onClick={interactiveCell && !isEditing ? onEditStart : undefined}\n      onMouseEnter={() => setHasHover(true)}\n      onMouseLeave={() => setHasHover(false)}\n    >\n      {isEditing ? (\n        <InlineEditor\n          ariaLabels={ariaLabels}\n          column={column}\n          item={item}\n          onEditEnd={options => {\n            setShowSuccessIcon(false);\n            isFocusMoveNeededRef.current = options.refocusCell;\n            onEditEnd(options.cancelled);\n          }}\n          submitEdit={submitEdit ?? submitHandlerFallback}\n        />\n      ) : (\n        <>\n          {column.cell(item)}\n\n          {showSuccessIcon && showIcon && (\n            <>\n              <span\n                className={styles['body-cell-success']}\n                aria-label={ariaLabels?.successfulEditLabel?.(column)}\n                role=\"img\"\n                onMouseDown={e => {\n                  // Prevent the editor's Button blur event to be fired when clicking the success icon.\n                  // This prevents unfocusing the button and triggers the `TableTdElement` onClick event which initiates the edit mode.\n                  e.preventDefault();\n                }}\n              >\n                <Icon name=\"status-positive\" variant=\"success\" />\n              </span>\n              <LiveRegion>\n                {i18n('ariaLabels.successfulEditLabel', ariaLabels?.successfulEditLabel?.(column))}\n              </LiveRegion>\n            </>\n          )}\n\n          <div className={styles['body-cell-editor-wrapper']}>\n            <button\n              className={styles['body-cell-editor']}\n              aria-label={ariaLabels?.activateEditLabel?.(column, item)}\n              ref={editActivateRef}\n              onClick={!interactiveCell && !isEditing ? onEditStart : undefined}\n              onFocus={() => setHasFocus(true)}\n              onBlur={() => setHasFocus(false)}\n              tabIndex={editActivateTabIndex}\n            >\n              {showIcon && <Icon name=\"edit\" />}\n            </button>\n          </div>\n        </>\n      )}\n    </TableTdElement>\n  );\n}\n\nexport function TableBodyCell<ItemType>({\n  isEditable,\n  ...rest\n}: TableBodyCellProps<ItemType> & { isEditable: boolean }) {\n  const isExpandableColumnCell = rest.level !== undefined;\n  const editDisabledReason = rest.column.editConfig?.disabledReason?.(rest.item);\n\n  // Inline editing is deactivated for expandable column because editable cells are interactive\n  // and cannot include interactive content such as expand toggles.\n  if (editDisabledReason && !isExpandableColumnCell) {\n    return <DisabledInlineEditor editDisabledReason={editDisabledReason} {...rest} />;\n  }\n  if ((isEditable || rest.isEditing) && !isExpandableColumnCell) {\n    return <TableCellEditable {...rest} />;\n  }\n\n  const { column, item } = rest;\n  return <TableTdElement {...rest}>{column.cell(item)}</TableTdElement>;\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\n\nimport { TableProps } from './interfaces';\n\nexport function checkColumnWidths(columnDefinitions: ReadonlyArray<TableProps.ColumnDefinition<any>>) {\n  for (const column of columnDefinitions) {\n    checkProperty(column, 'minWidth');\n    checkProperty(column, 'width');\n  }\n}\n\nexport function setElementWidths(element: HTMLElement, styles: React.CSSProperties) {\n  function setProperty(property: 'width' | 'minWidth' | 'maxWidth') {\n    const value = styles[property];\n    let widthCssValue = '';\n    if (typeof value === 'number') {\n      widthCssValue = value + 'px';\n    }\n    if (typeof value === 'string') {\n      widthCssValue = value;\n    }\n    if (element.style[property] !== widthCssValue) {\n      element.style[property] = widthCssValue;\n    }\n  }\n  setProperty('width');\n  setProperty('minWidth');\n  setProperty('maxWidth');\n}\n\nfunction checkProperty(column: TableProps.ColumnDefinition<any>, name: 'width' | 'minWidth') {\n  const value = column[name];\n  if (typeof value !== 'number' && typeof value !== 'undefined') {\n    warnOnce(\n      'Table',\n      `resizableColumns feature requires ${name} property to be a number, got ${value}. The component may work incorrectly.`\n    );\n  }\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { TableProps } from '../interfaces';\nimport { getTrackableValue } from '../utils';\n\nexport const SELECTION_ITEM = 'selection-item';\nexport const SELECTION_ROOT = 'selection-root';\n\n// A set, that compares items by their \"trackables\" (the results of applying `trackBy` to them)\nexport class ItemSet<T> {\n  constructor(trackBy: TableProps.TrackBy<T> | undefined, items: ReadonlyArray<T>) {\n    this.trackBy = trackBy;\n    items.forEach(this.put);\n  }\n  private trackBy: TableProps.TrackBy<T> | undefined;\n  private map: Map<unknown, T> = new Map();\n  put = (item: T) => this.map.set.call(this.map, getTrackableValue(this.trackBy, item), item);\n  has = (item: T) => this.map.has.call(this.map, getTrackableValue(this.trackBy, item));\n  forEach = this.map.forEach.bind(this.map);\n}\n\nexport const focusMarkers = {\n  item: { ['data-' + SELECTION_ITEM]: 'item' },\n  all: { ['data-' + SELECTION_ITEM]: 'all' },\n  root: { ['data-' + SELECTION_ROOT]: 'true' },\n};\n","\n    import './styles.scoped.css';\n    export default {\n  \"root\": \"awsui_root_wih1l_rg19l_101\",\n  \"tools\": \"awsui_tools_wih1l_rg19l_112\",\n  \"tools-filtering\": \"awsui_tools-filtering_wih1l_rg19l_120\",\n  \"tools-align-right\": \"awsui_tools-align-right_wih1l_rg19l_134\",\n  \"tools-pagination\": \"awsui_tools-pagination_wih1l_rg19l_138\",\n  \"tools-preferences\": \"awsui_tools-preferences_wih1l_rg19l_138\",\n  \"tools-small\": \"awsui_tools-small_wih1l_rg19l_144\",\n  \"table\": \"awsui_table_wih1l_rg19l_150\",\n  \"table-layout-fixed\": \"awsui_table-layout-fixed_wih1l_rg19l_156\",\n  \"wrapper\": \"awsui_wrapper_wih1l_rg19l_160\",\n  \"variant-stacked\": \"awsui_variant-stacked_wih1l_rg19l_167\",\n  \"wrapper-content-measure\": \"awsui_wrapper-content-measure_wih1l_rg19l_167\",\n  \"variant-container\": \"awsui_variant-container_wih1l_rg19l_167\",\n  \"has-footer\": \"awsui_has-footer_wih1l_rg19l_170\",\n  \"has-header\": \"awsui_has-header_wih1l_rg19l_173\",\n  \"cell-merged\": \"awsui_cell-merged_wih1l_rg19l_190\",\n  \"cell-merged-content\": \"awsui_cell-merged-content_wih1l_rg19l_202\",\n  \"empty\": \"awsui_empty_wih1l_rg19l_218\",\n  \"loading\": \"awsui_loading_wih1l_rg19l_222\",\n  \"selection-control\": \"awsui_selection-control_wih1l_rg19l_231\",\n  \"selection-control-header\": \"awsui_selection-control-header_wih1l_rg19l_238\",\n  \"header-secondary\": \"awsui_header-secondary_wih1l_rg19l_244\",\n  \"variant-full-page\": \"awsui_variant-full-page_wih1l_rg19l_256\",\n  \"table-has-header\": \"awsui_table-has-header_wih1l_rg19l_265\",\n  \"header-controls\": \"awsui_header-controls_wih1l_rg19l_269\",\n  \"variant-embedded\": \"awsui_variant-embedded_wih1l_rg19l_278\",\n  \"variant-borderless\": \"awsui_variant-borderless_wih1l_rg19l_278\",\n  \"footer-wrapper\": \"awsui_footer-wrapper_wih1l_rg19l_283\",\n  \"footer\": \"awsui_footer_wih1l_rg19l_283\",\n  \"footer-with-pagination\": \"awsui_footer-with-pagination_wih1l_rg19l_291\",\n  \"footer-pagination\": \"awsui_footer-pagination_wih1l_rg19l_299\",\n  \"thead-active\": \"awsui_thead-active_wih1l_rg19l_303\",\n  \"row\": \"awsui_row_wih1l_rg19l_304\",\n  \"row-selected\": \"awsui_row-selected_wih1l_rg19l_305\"\n};\n  ","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { useResizeObserver } from '@cloudscape-design/component-toolkit/internal';\n\nimport LiveRegion from '../internal/components/live-region';\nimport InternalStatusIndicator from '../status-indicator/internal';\n\nimport styles from './styles.css.js';\n\ninterface NoDataCellProps {\n  totalColumnsCount: number;\n  hasFooter: boolean;\n  loading?: boolean;\n  loadingText?: string;\n  empty?: React.ReactNode;\n  tableRef: React.RefObject<HTMLTableElement>;\n  containerRef: React.RefObject<HTMLElement>;\n}\n\nexport function NoDataCell({\n  totalColumnsCount,\n  hasFooter,\n  loading,\n  loadingText,\n  empty,\n  tableRef,\n  containerRef,\n}: NoDataCellProps) {\n  const cellContentRef = useRef<HTMLDivElement>(null);\n\n  useResizeObserver(containerRef, ({ contentBoxWidth: containerInlineSize }) => {\n    if (tableRef.current && cellContentRef.current) {\n      const tablePaddingInlineStart = parseFloat(getComputedStyle(tableRef.current).paddingInlineStart) || 0;\n      const tablePaddingInlineEnd = parseFloat(getComputedStyle(tableRef.current).paddingInlineEnd) || 0;\n      const inlineSize = containerInlineSize + tablePaddingInlineStart + tablePaddingInlineEnd;\n      cellContentRef.current.style.inlineSize = Math.floor(inlineSize) + 'px';\n    }\n  });\n\n  return (\n    <td colSpan={totalColumnsCount} className={clsx(styles['cell-merged'], hasFooter && styles['has-footer'])}>\n      <div ref={cellContentRef} className={styles['cell-merged-content']} data-awsui-table-suppress-navigation={true}>\n        {loading ? (\n          <InternalStatusIndicator type=\"loading\" className={styles.loading} wrapText={true}>\n            <LiveRegion visible={true}>{loadingText}</LiveRegion>\n          </InternalStatusIndicator>\n        ) : (\n          <div className={styles.empty}>{empty}</div>\n        )}\n      </div>\n    </td>\n  );\n}\n","\n    import './styles.scoped.css';\n    export default {\n  \"items-loader\": \"awsui_items-loader_115pt_16l07_5\"\n};\n  ","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\n\nimport LiveRegion from '../../internal/components/live-region';\nimport { TableProps } from '../interfaces';\nimport { applyTrackBy } from '../utils';\n\nimport styles from './styles.css.js';\n\ninterface ItemsLoaderProps<T> {\n  item: null | T;\n  loadingStatus: TableProps.LoadingStatus;\n  renderLoaderPending?: (detail: TableProps.RenderLoaderDetail<T>) => React.ReactNode;\n  renderLoaderLoading?: (detail: TableProps.RenderLoaderDetail<T>) => React.ReactNode;\n  renderLoaderError?: (detail: TableProps.RenderLoaderDetail<T>) => React.ReactNode;\n  trackBy?: TableProps.TrackBy<T>;\n}\n\nexport function ItemsLoader<T>({\n  item,\n  loadingStatus,\n  renderLoaderPending,\n  renderLoaderLoading,\n  renderLoaderError,\n  trackBy,\n}: ItemsLoaderProps<T>) {\n  let content: React.ReactNode = null;\n  if (loadingStatus === 'pending' && renderLoaderPending) {\n    content = renderLoaderPending({ item });\n  } else if (loadingStatus === 'loading' && renderLoaderLoading) {\n    content = <LiveRegion visible={true}>{renderLoaderLoading({ item })}</LiveRegion>;\n  } else if (loadingStatus === 'error' && renderLoaderError) {\n    content = <LiveRegion visible={true}>{renderLoaderError({ item })}</LiveRegion>;\n  } else {\n    warnOnce(\n      'Table',\n      'Must define `renderLoaderPending`, `renderLoaderLoading`, or `renderLoaderError` when using corresponding loading status.'\n    );\n  }\n\n  let parentTrackId = item && trackBy ? applyTrackBy(trackBy, item) : undefined;\n  parentTrackId = typeof parentTrackId === 'string' ? parentTrackId : undefined;\n  return (\n    <div data-root={item ? 'false' : 'true'} data-parentrow={parentTrackId} className={styles['items-loader']}>\n      {content}\n    </div>\n  );\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { createContext, useContext, useEffect, useRef, useState } from 'react';\n\nimport { useResizeObserver, useStableCallback } from '@cloudscape-design/component-toolkit/internal';\nimport { getLogicalBoundingClientRect } from '@cloudscape-design/component-toolkit/internal';\n\nimport { setElementWidths } from './column-widths-utils';\n\nexport const DEFAULT_COLUMN_WIDTH = 120;\n\nexport interface ColumnWidthDefinition {\n  id: PropertyKey;\n  minWidth?: string | number;\n  maxWidth?: string | number;\n  width?: string | number;\n}\n\nfunction readWidths(\n  getCell: (columnId: PropertyKey) => null | HTMLElement,\n  visibleColumns: readonly ColumnWidthDefinition[]\n) {\n  const result = new Map<PropertyKey, number>();\n  for (let index = 0; index < visibleColumns.length; index++) {\n    const column = visibleColumns[index];\n    let width = (column.width as number) || 0;\n    const minWidth = (column.minWidth as number) || width || DEFAULT_COLUMN_WIDTH;\n    if (\n      !width && // read width from the DOM if it is missing in the config\n      index !== visibleColumns.length - 1 // skip reading for the last column, because it expands to fully fit the container\n    ) {\n      const colEl = getCell(column.id);\n      width = colEl ? getLogicalBoundingClientRect(colEl).inlineSize : DEFAULT_COLUMN_WIDTH;\n    }\n    result.set(column.id, Math.max(width, minWidth));\n  }\n  return result;\n}\n\nfunction updateWidths(\n  visibleColumns: readonly ColumnWidthDefinition[],\n  oldWidths: Map<PropertyKey, number>,\n  newWidth: number,\n  columnId: PropertyKey\n) {\n  const column = visibleColumns.find(column => column.id === columnId);\n  const minWidth = typeof column?.minWidth === 'number' ? column.minWidth : DEFAULT_COLUMN_WIDTH;\n  newWidth = Math.max(newWidth, minWidth);\n  if (oldWidths.get(columnId) === newWidth) {\n    return oldWidths;\n  }\n  const newWidths = new Map(oldWidths);\n  newWidths.set(columnId, newWidth);\n  return newWidths;\n}\n\ninterface WidthsContext {\n  getColumnStyles(sticky: boolean, columnId: PropertyKey): React.CSSProperties;\n  columnWidths: Map<PropertyKey, number>;\n  updateColumn: (columnId: PropertyKey, newWidth: number) => void;\n  setCell: (sticky: boolean, columnId: PropertyKey, node: null | HTMLElement) => void;\n}\n\nconst WidthsContext = createContext<WidthsContext>({\n  getColumnStyles: () => ({}),\n  columnWidths: new Map(),\n  updateColumn: () => {},\n  setCell: () => {},\n});\n\ninterface WidthProviderProps {\n  visibleColumns: readonly ColumnWidthDefinition[];\n  resizableColumns: boolean | undefined;\n  containerRef: React.RefObject<HTMLElement>;\n  children: React.ReactNode;\n}\n\nexport function ColumnWidthsProvider({ visibleColumns, resizableColumns, containerRef, children }: WidthProviderProps) {\n  const visibleColumnsRef = useRef<PropertyKey[] | null>(null);\n  const containerWidthRef = useRef(0);\n  const [columnWidths, setColumnWidths] = useState<null | Map<PropertyKey, number>>(null);\n\n  const cellsRef = useRef(new Map<PropertyKey, HTMLElement>());\n  const stickyCellsRef = useRef(new Map<PropertyKey, HTMLElement>());\n  const getCell = (columnId: PropertyKey): null | HTMLElement => cellsRef.current.get(columnId) ?? null;\n  const setCell = (sticky: boolean, columnId: PropertyKey, node: null | HTMLElement) => {\n    const ref = sticky ? stickyCellsRef : cellsRef;\n    if (node) {\n      ref.current.set(columnId, node);\n    } else {\n      ref.current.delete(columnId);\n    }\n  };\n\n  const getColumnStyles = (sticky: boolean, columnId: PropertyKey): React.CSSProperties => {\n    const column = visibleColumns.find(column => column.id === columnId);\n    if (!column) {\n      return {};\n    }\n\n    if (sticky) {\n      return { width: cellsRef.current.get(column.id)?.offsetWidth || (columnWidths?.get(column.id) ?? column.width) };\n    }\n\n    if (resizableColumns && columnWidths) {\n      const isLastColumn = column.id === visibleColumns[visibleColumns.length - 1]?.id;\n      const totalWidth = visibleColumns.reduce(\n        (sum, { id }) => sum + (columnWidths.get(id) || DEFAULT_COLUMN_WIDTH),\n        0\n      );\n      if (isLastColumn && containerWidthRef.current > totalWidth) {\n        return { width: 'auto', minWidth: column?.minWidth };\n      } else {\n        return { width: columnWidths.get(column.id), minWidth: column?.minWidth };\n      }\n    }\n    return {\n      width: column.width,\n      minWidth: column.minWidth,\n      maxWidth: !resizableColumns ? column.maxWidth : undefined,\n    };\n  };\n\n  // Imperatively sets width style for a cell avoiding React state.\n  // This allows setting the style as soon container's size change is observed.\n  const updateColumnWidths = useStableCallback(() => {\n    for (const { id } of visibleColumns) {\n      const element = cellsRef.current.get(id);\n      if (element) {\n        setElementWidths(element, getColumnStyles(false, id));\n      }\n    }\n    // Sticky column widths must be synchronized once all real column widths are assigned.\n    for (const { id } of visibleColumns) {\n      const element = stickyCellsRef.current.get(id);\n      if (element) {\n        setElementWidths(element, getColumnStyles(true, id));\n      }\n    }\n  });\n\n  // Observes container size and requests an update to the last cell width as it depends on the container's width.\n  useResizeObserver(containerRef, ({ contentBoxWidth: containerWidth }) => {\n    containerWidthRef.current = containerWidth;\n    updateColumnWidths();\n  });\n\n  // The widths of the dynamically added columns (after the first render) if not set explicitly\n  // will default to the DEFAULT_COLUMN_WIDTH.\n  useEffect(() => {\n    updateColumnWidths();\n\n    if (!resizableColumns) {\n      return;\n    }\n    let updated = false;\n    const newColumnWidths = new Map(columnWidths);\n    const lastVisible = visibleColumnsRef.current;\n    if (lastVisible) {\n      for (let index = 0; index < visibleColumns.length; index++) {\n        const column = visibleColumns[index];\n        if (!columnWidths?.get(column.id) && lastVisible.indexOf(column.id) === -1) {\n          updated = true;\n          newColumnWidths.set(column.id, (column.width as number) || DEFAULT_COLUMN_WIDTH);\n        }\n      }\n      if (updated) {\n        setColumnWidths(newColumnWidths);\n      }\n    }\n    visibleColumnsRef.current = visibleColumns.map(column => column.id);\n  }, [columnWidths, resizableColumns, visibleColumns, updateColumnWidths]);\n\n  // Read the actual column widths after the first render to employ the browser defaults for\n  // those columns without explicit width.\n  useEffect(() => {\n    if (!resizableColumns) {\n      return;\n    }\n    setColumnWidths(() => readWidths(getCell, visibleColumns));\n    // This code is intended to run only at the first render and should not re-run when table props change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  function updateColumn(columnId: PropertyKey, newWidth: number) {\n    setColumnWidths(columnWidths => updateWidths(visibleColumns, columnWidths ?? new Map(), newWidth, columnId));\n  }\n\n  return (\n    <WidthsContext.Provider value={{ getColumnStyles, columnWidths: columnWidths ?? new Map(), updateColumn, setCell }}>\n      {children}\n    </WidthsContext.Provider>\n  );\n}\n\nexport function useColumnWidths() {\n  return useContext(WidthsContext);\n}\n","\n    import './styles.scoped.css';\n    export default {\n  \"resize-active\": \"awsui_resize-active_x7peu_179a9_97\",\n  \"resize-active-with-focus\": \"awsui_resize-active-with-focus_x7peu_179a9_97\",\n  \"divider\": \"awsui_divider_x7peu_179a9_102\",\n  \"divider-disabled\": \"awsui_divider-disabled_x7peu_179a9_116\",\n  \"divider-active\": \"awsui_divider-active_x7peu_179a9_119\",\n  \"resizer\": \"awsui_resizer_x7peu_179a9_123\",\n  \"has-focus\": \"awsui_has-focus_x7peu_179a9_180\",\n  \"tracker\": \"awsui_tracker_x7peu_179a9_203\"\n};\n  ","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { findUpUntil } from '@cloudscape-design/component-toolkit/dom';\nimport { getLogicalBoundingClientRect } from '@cloudscape-design/component-toolkit/internal';\n\nimport { getOverflowParents } from '../../internal/utils/scrollable-containers.js';\n\nimport tableStyles from '../styles.css.js';\nimport resizerStyles from './styles.css.js';\n\nexport function getResizerElements(resizerElement: null | HTMLElement) {\n  if (!resizerElement) {\n    return null;\n  }\n\n  const header = findUpUntil(resizerElement, element => element.tagName.toLowerCase() === 'th');\n  if (!header) {\n    return null;\n  }\n\n  const tableRoot = findUpUntil(header, element => element.className.indexOf(tableStyles.root) > -1);\n  if (!tableRoot) {\n    return null;\n  }\n\n  const table = tableRoot.querySelector<HTMLElement>(`table`);\n  if (!table) {\n    return null;\n  }\n\n  // tracker is rendered inside table wrapper to align with its size\n  const tracker = tableRoot.querySelector<HTMLElement>(`.${resizerStyles.tracker}`);\n  if (!tracker) {\n    return null;\n  }\n\n  const scrollParent = getOverflowParents(header)[0];\n  if (!scrollParent) {\n    return null;\n  }\n\n  return { header, table, tracker, scrollParent };\n}\n\nexport function getHeaderWidth(resizerElement: null | HTMLElement): number {\n  const header = resizerElement && findUpUntil(resizerElement, element => element.tagName.toLowerCase() === 'th');\n  return header ? getLogicalBoundingClientRect(header).inlineSize : 0;\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { useStableCallback } from '@cloudscape-design/component-toolkit/internal';\nimport { getIsRtl, getLogicalBoundingClientRect, getLogicalPageX } from '@cloudscape-design/component-toolkit/internal';\n\nimport { useSingleTabStopNavigation } from '../../internal/context/single-tab-stop-navigation-context.js';\nimport { useUniqueId } from '../../internal/hooks/use-unique-id';\nimport { KeyCode } from '../../internal/keycode';\nimport handleKey, { isEventLike } from '../../internal/utils/handle-key';\nimport { DEFAULT_COLUMN_WIDTH } from '../use-column-widths';\nimport { getHeaderWidth, getResizerElements } from './resizer-lookup';\n\nimport styles from './styles.css.js';\n\ninterface ResizerProps {\n  onWidthUpdate: (newWidth: number) => void;\n  onWidthUpdateCommit: () => void;\n  ariaLabelledby?: string;\n  minWidth?: number;\n  tabIndex?: number;\n  focusId?: string;\n  showFocusRing?: boolean;\n  roleDescription?: string;\n}\n\nconst AUTO_GROW_START_TIME = 10;\nconst AUTO_GROW_INTERVAL = 10;\nconst AUTO_GROW_INCREMENT = 5;\n\nexport function Divider({ className }: { className?: string }) {\n  return <span className={clsx(styles.divider, styles['divider-disabled'], className)} />;\n}\n\nexport function Resizer({\n  onWidthUpdate,\n  onWidthUpdateCommit,\n  ariaLabelledby,\n  minWidth = DEFAULT_COLUMN_WIDTH,\n  tabIndex,\n  showFocusRing,\n  focusId,\n  roleDescription,\n}: ResizerProps) {\n  onWidthUpdate = useStableCallback(onWidthUpdate);\n  onWidthUpdateCommit = useStableCallback(onWidthUpdateCommit);\n\n  const separatorId = useUniqueId();\n  const resizerToggleRef = useRef<HTMLButtonElement>(null);\n  const resizerSeparatorRef = useRef<HTMLSpanElement>(null);\n\n  const [isDragging, setIsDragging] = useState(false);\n  const [isKeyboardDragging, setIsKeyboardDragging] = useState(false);\n  const autoGrowTimeout = useRef<ReturnType<typeof setTimeout> | undefined>();\n  const [resizerHasFocus, setResizerHasFocus] = useState(false);\n  const [headerCellWidth, setHeaderCellWidth] = useState(0);\n\n  // Read header width after mounting for it to be available in the element's ARIA label before it gets focused.\n  useEffect(() => {\n    setHeaderCellWidth(getHeaderWidth(resizerToggleRef.current));\n  }, []);\n\n  useEffect(() => {\n    const elements = getResizerElements(resizerToggleRef.current);\n    if ((!isDragging && !resizerHasFocus) || !elements) {\n      return;\n    }\n\n    const { insetInlineStart: inlineStartEdge, insetInlineEnd: inlineEndEdge } = getLogicalBoundingClientRect(\n      elements.scrollParent\n    );\n\n    const updateTrackerPosition = (newOffset: number) => {\n      const { insetInlineStart: scrollParentInsetInlineStart } = getLogicalBoundingClientRect(elements.table);\n      elements.tracker.style.insetBlockStart = getLogicalBoundingClientRect(elements.header).blockSize + 'px';\n      // minus one pixel to offset the cell border\n      elements.tracker.style.insetInlineStart = newOffset - scrollParentInsetInlineStart - 1 + 'px';\n    };\n\n    const updateColumnWidth = (newWidth: number) => {\n      const { insetInlineEnd, inlineSize } = getLogicalBoundingClientRect(elements.header);\n      const updatedWidth = newWidth < minWidth ? minWidth : newWidth;\n      updateTrackerPosition(insetInlineEnd + updatedWidth - inlineSize);\n      if (newWidth >= minWidth) {\n        setHeaderCellWidth(newWidth);\n      }\n      // callbacks must be the last calls in the handler, because they may cause an extra update\n      onWidthUpdate(newWidth);\n    };\n\n    const resizeColumn = (offset: number) => {\n      if (offset > inlineStartEdge) {\n        const cellLeft = getLogicalBoundingClientRect(elements.header).insetInlineStart;\n        const newWidth = offset - cellLeft;\n        // callbacks must be the last calls in the handler, because they may cause an extra update\n        updateColumnWidth(newWidth);\n      }\n    };\n\n    const onAutoGrow = () => {\n      const inlineSize = getLogicalBoundingClientRect(elements.header).inlineSize;\n      autoGrowTimeout.current = setTimeout(onAutoGrow, AUTO_GROW_INTERVAL);\n      // callbacks must be the last calls in the handler, because they may cause an extra update\n      updateColumnWidth(inlineSize + AUTO_GROW_INCREMENT);\n      elements.scrollParent.scrollLeft += AUTO_GROW_INCREMENT * (getIsRtl(elements.scrollParent) ? -1 : 1);\n    };\n\n    const onMouseMove = (event: MouseEvent) => {\n      clearTimeout(autoGrowTimeout.current);\n      const offset = getLogicalPageX(event);\n      if (offset > inlineEndEdge) {\n        autoGrowTimeout.current = setTimeout(onAutoGrow, AUTO_GROW_START_TIME);\n      } else {\n        resizeColumn(offset);\n      }\n    };\n\n    const onMouseUp = (event: MouseEvent) => {\n      resizeColumn(getLogicalPageX(event));\n      setIsDragging(false);\n      onWidthUpdateCommit();\n      clearTimeout(autoGrowTimeout.current);\n    };\n\n    const onKeyDown = (event: KeyboardEvent) => {\n      if (isKeyboardDragging) {\n        const keys = [KeyCode.left, KeyCode.right, KeyCode.enter, KeyCode.right, KeyCode.space, KeyCode.escape];\n\n        if (keys.indexOf(event.keyCode) !== -1) {\n          event.preventDefault();\n\n          isEventLike(event) &&\n            handleKey(event, {\n              onActivate: () => {\n                setIsKeyboardDragging(false);\n                resizerToggleRef.current?.focus();\n              },\n              onEscape: () => {\n                setIsKeyboardDragging(false);\n                resizerToggleRef.current?.focus();\n              },\n              onInlineStart: () => updateColumnWidth(getLogicalBoundingClientRect(elements.header).inlineSize - 10),\n              onInlineEnd: () => updateColumnWidth(getLogicalBoundingClientRect(elements.header).inlineSize + 10),\n            });\n        }\n      }\n      // Enter keyboard dragging mode\n      else if (event.keyCode === KeyCode.enter || event.keyCode === KeyCode.space) {\n        event.preventDefault();\n\n        isEventLike(event) &&\n          handleKey(event, {\n            onActivate: () => {\n              setIsKeyboardDragging(true);\n              resizerSeparatorRef.current?.focus();\n            },\n          });\n      }\n    };\n\n    updateTrackerPosition(getLogicalBoundingClientRect(elements.header).insetInlineEnd);\n\n    if (isDragging) {\n      document.body.classList.add(styles['resize-active']);\n      document.addEventListener('mousemove', onMouseMove);\n      document.addEventListener('mouseup', onMouseUp);\n    }\n    if (resizerHasFocus) {\n      document.body.classList.add(styles['resize-active-with-focus']);\n      elements.header.addEventListener('keydown', onKeyDown);\n    }\n    if (isKeyboardDragging) {\n      document.body.classList.add(styles['resize-active']);\n    }\n\n    return () => {\n      clearTimeout(autoGrowTimeout.current);\n      document.body.classList.remove(styles['resize-active']);\n      document.body.classList.remove(styles['resize-active-with-focus']);\n      document.removeEventListener('mousemove', onMouseMove);\n      document.removeEventListener('mouseup', onMouseUp);\n      elements.header.removeEventListener('keydown', onKeyDown);\n    };\n  }, [minWidth, isDragging, isKeyboardDragging, resizerHasFocus, onWidthUpdate, onWidthUpdateCommit]);\n\n  const { tabIndex: resizerTabIndex } = useSingleTabStopNavigation(resizerToggleRef, { tabIndex });\n\n  return (\n    <>\n      <button\n        ref={resizerToggleRef}\n        className={clsx(\n          styles.resizer,\n          (resizerHasFocus || showFocusRing || isKeyboardDragging) && styles['has-focus']\n        )}\n        onMouseDown={event => {\n          if (event.button !== 0) {\n            return;\n          }\n          event.preventDefault();\n          setIsDragging(true);\n        }}\n        onClick={() => {\n          // Prevent mouse drag activation and activate keyboard dragging for VO+Space click.\n          setIsDragging(false);\n          setResizerHasFocus(true);\n          setIsKeyboardDragging(true);\n          resizerSeparatorRef.current?.focus();\n        }}\n        onFocus={() => {\n          setHeaderCellWidth(getHeaderWidth(resizerToggleRef.current));\n          setResizerHasFocus(true);\n        }}\n        onBlur={event => {\n          // Ignoring blur event when focus moves to the resizer separator element.\n          // (This focus transition is done programmatically when the resizer button is clicked).\n          if (event.relatedTarget !== resizerSeparatorRef.current) {\n            setResizerHasFocus(false);\n          }\n        }}\n        // Using a custom role-description to make the element's purpose better clear.\n        // The role-description must include the word \"button\" to imply the interaction model.\n        // See https://www.w3.org/TR/wai-aria-1.1/#aria-roledescription\n        aria-roledescription={roleDescription}\n        aria-labelledby={ariaLabelledby}\n        tabIndex={resizerTabIndex}\n        data-focus-id={focusId}\n      />\n      <span\n        className={clsx(styles.divider, isDragging && styles['divider-active'])}\n        data-awsui-table-suppress-navigation={true}\n        ref={resizerSeparatorRef}\n        id={separatorId}\n        role=\"separator\"\n        tabIndex={-1}\n        aria-hidden={!isKeyboardDragging}\n        aria-orientation=\"vertical\"\n        aria-valuenow={headerCellWidth}\n        // aria-valuetext is needed because the VO announces \"collapsed\" when only aria-valuenow set without aria-valuemax\n        aria-valuetext={headerCellWidth.toFixed(0)}\n        aria-valuemin={minWidth}\n        data-focus-id={focusId}\n        onBlur={() => {\n          setResizerHasFocus(false);\n          if (isKeyboardDragging) {\n            setIsKeyboardDragging(false);\n          }\n          onWidthUpdateCommit();\n        }}\n      />\n    </>\n  );\n}\n\nexport function ResizeTracker() {\n  return <span className={styles.tracker} />;\n}\n","\n    import './styles.scoped.css';\n    export default {\n  \"root\": \"awsui_root_1s55x_svuwr_97\",\n  \"label\": \"awsui_label_1s55x_svuwr_101\",\n  \"stud\": \"awsui_stud_1s55x_svuwr_115\"\n};\n  ","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { KeyboardEvent } from 'react';\n\nimport { findUpUntil } from '../../internal/utils/dom';\nimport { TableProps } from '../interfaces';\nimport { SELECTION_ITEM } from './utils';\n\nimport selectionStyles from './styles.css.js';\n\n// The hooks moves focus between multi-selection checkboxes.\n// Not eligible for tables with grid navigation.\nexport function useSelectionFocusMove(selectionType: TableProps['selectionType'], totalItems: number) {\n  if (selectionType !== 'multi') {\n    return {};\n  }\n  function moveFocus(sourceElement: HTMLElement, fromIndex: number, direction: -1 | 1) {\n    let index = fromIndex;\n    const rootContainer = findRootContainer(sourceElement);\n\n    while (index >= -1 && index < totalItems) {\n      index += direction;\n      const control = findSelectionControlByIndex(rootContainer, index);\n      if (control && !control.disabled) {\n        control.focus();\n        break;\n      }\n    }\n  }\n  const [moveFocusDown, moveFocusUp] = ([1, -1] as const).map(direction => {\n    return (event: KeyboardEvent) => {\n      const target = event.currentTarget as HTMLElement;\n      const itemNode = findUpUntil(target, node => node.dataset.selectionItem === 'item')!;\n      const fromIndex = Array.prototype.indexOf.call(itemNode.parentElement!.children, itemNode);\n      moveFocus(target, fromIndex, direction);\n    };\n  });\n  return {\n    moveFocusDown,\n    moveFocusUp,\n    moveFocus,\n  };\n}\n\nfunction findSelectionControlByIndex(rootContainer: HTMLElement, index: number) {\n  if (index === -1) {\n    // find \"select all\" checkbox\n    return rootContainer.querySelector<HTMLInputElement>(\n      `[data-${SELECTION_ITEM}=\"all\"] .${selectionStyles.root} input`\n    );\n  }\n  return rootContainer.querySelectorAll<HTMLInputElement>(\n    `[data-${SELECTION_ITEM}=\"item\"] .${selectionStyles.root} input`\n  )[index];\n}\n\nfunction findRootContainer(element: HTMLElement) {\n  return findUpUntil(element, node => node.dataset.selectionRoot === 'true')!;\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useState } from 'react';\n\nimport { fireNonCancelableEvent } from '../../internal/events';\nimport { useUniqueId } from '../../internal/hooks/use-unique-id';\nimport { joinStrings } from '../../internal/utils/strings';\nimport { TableProps } from '../interfaces';\nimport { getTrackableValue } from '../utils';\nimport { SelectionProps } from './interfaces';\nimport { ItemSet } from './utils';\n\ntype SelectionOptions<T> = Pick<\n  TableProps<T>,\n  | 'ariaLabels'\n  | 'isItemDisabled'\n  | 'items'\n  | 'loading'\n  | 'onSelectionChange'\n  | 'selectedItems'\n  | 'selectionType'\n  | 'trackBy'\n>;\n\nexport function useSelection<T>(options: SelectionOptions<T>): {\n  isItemSelected: (item: T) => boolean;\n  getSelectAllProps?: () => SelectionProps;\n  getItemSelectionProps?: (item: T) => SelectionProps;\n} {\n  const singleSelectionProps = useSingleSelection(options);\n  const multiSelectionProps = useMultiSelection(options);\n  return options.selectionType === 'single' ? singleSelectionProps : multiSelectionProps;\n}\n\nfunction useSingleSelection<T>({\n  ariaLabels,\n  isItemDisabled = () => false,\n  onSelectionChange,\n  selectedItems = [],\n  selectionType,\n  trackBy,\n}: SelectionOptions<T>) {\n  // The name assigned to all controls to combine them in a single group.\n  const selectionControlName = useUniqueId();\n\n  if (selectionType !== 'single') {\n    return { isItemSelected: () => false };\n  }\n\n  // Selection state for individual items.\n  const selectedSet = new ItemSet(trackBy, selectedItems.slice(0, 1));\n  const isItemSelected = selectedSet.has.bind(selectedSet);\n\n  const handleToggleItem = (item: T) => {\n    if (!isItemDisabled(item) && !isItemSelected(item)) {\n      fireNonCancelableEvent(onSelectionChange, { selectedItems: [item] });\n    }\n  };\n\n  return {\n    isItemSelected,\n    getItemSelectionProps: (item: T): SelectionProps => ({\n      name: selectionControlName,\n      selectionType: 'single',\n      disabled: isItemDisabled(item),\n      checked: isItemSelected(item),\n      onChange: () => handleToggleItem(item),\n      ariaLabel: joinStrings(\n        ariaLabels?.selectionGroupLabel,\n        ariaLabels?.itemSelectionLabel?.({ selectedItems }, item)\n      ),\n    }),\n  };\n}\n\nfunction useMultiSelection<T>({\n  ariaLabels,\n  isItemDisabled = () => false,\n  items,\n  loading,\n  onSelectionChange,\n  selectedItems = [],\n  selectionType,\n  trackBy,\n}: SelectionOptions<T>) {\n  // The name assigned to all controls to combine them in a single group.\n  const selectionControlName = useUniqueId();\n  const [shiftPressed, setShiftPressed] = useState(false);\n  const [lastClickedItem, setLastClickedItem] = useState<null | T>(null);\n\n  if (selectionType !== 'multi') {\n    return { isItemSelected: () => false };\n  }\n\n  // Selection state for individual items.\n  const selectedSet = new ItemSet(trackBy, selectedItems);\n  const isItemSelected = selectedSet.has.bind(selectedSet);\n\n  // Derived selection state for all-items checkbox.\n  let allItemsDisabled = true;\n  let allEnabledItemsSelected = true;\n  for (const item of items) {\n    allItemsDisabled = allItemsDisabled && isItemDisabled(item);\n    allEnabledItemsSelected = allEnabledItemsSelected && (isItemSelected(item) || isItemDisabled(item));\n  }\n  const allItemsCheckboxSelected = selectedItems.length > 0 && allEnabledItemsSelected;\n  const allItemsCheckboxIndeterminate = selectedItems.length > 0 && !allEnabledItemsSelected;\n\n  // Shift-selection helpers.\n  const itemIndexesMap = new Map<T, number>();\n  items.forEach((item, i) => itemIndexesMap.set(getTrackableValue(trackBy, item), i));\n  const getShiftSelectedItems = (item: T): T[] => {\n    const lastClickedItemIndex = lastClickedItem\n      ? itemIndexesMap.get(getTrackableValue(trackBy, lastClickedItem))\n      : undefined;\n    // We use lastClickedItemIndex to determine if filtering/sorting/pagination\n    // made previously selected item invisible, therefore we reset state for shift-select.\n    if (lastClickedItemIndex !== undefined) {\n      const currentItemIndex = itemIndexesMap.get(getTrackableValue(trackBy, item))!;\n      const start = Math.min(currentItemIndex, lastClickedItemIndex);\n      const end = Math.max(currentItemIndex, lastClickedItemIndex);\n      return items.slice(start, end + 1);\n    }\n    return [item];\n  };\n\n  // Select items that are not already selected or disabled.\n  const selectItems = (requestedItems: readonly T[]) => {\n    const newSelectedItems = [...selectedItems];\n    requestedItems.forEach(newItem => {\n      if (!isItemSelected(newItem) && !isItemDisabled(newItem)) {\n        newSelectedItems.push(newItem);\n      }\n    });\n    return newSelectedItems;\n  };\n\n  // Unselect items unless they are disabled.\n  const deselectItems = (requestedItems: readonly T[]) => {\n    const requestedItemsSet = new ItemSet(trackBy, requestedItems);\n    const newSelectedItems: Array<T> = [];\n    selectedItems.forEach(selectedItem => {\n      const shouldUnselect = requestedItemsSet.has(selectedItem);\n      if (!shouldUnselect || isItemDisabled(selectedItem)) {\n        newSelectedItems.push(selectedItem);\n      }\n    });\n    return newSelectedItems;\n  };\n\n  const handleToggleAll = () => {\n    const newSelectedItems = allEnabledItemsSelected ? deselectItems(items) : selectItems(items);\n    fireNonCancelableEvent(onSelectionChange, { selectedItems: newSelectedItems });\n  };\n\n  const handleToggleItem = (item: T) => {\n    if (!isItemDisabled(item)) {\n      const requestedItems = shiftPressed ? getShiftSelectedItems(item) : [item];\n      const selectedItems = isItemSelected(item) ? deselectItems(requestedItems) : selectItems(requestedItems);\n      fireNonCancelableEvent(onSelectionChange, { selectedItems });\n      setLastClickedItem(item);\n    }\n  };\n\n  return {\n    isItemSelected,\n    getSelectAllProps: (): SelectionProps => ({\n      name: selectionControlName,\n      selectionType: 'multi',\n      disabled: allItemsDisabled || !!loading,\n      checked: allItemsCheckboxSelected,\n      indeterminate: allItemsCheckboxIndeterminate,\n      onChange: handleToggleAll,\n      ariaLabel: joinStrings(ariaLabels?.selectionGroupLabel, ariaLabels?.allItemsSelectionLabel?.({ selectedItems })),\n    }),\n    getItemSelectionProps: (item: T): SelectionProps => ({\n      name: selectionControlName,\n      selectionType: 'multi',\n      disabled: isItemDisabled(item),\n      checked: isItemSelected(item),\n      onChange: () => handleToggleItem(item),\n      onShiftToggle: (value: boolean) => setShiftPressed(value),\n      ariaLabel: joinStrings(\n        ariaLabels?.selectionGroupLabel,\n        ariaLabels?.itemSelectionLabel?.({ selectedItems }, item)\n      ),\n    }),\n  };\n}\n","\n    import './styles.scoped.css';\n    export default {\n  \"root\": \"awsui_root_1mabk_fodq7_97\",\n  \"radio\": \"awsui_radio_1mabk_fodq7_133\",\n  \"radio--has-description\": \"awsui_radio--has-description_1mabk_fodq7_141\",\n  \"radio-control\": \"awsui_radio-control_1mabk_fodq7_145\",\n  \"outline\": \"awsui_outline_1mabk_fodq7_153\",\n  \"styled-circle-border\": \"awsui_styled-circle-border_1mabk_fodq7_175\",\n  \"styled-circle-disabled\": \"awsui_styled-circle-disabled_1mabk_fodq7_179\",\n  \"styled-circle-readonly\": \"awsui_styled-circle-readonly_1mabk_fodq7_179\",\n  \"styled-circle-fill\": \"awsui_styled-circle-fill_1mabk_fodq7_184\",\n  \"styled-circle-checked\": \"awsui_styled-circle-checked_1mabk_fodq7_190\"\n};\n  ","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { copyAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport AbstractSwitch from '../internal/components/abstract-switch';\nimport { useSingleTabStopNavigation } from '../internal/context/single-tab-stop-navigation-context';\nimport { fireNonCancelableEvent, NonCancelableEventHandler } from '../internal/events';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { RadioGroupProps } from './interfaces';\n\nimport styles from './styles.css.js';\n\ninterface RadioButtonProps extends RadioGroupProps.RadioButtonDefinition {\n  name: string;\n  checked: boolean;\n  onChange?: NonCancelableEventHandler<RadioGroupProps.ChangeDetail>;\n  readOnly?: boolean;\n}\n\nexport default React.forwardRef(function RadioButton(\n  { name, label, value, checked, description, disabled, controlId, onChange, readOnly, ...rest }: RadioButtonProps,\n  ref: React.Ref<HTMLInputElement>\n) {\n  const isVisualRefresh = useVisualRefresh();\n  const radioButtonRef = useRef<HTMLInputElement>(null);\n  const mergedRefs = useMergeRefs(radioButtonRef, ref);\n\n  const { tabIndex } = useSingleTabStopNavigation(radioButtonRef);\n\n  return (\n    <AbstractSwitch\n      className={clsx(styles.radio, description && styles['radio--has-description'])}\n      controlClassName={styles['radio-control']}\n      outlineClassName={styles.outline}\n      label={label}\n      description={description}\n      disabled={disabled}\n      readOnly={readOnly}\n      controlId={controlId}\n      {...copyAnalyticsMetadataAttribute(rest)}\n      nativeControl={nativeControlProps => (\n        <input\n          {...nativeControlProps}\n          tabIndex={tabIndex}\n          type=\"radio\"\n          ref={mergedRefs}\n          name={name}\n          value={value}\n          checked={checked}\n          aria-disabled={readOnly && !disabled ? 'true' : undefined}\n          // empty handler to suppress React controllability warning\n          onChange={() => {}}\n        />\n      )}\n      onClick={() => {\n        radioButtonRef.current?.focus();\n        if (checked) {\n          return;\n        }\n        fireNonCancelableEvent(onChange, { value });\n      }}\n      styledControl={\n        <svg viewBox=\"0 0 100 100\" focusable=\"false\" aria-hidden=\"true\">\n          <circle\n            className={clsx(styles['styled-circle-border'], {\n              [styles['styled-circle-disabled']]: disabled,\n              [styles['styled-circle-readonly']]: readOnly,\n            })}\n            strokeWidth={isVisualRefresh ? 12 : 8}\n            cx={50}\n            cy={50}\n            r={isVisualRefresh ? 44 : 46}\n          />\n          <circle\n            className={clsx(styles['styled-circle-fill'], {\n              [styles['styled-circle-disabled']]: disabled,\n              [styles['styled-circle-checked']]: checked,\n              [styles['styled-circle-readonly']]: readOnly,\n            })}\n            strokeWidth={30}\n            cx={50}\n            cy={50}\n            r={35}\n          />\n        </svg>\n      }\n    />\n  );\n});\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { KeyboardEvent, KeyboardEventHandler, MouseEvent, useContext } from 'react';\nimport clsx from 'clsx';\n\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport InternalCheckbox from '../../checkbox/internal';\nimport { SingleTabStopNavigationContext } from '../../internal/context/single-tab-stop-navigation-context';\nimport { useUniqueId } from '../../internal/hooks/use-unique-id';\nimport { KeyCode } from '../../internal/keycode';\nimport RadioButton from '../../radio-group/radio-button';\nimport { GeneratedAnalyticsMetadataTableSelect } from '../analytics-metadata/interfaces';\nimport { SelectionProps } from './interfaces';\n\nimport styles from './styles.css.js';\n\nexport interface SelectionControlProps extends SelectionProps {\n  onShiftToggle?(shiftPressed: boolean): void;\n  onFocusUp?: KeyboardEventHandler;\n  onFocusDown?: KeyboardEventHandler;\n  ariaLabel?: string;\n  tabIndex?: -1;\n  focusedComponent?: null | string;\n  rowIndex?: number;\n  itemKey?: string;\n}\n\nexport function SelectionControl({\n  selectionType,\n  indeterminate = false,\n  onShiftToggle,\n  onFocusUp,\n  onFocusDown,\n  name,\n  ariaLabel,\n  focusedComponent,\n  rowIndex,\n  itemKey,\n  ...sharedProps\n}: SelectionControlProps) {\n  const controlId = useUniqueId();\n  const isMultiSelection = selectionType === 'multi';\n  const { navigationActive } = useContext(SingleTabStopNavigationContext);\n\n  const setShiftState = (event: KeyboardEvent | MouseEvent) => {\n    if (isMultiSelection) {\n      onShiftToggle && onShiftToggle(event.shiftKey);\n    }\n  };\n\n  const onMouseDownHandler = (event: MouseEvent) => {\n    setShiftState(event);\n    if (isMultiSelection) {\n      // To overcome an issue\n      // If you shift+click or ctrl+click on a label for a checkbox, checkbox is not checked.\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=559506\n      event.preventDefault();\n    }\n  };\n\n  // native checkboxes do not have focus move via keyboard, we implement it here programmatically\n  const handleKeyDown = (event: KeyboardEvent) => {\n    setShiftState(event);\n    if (isMultiSelection && !navigationActive) {\n      if (event.keyCode === KeyCode.up) {\n        event.preventDefault();\n        onFocusUp && onFocusUp(event);\n      }\n      if (event.keyCode === KeyCode.down) {\n        event.preventDefault();\n        onFocusDown && onFocusDown(event);\n      }\n    }\n  };\n\n  const handleClick = (event: MouseEvent) => {\n    const target = event.currentTarget;\n    const nativeInput = (target.tagName === 'INPUT' ? target : target.querySelector('input')) as HTMLInputElement;\n    // Clicking on input, does not focus it on Firefox (AWSUI-11345)\n    nativeInput?.focus();\n  };\n\n  const selector = isMultiSelection ? (\n    <InternalCheckbox\n      {...sharedProps}\n      showOutline={focusedComponent === 'selection-control'}\n      controlId={controlId}\n      data-focus-id=\"selection-control\"\n      indeterminate={indeterminate}\n    />\n  ) : (\n    <RadioButton {...sharedProps} controlId={controlId} name={name} value={''} label={''} />\n  );\n\n  return (\n    <>\n      <label\n        onKeyDown={handleKeyDown}\n        onKeyUp={setShiftState}\n        onMouseDown={onMouseDownHandler}\n        onMouseUp={setShiftState}\n        onClick={handleClick}\n        htmlFor={controlId}\n        className={clsx(styles.label, styles.root)}\n        aria-label={ariaLabel}\n        title={ariaLabel}\n        {...(rowIndex !== undefined && !sharedProps.disabled\n          ? getAnalyticsMetadataAttribute({\n              detail: {\n                position: `${rowIndex + 1}`,\n                item: itemKey || '',\n              },\n            } as Partial<GeneratedAnalyticsMetadataTableSelect>)\n          : {})}\n      >\n        {selector}\n      </label>\n      <span className={styles.stud} aria-hidden={true}>\n        &nbsp;\n      </span>\n    </>\n  );\n}\n","\n    import './styles.scoped.css';\n    export default {\n  \"header-cell\": \"awsui_header-cell_1spae_geicw_97\",\n  \"header-cell-fake-focus\": \"awsui_header-cell-fake-focus_1spae_geicw_131\",\n  \"header-cell-sticky\": \"awsui_header-cell-sticky_1spae_geicw_152\",\n  \"header-cell-stuck\": \"awsui_header-cell-stuck_1spae_geicw_155\",\n  \"header-cell-variant-full-page\": \"awsui_header-cell-variant-full-page_1spae_geicw_155\",\n  \"header-cell-hidden\": \"awsui_header-cell-hidden_1spae_geicw_161\",\n  \"header-cell-sortable\": \"awsui_header-cell-sortable_1spae_geicw_164\",\n  \"sticky-cell\": \"awsui_sticky-cell_1spae_geicw_167\",\n  \"sticky-cell-pad-left\": \"awsui_sticky-cell-pad-left_1spae_geicw_175\",\n  \"has-selection\": \"awsui_has-selection_1spae_geicw_175\",\n  \"sticky-cell-last-inline-start\": \"awsui_sticky-cell-last-inline-start_1spae_geicw_178\",\n  \"resize-divider\": \"awsui_resize-divider_1spae_geicw_183\",\n  \"sticky-cell-last-inline-end\": \"awsui_sticky-cell-last-inline-end_1spae_geicw_190\",\n  \"sorting-icon\": \"awsui_sorting-icon_1spae_geicw_210\",\n  \"edit-icon\": \"awsui_edit-icon_1spae_geicw_218\",\n  \"header-cell-content\": \"awsui_header-cell-content_1spae_geicw_224\",\n  \"header-cell-content-expandable\": \"awsui_header-cell-content-expandable_1spae_geicw_230\",\n  \"header-cell-disabled\": \"awsui_header-cell-disabled_1spae_geicw_282\",\n  \"header-cell-sorted\": \"awsui_header-cell-sorted_1spae_geicw_282\",\n  \"header-cell-text\": \"awsui_header-cell-text_1spae_geicw_296\",\n  \"header-cell-text-wrap\": \"awsui_header-cell-text-wrap_1spae_geicw_300\",\n  \"header-cell-ascending\": \"awsui_header-cell-ascending_1spae_geicw_306\",\n  \"header-cell-descending\": \"awsui_header-cell-descending_1spae_geicw_307\",\n  \"is-visual-refresh\": \"awsui_is-visual-refresh_1spae_geicw_317\",\n  \"has-striped-rows\": \"awsui_has-striped-rows_1spae_geicw_421\",\n  \"sticky-cell-pad-inline-start\": \"awsui_sticky-cell-pad-inline-start_1spae_geicw_427\"\n};\n  ","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { copyAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport { useSingleTabStopNavigation } from '../../internal/context/single-tab-stop-navigation-context';\nimport { useMergeRefs } from '../../internal/hooks/use-merge-refs';\nimport { StickyColumnsModel, useStickyCellStyles } from '../sticky-columns';\nimport { getTableColHeaderRoleProps, TableRole } from '../table-role';\nimport { getStickyClassNames } from '../utils';\nimport { SortingStatus } from './utils';\n\nimport styles from './styles.css.js';\n\ninterface TableThElementProps {\n  className?: string;\n  style?: React.CSSProperties;\n  sortingStatus?: SortingStatus;\n  sortingDisabled?: boolean;\n  focusedComponent?: null | string;\n  hidden?: boolean;\n  colIndex: number;\n  columnId: PropertyKey;\n  stickyState: StickyColumnsModel;\n  cellRef?: React.RefCallback<HTMLElement>;\n  tableRole: TableRole;\n  children: React.ReactNode;\n}\n\nexport function TableThElement({\n  className,\n  style,\n  sortingStatus,\n  sortingDisabled,\n  focusedComponent,\n  hidden,\n  colIndex,\n  columnId,\n  stickyState,\n  cellRef,\n  tableRole,\n  children,\n  ...props\n}: TableThElementProps) {\n  const stickyStyles = useStickyCellStyles({\n    stickyColumns: stickyState,\n    columnId,\n    getClassName: props => getStickyClassNames(styles, props),\n  });\n\n  const cellRefObject = useRef<HTMLTableCellElement>(null);\n  const mergedRef = useMergeRefs(stickyStyles.ref, cellRef, cellRefObject);\n  const { tabIndex: cellTabIndex } = useSingleTabStopNavigation(cellRefObject);\n\n  return (\n    <th\n      data-focus-id={`header-${String(columnId)}`}\n      className={clsx(\n        className,\n        {\n          [styles['header-cell-fake-focus']]: focusedComponent === `header-${String(columnId)}`,\n          [styles['header-cell-sortable']]: sortingStatus,\n          [styles['header-cell-sorted']]: sortingStatus === 'ascending' || sortingStatus === 'descending',\n          [styles['header-cell-disabled']]: sortingDisabled,\n          [styles['header-cell-ascending']]: sortingStatus === 'ascending',\n          [styles['header-cell-descending']]: sortingStatus === 'descending',\n          [styles['header-cell-hidden']]: hidden,\n        },\n        stickyStyles.className\n      )}\n      style={{ ...style, ...stickyStyles.style }}\n      ref={mergedRef}\n      {...getTableColHeaderRoleProps({ tableRole, sortingStatus, colIndex })}\n      tabIndex={cellTabIndex === -1 ? undefined : cellTabIndex}\n      {...copyAnalyticsMetadataAttribute(props)}\n    >\n      {children}\n    </th>\n  );\n}\n","\n    import './styles.scoped.css';\n    export default {\n  \"header-cell-text\": \"awsui_header-cell-text_dpuyq_1id1o_5\"\n};\n  ","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport { useInternalI18n } from '../../i18n/context';\nimport InternalIcon from '../../icon/internal';\nimport { useSingleTabStopNavigation } from '../../internal/context/single-tab-stop-navigation-context';\nimport { useUniqueId } from '../../internal/hooks/use-unique-id';\nimport { KeyCode } from '../../internal/keycode';\nimport { GeneratedAnalyticsMetadataTableSort } from '../analytics-metadata/interfaces';\nimport { TableProps } from '../interfaces';\nimport { Divider, Resizer } from '../resizer';\nimport { StickyColumnsModel } from '../sticky-columns';\nimport { TableRole } from '../table-role';\nimport { TableThElement } from './th-element';\nimport { getSortingIconName, getSortingStatus, isSorted } from './utils';\n\nimport analyticsSelectors from '../analytics-metadata/styles.css.js';\nimport styles from './styles.css.js';\n\nexport interface TableHeaderCellProps<ItemType> {\n  className?: string;\n  style?: React.CSSProperties;\n  tabIndex: number;\n  column: TableProps.ColumnDefinition<ItemType>;\n  activeSortingColumn?: TableProps.SortingColumn<ItemType>;\n  sortingDescending?: boolean;\n  sortingDisabled?: boolean;\n  wrapLines?: boolean;\n  hidden?: boolean;\n  onClick(detail: TableProps.SortingState<any>): void;\n  onResizeFinish: () => void;\n  colIndex: number;\n  updateColumn: (columnId: PropertyKey, newWidth: number) => void;\n  resizableColumns?: boolean;\n  isEditable?: boolean;\n  columnId: PropertyKey;\n  stickyState: StickyColumnsModel;\n  cellRef: React.RefCallback<HTMLElement>;\n  focusedComponent?: null | string;\n  tableRole: TableRole;\n  resizerRoleDescription?: string;\n  isExpandable?: boolean;\n}\n\nexport function TableHeaderCell<ItemType>({\n  className,\n  style,\n  tabIndex,\n  column,\n  activeSortingColumn,\n  sortingDescending,\n  sortingDisabled,\n  wrapLines,\n  focusedComponent,\n  hidden,\n  onClick,\n  colIndex,\n  updateColumn,\n  resizableColumns,\n  onResizeFinish,\n  isEditable,\n  columnId,\n  stickyState,\n  cellRef,\n  tableRole,\n  resizerRoleDescription,\n  isExpandable,\n}: TableHeaderCellProps<ItemType>) {\n  const i18n = useInternalI18n('table');\n  const sortable = !!column.sortingComparator || !!column.sortingField;\n  const sorted = !!activeSortingColumn && isSorted(column, activeSortingColumn);\n  const sortingStatus = getSortingStatus(sortable, sorted, !!sortingDescending, !!sortingDisabled);\n  const handleClick = () =>\n    onClick({\n      sortingColumn: column,\n      isDescending: sorted ? !sortingDescending : false,\n    });\n\n  // Elements with role=\"button\" do not have the default behavior of <button>, where pressing\n  // Enter or Space will trigger a click event. Therefore we need to add this ourselves.\n  // The native <button> element cannot be used due to a misaligned implementation in Firefox:\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=843003\n  const handleKeyPress = ({ nativeEvent: e }: React.KeyboardEvent) => {\n    if (e.keyCode === KeyCode.enter || e.keyCode === KeyCode.space) {\n      e.preventDefault();\n      handleClick();\n    }\n  };\n\n  const headerId = useUniqueId('table-header-');\n\n  const clickableHeaderRef = useRef<HTMLDivElement>(null);\n  const { tabIndex: clickableHeaderTabIndex } = useSingleTabStopNavigation(clickableHeaderRef, { tabIndex });\n\n  return (\n    <TableThElement\n      className={className}\n      style={style}\n      cellRef={cellRef}\n      sortingStatus={sortingStatus}\n      sortingDisabled={sortingDisabled}\n      focusedComponent={focusedComponent}\n      hidden={hidden}\n      colIndex={colIndex}\n      columnId={columnId}\n      stickyState={stickyState}\n      tableRole={tableRole}\n      {...(sortingDisabled\n        ? {}\n        : getAnalyticsMetadataAttribute({\n            action: 'sort',\n            detail: {\n              position: `${colIndex + 1}`,\n              columnId: column.id ? `${column.id}` : '',\n              label: `.${analyticsSelectors['header-cell-text']}`,\n              sortingDescending: `${!sortingDescending}`,\n            },\n          } as GeneratedAnalyticsMetadataTableSort))}\n    >\n      <div\n        ref={clickableHeaderRef}\n        data-focus-id={`sorting-control-${String(columnId)}`}\n        className={clsx(styles['header-cell-content'], {\n          [styles['header-cell-fake-focus']]: focusedComponent === `sorting-control-${String(columnId)}`,\n          [styles['header-cell-content-expandable']]: isExpandable,\n        })}\n        aria-label={\n          column.ariaLabel\n            ? column.ariaLabel({\n                sorted: sorted,\n                descending: sorted && !!sortingDescending,\n                disabled: !!sortingDisabled,\n              })\n            : undefined\n        }\n        {...(sortingStatus && !sortingDisabled\n          ? {\n              onKeyPress: handleKeyPress,\n              tabIndex: clickableHeaderTabIndex,\n              role: 'button',\n              onClick: handleClick,\n            }\n          : {})}\n      >\n        <div\n          className={clsx(\n            styles['header-cell-text'],\n            analyticsSelectors['header-cell-text'],\n            wrapLines && styles['header-cell-text-wrap']\n          )}\n          id={headerId}\n        >\n          {column.header}\n          {isEditable && !isExpandable ? (\n            <span\n              className={styles['edit-icon']}\n              role=\"img\"\n              aria-label={i18n('columnDefinitions.editConfig.editIconAriaLabel', column.editConfig?.editIconAriaLabel)}\n            >\n              <InternalIcon name=\"edit\" />\n            </span>\n          ) : null}\n        </div>\n        {sortingStatus && (\n          <span className={styles['sorting-icon']}>\n            <InternalIcon name={getSortingIconName(sortingStatus)} />\n          </span>\n        )}\n      </div>\n      {resizableColumns ? (\n        <Resizer\n          tabIndex={tabIndex}\n          focusId={`resize-control-${String(columnId)}`}\n          showFocusRing={focusedComponent === `resize-control-${String(columnId)}`}\n          onWidthUpdate={newWidth => updateColumn(columnId, newWidth)}\n          onWidthUpdateCommit={onResizeFinish}\n          ariaLabelledby={headerId}\n          minWidth={typeof column.minWidth === 'string' ? parseInt(column.minWidth) : column.minWidth}\n          roleDescription={i18n('ariaLabels.resizerRoleDescription', resizerRoleDescription)}\n        />\n      ) : (\n        <Divider className={styles['resize-divider']} />\n      )}\n    </TableThElement>\n  );\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport { findUpUntil } from '@cloudscape-design/component-toolkit/dom';\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport ScreenreaderOnly from '../internal/components/screenreader-only';\nimport { fireNonCancelableEvent, NonCancelableEventHandler } from '../internal/events';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { GeneratedAnalyticsMetadataTableSelectAll } from './analytics-metadata/interfaces';\nimport { TableHeaderCell } from './header-cell';\nimport { TableThElement } from './header-cell/th-element';\nimport { TableProps } from './interfaces';\nimport { Divider } from './resizer';\nimport { focusMarkers, SelectionControl, SelectionProps } from './selection';\nimport { StickyColumnsModel } from './sticky-columns';\nimport { getTableHeaderRowRoleProps, TableRole } from './table-role';\nimport { useColumnWidths } from './use-column-widths';\nimport { getColumnKey } from './utils';\n\nimport headerCellStyles from './header-cell/styles.css.js';\nimport styles from './styles.css.js';\n\nexport interface TheadProps {\n  selectionType: TableProps.SelectionType | undefined;\n  columnDefinitions: ReadonlyArray<TableProps.ColumnDefinition<any>>;\n  sortingColumn: TableProps.SortingColumn<any> | undefined;\n  sortingDescending: boolean | undefined;\n  sortingDisabled: boolean | undefined;\n  variant: TableProps.Variant;\n  wrapLines: boolean | undefined;\n  resizableColumns: boolean | undefined;\n  getSelectAllProps?: () => SelectionProps;\n  onFocusMove: ((sourceElement: HTMLElement, fromIndex: number, direction: -1 | 1) => void) | undefined;\n  onResizeFinish: (newWidths: Map<PropertyKey, number>) => void;\n  onSortingChange: NonCancelableEventHandler<TableProps.SortingState<any>> | undefined;\n  sticky?: boolean;\n  hidden?: boolean;\n  stuck?: boolean;\n  singleSelectionHeaderAriaLabel?: string;\n  resizerRoleDescription?: string;\n  stripedRows?: boolean;\n  stickyState: StickyColumnsModel;\n  selectionColumnId: PropertyKey;\n  focusedComponent?: null | string;\n  onFocusedComponentChange?: (focusId: null | string) => void;\n  tableRole: TableRole;\n  isExpandable?: boolean;\n  setLastUserAction: (name: string) => void;\n}\n\nconst Thead = React.forwardRef(\n  (\n    {\n      selectionType,\n      getSelectAllProps,\n      columnDefinitions,\n      sortingColumn,\n      sortingDisabled,\n      sortingDescending,\n      resizableColumns,\n      variant,\n      wrapLines,\n      onFocusMove,\n      onSortingChange,\n      onResizeFinish,\n      singleSelectionHeaderAriaLabel,\n      stripedRows,\n      sticky = false,\n      hidden = false,\n      stuck = false,\n      stickyState,\n      selectionColumnId,\n      focusedComponent,\n      onFocusedComponentChange,\n      tableRole,\n      resizerRoleDescription,\n      isExpandable,\n      setLastUserAction,\n    }: TheadProps,\n    outerRef: React.Ref<HTMLTableRowElement>\n  ) => {\n    const isVisualRefresh = useVisualRefresh();\n\n    const headerCellClass = clsx(\n      headerCellStyles['header-cell'],\n      headerCellStyles[`header-cell-variant-${variant}`],\n      sticky && headerCellStyles['header-cell-sticky'],\n      stuck && headerCellStyles['header-cell-stuck'],\n      stripedRows && headerCellStyles['has-striped-rows'],\n      isVisualRefresh && headerCellStyles['is-visual-refresh']\n    );\n\n    const selectionCellClass = clsx(\n      styles['selection-control'],\n      styles['selection-control-header'],\n      isVisualRefresh && styles['is-visual-refresh']\n    );\n\n    const { getColumnStyles, columnWidths, updateColumn, setCell } = useColumnWidths();\n\n    return (\n      <thead className={clsx(!hidden && styles['thead-active'])}>\n        <tr\n          {...focusMarkers.all}\n          ref={outerRef}\n          aria-rowindex={1}\n          {...getTableHeaderRowRoleProps({ tableRole })}\n          onFocus={event => {\n            const focusControlElement = findUpUntil(event.target, element => !!element.getAttribute('data-focus-id'));\n            const focusId = focusControlElement?.getAttribute('data-focus-id') ?? null;\n            onFocusedComponentChange?.(focusId);\n          }}\n          onBlur={() => onFocusedComponentChange?.(null)}\n        >\n          {selectionType ? (\n            <TableThElement\n              className={clsx(headerCellClass, selectionCellClass, hidden && headerCellStyles['header-cell-hidden'])}\n              hidden={hidden}\n              tableRole={tableRole}\n              colIndex={0}\n              focusedComponent={focusedComponent}\n              columnId={selectionColumnId}\n              stickyState={stickyState}\n              {...getAnalyticsMetadataAttribute({\n                action: 'selectAll',\n              } as Partial<GeneratedAnalyticsMetadataTableSelectAll>)}\n            >\n              {getSelectAllProps ? (\n                <SelectionControl\n                  onFocusDown={event => {\n                    onFocusMove!(event.target as HTMLElement, -1, +1);\n                  }}\n                  focusedComponent={focusedComponent}\n                  {...getSelectAllProps()}\n                  {...(sticky ? { tabIndex: -1 } : {})}\n                />\n              ) : (\n                <ScreenreaderOnly>{singleSelectionHeaderAriaLabel}</ScreenreaderOnly>\n              )}\n              <Divider className={styles['resize-divider']} />\n            </TableThElement>\n          ) : null}\n\n          {columnDefinitions.map((column, colIndex) => {\n            const columnId = getColumnKey(column, colIndex);\n            return (\n              <TableHeaderCell\n                key={columnId}\n                style={getColumnStyles(sticky, columnId)}\n                className={headerCellClass}\n                tabIndex={sticky ? -1 : 0}\n                focusedComponent={focusedComponent}\n                column={column}\n                activeSortingColumn={sortingColumn}\n                sortingDescending={sortingDescending}\n                sortingDisabled={sortingDisabled}\n                wrapLines={wrapLines}\n                hidden={hidden}\n                colIndex={selectionType ? colIndex + 1 : colIndex}\n                columnId={columnId}\n                updateColumn={updateColumn}\n                onResizeFinish={() => onResizeFinish(columnWidths)}\n                resizableColumns={resizableColumns}\n                onClick={detail => {\n                  setLastUserAction('sorting');\n                  fireNonCancelableEvent(onSortingChange, detail);\n                }}\n                isEditable={!!column.editConfig}\n                stickyState={stickyState}\n                cellRef={node => setCell(sticky, columnId, node)}\n                tableRole={tableRole}\n                resizerRoleDescription={resizerRoleDescription}\n                // Expandable option is only applicable to the first data column of the table.\n                // When present, the header content receives extra padding to match the first offset in the data cells.\n                isExpandable={colIndex === 0 && isExpandable}\n              />\n            );\n          })}\n        </tr>\n      </thead>\n    );\n  }\n);\n\nexport default Thead;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getLogicalBoundingClientRect } from '@cloudscape-design/component-toolkit/internal';\n\nimport { getOverflowParents } from '../internal/utils/scrollable-containers';\n\n/**\n * @param containerRef ref to surrounding container with sticky element\n * @param stickyRef ref to sticky element scrolled inside of containerRef\n * @param containerOffset offset between header and container\n *                        originating borders or paddings\n */\nexport default function stickyScrolling(\n  containerRef: React.MutableRefObject<HTMLElement | null>,\n  stickyRef: React.MutableRefObject<HTMLElement | null>\n) {\n  const scrollToTop = () => {\n    if (!containerRef.current || !stickyRef.current) {\n      return;\n    }\n    const scrollingOffset = calculateScrollingOffset(containerRef.current, stickyRef.current);\n    if (scrollingOffset > 0) {\n      scrollUpBy(scrollingOffset, containerRef.current);\n    }\n  };\n  const scrollToItem = (item: HTMLElement | null) => {\n    if (!item || !containerRef.current || !stickyRef.current) {\n      return;\n    }\n    const stickyBottom = getLogicalBoundingClientRect(stickyRef.current).insetBlockEnd;\n    const scrollingOffset = stickyBottom - getLogicalBoundingClientRect(item).insetBlockStart;\n    if (scrollingOffset > 0) {\n      scrollUpBy(scrollingOffset, containerRef.current);\n    }\n  };\n  return {\n    scrollToTop,\n    scrollToItem,\n  };\n}\n\n/**\n * Calculates the scrolling offset between container and\n * sticky element with container offset caused by border\n * or padding\n * @param container\n * @param sticky element inside of container\n * @param containerOffset caused by borders or paddings\n */\nexport function calculateScrollingOffset(container: HTMLElement, sticky: HTMLElement) {\n  const stickyRect = getLogicalBoundingClientRect(sticky);\n  const containerRect = getLogicalBoundingClientRect(container);\n  return stickyRect.insetBlockStart - containerRect.insetBlockStart;\n}\n\n/**\n * Scrolls suitable parent of container up by amount of pixels\n * @param amount pixels to be scrolled up\n * @param container used to determine next parent element for scrolling\n */\nexport function scrollUpBy(amount: number, container: HTMLElement) {\n  const parent = getOverflowParents(container);\n  if (parent.length) {\n    // Take next overflow parent in stack\n    parent[0].scrollTop -= amount;\n  } else {\n    window.scrollTo({ top: window.pageYOffset - amount });\n  }\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { RefObject, useCallback, useLayoutEffect } from 'react';\n\nimport { useResizeObserver } from '@cloudscape-design/component-toolkit/internal';\n\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport stickyScrolling, { calculateScrollingOffset, scrollUpBy } from './sticky-scrolling';\n\nexport const useStickyHeader = (\n  tableRef: RefObject<HTMLElement>,\n  theadRef: RefObject<HTMLElement>,\n  secondaryTheadRef: RefObject<HTMLElement>,\n  secondaryTableRef: RefObject<HTMLElement>,\n  tableWrapperRef: RefObject<HTMLElement>\n) => {\n  const isMobile = useMobile();\n  // Sync the sizes of the column header copies in the sticky header with the originals\n  const syncColumnHeaderWidths = useCallback(() => {\n    if (\n      tableRef.current &&\n      theadRef.current &&\n      secondaryTheadRef.current &&\n      secondaryTableRef.current &&\n      tableWrapperRef.current\n    ) {\n      // Using the tableRef offsetWidth instead of the theadRef because in VR\n      // the tableRef adds extra padding to the table and by default the theadRef will have a width\n      // without the padding and will make the sticky header width incorrect.\n      secondaryTableRef.current.style.inlineSize = `${tableRef.current.offsetWidth}px`;\n\n      tableWrapperRef.current.style.marginBlockStart = `-${theadRef.current.offsetHeight}px`;\n    }\n  }, [theadRef, secondaryTheadRef, secondaryTableRef, tableWrapperRef, tableRef]);\n  useLayoutEffect(() => {\n    syncColumnHeaderWidths();\n  });\n  useResizeObserver(theadRef, syncColumnHeaderWidths);\n  const scrollToTop = () => {\n    if (!isMobile && theadRef.current && secondaryTheadRef.current && tableWrapperRef.current) {\n      const scrollDist = calculateScrollingOffset(theadRef.current, secondaryTheadRef.current);\n      if (scrollDist > 0) {\n        scrollUpBy(scrollDist, tableWrapperRef.current);\n      }\n    }\n  };\n  const { scrollToItem } = stickyScrolling(tableWrapperRef, secondaryTheadRef);\n  const scrollToRow = (itemNode: HTMLElement | null) => {\n    if (!isMobile) {\n      scrollToItem(itemNode);\n    }\n  };\n  return { scrollToRow, scrollToTop };\n};\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { forwardRef, useContext, useImperativeHandle, useRef, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { StickyHeaderContext } from '../container/use-sticky-header';\nimport { getVisualContextClassname } from '../internal/components/visual-context';\nimport { TableProps } from './interfaces';\nimport { getTableRoleProps, TableRole } from './table-role';\nimport Thead, { TheadProps } from './thead';\nimport { useStickyHeader } from './use-sticky-header';\n\nimport styles from './styles.css.js';\n\nexport interface StickyHeaderRef {\n  scrollToTop(): void;\n  scrollToRow(node: null | HTMLElement): void;\n  setFocus(focusId: null | string): void;\n}\n\ninterface StickyHeaderProps {\n  variant: TableProps.Variant;\n  theadProps: TheadProps;\n  wrapperRef: React.RefObject<HTMLDivElement>;\n  theadRef: React.RefObject<HTMLTableRowElement>;\n  secondaryWrapperRef: React.RefObject<HTMLDivElement>;\n  tableRef: React.RefObject<HTMLTableElement>;\n  onScroll?: React.UIEventHandler<HTMLDivElement>;\n  contentDensity?: 'comfortable' | 'compact';\n  tableHasHeader?: boolean;\n  tableRole: TableRole;\n}\n\nexport default forwardRef(StickyHeader);\n\nfunction StickyHeader(\n  {\n    variant,\n    theadProps,\n    wrapperRef,\n    theadRef,\n    secondaryWrapperRef,\n    onScroll,\n    tableRef,\n    tableHasHeader,\n    contentDensity,\n    tableRole,\n  }: StickyHeaderProps,\n  ref: React.Ref<StickyHeaderRef>\n) {\n  const secondaryTheadRef = useRef<HTMLTableRowElement>(null);\n  const secondaryTableRef = useRef<HTMLTableElement>(null);\n  const { isStuck } = useContext(StickyHeaderContext);\n\n  const [focusedComponent, setFocusedComponent] = useState<null | string>(null);\n  const { scrollToRow, scrollToTop } = useStickyHeader(\n    tableRef,\n    theadRef,\n    secondaryTheadRef,\n    secondaryTableRef,\n    wrapperRef\n  );\n\n  useImperativeHandle(ref, () => ({\n    scrollToTop,\n    scrollToRow,\n    setFocus: setFocusedComponent,\n  }));\n\n  return (\n    <div\n      className={clsx(styles['header-secondary'], styles[`variant-${variant}`], {\n        [styles.stuck]: isStuck,\n        [styles['table-has-header']]: tableHasHeader,\n      })}\n      aria-hidden={true}\n      // Prevents receiving focus in Firefox. Focus on the overflowing table is sufficient\n      // to scroll the table horizontally\n      tabIndex={-1}\n      ref={secondaryWrapperRef}\n      onScroll={onScroll}\n    >\n      <table\n        className={clsx(\n          styles.table,\n          styles['table-layout-fixed'],\n          contentDensity === 'compact' && getVisualContextClassname('compact-table')\n        )}\n        ref={secondaryTableRef}\n        {...getTableRoleProps({ tableRole })}\n      >\n        <Thead\n          ref={secondaryTheadRef}\n          sticky={true}\n          stuck={isStuck}\n          focusedComponent={focusedComponent}\n          {...theadProps}\n        />\n      </table>\n    </div>\n  );\n}\n","\n    import './styles.scoped.css';\n    export default {\n  \"sticky-scrollbar\": \"awsui_sticky-scrollbar_faqt8_xzs7h_97\",\n  \"sticky-scrollbar-content\": \"awsui_sticky-scrollbar-content_faqt8_xzs7h_106\",\n  \"sticky-scrollbar-visible\": \"awsui_sticky-scrollbar-visible_faqt8_xzs7h_109\",\n  \"sticky-scrollbar-native-invisible\": \"awsui_sticky-scrollbar-native-invisible_faqt8_xzs7h_112\",\n  \"sticky-scrollbar-offset\": \"awsui_sticky-scrollbar-offset_faqt8_xzs7h_115\",\n  \"is-visual-refresh\": \"awsui_is-visual-refresh_faqt8_xzs7h_118\"\n};\n  ","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { RefObject, useEffect, useState } from 'react';\nimport { ResizeObserver } from '@juggle/resize-observer';\n\nimport { getLogicalBoundingClientRect } from '@cloudscape-design/component-toolkit/internal';\n\nimport globalVars from '../../internal/styles/global-vars';\nimport { browserScrollbarSize } from '../../internal/utils/browser-scrollbar-size';\nimport { getContainingBlock } from '../../internal/utils/dom';\nimport { getOverflowParents } from '../../internal/utils/scrollable-containers';\n\nimport styles from './styles.css.js';\n\nexport const updatePosition = (\n  tableEl: HTMLElement | null,\n  wrapperEl: HTMLElement | null,\n  scrollbarEl: HTMLElement | null,\n  scrollbarContentEl: HTMLElement | null,\n  inScrollableContainer: boolean\n) => {\n  if (!tableEl || !scrollbarEl || !wrapperEl) {\n    return;\n  }\n\n  const { inlineSize: tableInlineSize } = getLogicalBoundingClientRect(tableEl);\n  const { inlineSize: wrapperInlineSize } = getLogicalBoundingClientRect(wrapperEl);\n\n  // using 15 px as a height of transparent scrollbar on mac\n  const scrollbarHeight = browserScrollbarSize().height;\n  const areaIsScrollable = tableInlineSize > wrapperInlineSize;\n\n  if (!areaIsScrollable) {\n    scrollbarEl.classList.remove(styles['sticky-scrollbar-visible']);\n  } else {\n    // when scrollbar is not displayed scrollLeft property cannot be set by useScrollSync\n    // that's why syncing it separately\n    if (!scrollbarEl.classList.contains(styles['sticky-scrollbar-visible'])) {\n      requestAnimationFrame(() => {\n        scrollbarEl.scrollLeft = wrapperEl.scrollLeft;\n      });\n    }\n\n    scrollbarEl.classList.add(styles['sticky-scrollbar-visible']);\n    if (!scrollbarHeight) {\n      /* istanbul ignore next: covered by screenshot tests */\n      scrollbarEl.classList.add(styles['sticky-scrollbar-native-invisible']);\n    }\n  }\n\n  if (scrollbarHeight && scrollbarEl && scrollbarContentEl) {\n    scrollbarEl.style.blockSize = `${scrollbarHeight}px`;\n    scrollbarContentEl.style.blockSize = `${scrollbarHeight}px`;\n  }\n\n  if (tableEl && wrapperEl && scrollbarContentEl && scrollbarEl) {\n    const wrapperElRect = getLogicalBoundingClientRect(wrapperEl);\n    const tableElRect = getLogicalBoundingClientRect(tableEl);\n    scrollbarEl.style.inlineSize = `${wrapperElRect.inlineSize}px`;\n    scrollbarContentEl.style.inlineSize = `${tableElRect.inlineSize}px`;\n\n    // when using sticky scrollbars in containers\n    // we agreed to ignore dynamic bottom calculations for footer overlap\n    scrollbarEl.style.insetBlockEnd = inScrollableContainer\n      ? '0px'\n      : `var(${globalVars.stickyVerticalBottomOffset}, 0px)`;\n  }\n};\n\nexport function useStickyScrollbar(\n  scrollbarRef: RefObject<HTMLDivElement>,\n  scrollbarContentRef: RefObject<HTMLDivElement>,\n  tableRef: RefObject<HTMLTableElement>,\n  wrapperRef: RefObject<HTMLDivElement>,\n  offsetScrollbar: boolean\n) {\n  const [inScrollableContainer, setInScrollableContainer] = useState(false);\n\n  const wrapperEl = wrapperRef.current;\n  useEffect(() => {\n    if (wrapperEl) {\n      setInScrollableContainer(!!getContainingBlock(wrapperEl) || !!getOverflowParents(wrapperEl)[0]);\n    }\n  }, [wrapperEl]);\n\n  // Update scrollbar position wrapper or table size change.\n  useEffect(() => {\n    if (wrapperRef.current && tableRef.current) {\n      const observer = new ResizeObserver(() => {\n        if (scrollbarContentRef.current) {\n          updatePosition(\n            tableRef.current,\n            wrapperRef.current,\n            scrollbarRef.current,\n            scrollbarContentRef.current,\n            inScrollableContainer\n          );\n        }\n      });\n      // Scrollbar width must be in sync with wrapper width.\n      observer.observe(wrapperRef.current);\n      // Scrollbar content width must be in sync with table width.\n      observer.observe(tableRef.current);\n      return () => {\n        observer.disconnect();\n      };\n    }\n  }, [scrollbarContentRef, scrollbarRef, tableRef, wrapperRef, inScrollableContainer, offsetScrollbar]);\n\n  // Update scrollbar position when window resizes (vertically).\n  useEffect(() => {\n    const resizeHandler = () => {\n      updatePosition(\n        tableRef.current,\n        wrapperRef.current,\n        scrollbarRef.current,\n        scrollbarContentRef.current,\n        inScrollableContainer\n      );\n    };\n    resizeHandler();\n    window.addEventListener('resize', resizeHandler);\n    return () => {\n      window.removeEventListener('resize', resizeHandler);\n    };\n  }, [tableRef, wrapperRef, scrollbarRef, scrollbarContentRef, inScrollableContainer]);\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { forwardRef } from 'react';\nimport clsx from 'clsx';\n\nimport { useMergeRefs } from '../../internal/hooks/use-merge-refs';\nimport { useVisualRefresh } from '../../internal/hooks/use-visual-mode';\nimport { browserScrollbarSize } from '../../internal/utils/browser-scrollbar-size';\nimport { useStickyScrollbar } from './use-sticky-scrollbar';\n\nimport styles from './styles.css.js';\n\ninterface StickyScrollbarProps {\n  wrapperRef: React.RefObject<HTMLDivElement>;\n  tableRef: React.RefObject<HTMLTableElement>;\n  onScroll?: React.UIEventHandler<HTMLDivElement>;\n  hasStickyColumns?: boolean;\n}\n\nexport default forwardRef(StickyScrollbar);\n\nfunction StickyScrollbar(\n  { wrapperRef, tableRef, onScroll, hasStickyColumns }: StickyScrollbarProps,\n  ref: React.Ref<HTMLDivElement>\n) {\n  const isVisualRefresh = useVisualRefresh();\n  const scrollbarRef = React.useRef<HTMLDivElement>(null);\n  const scrollbarContentRef = React.useRef<HTMLDivElement>(null);\n  const mergedRef = useMergeRefs(ref, scrollbarRef);\n\n  /**\n   * If the height of the scrollbar is 0, we're likely on a platform that uses\n   * overlay scrollbars (e.g. Mac).\n   */\n  const offsetScrollbar = hasStickyColumns || browserScrollbarSize().height === 0;\n\n  useStickyScrollbar(scrollbarRef, scrollbarContentRef, tableRef, wrapperRef, offsetScrollbar);\n  return (\n    <div\n      ref={mergedRef}\n      className={clsx(\n        styles['sticky-scrollbar'],\n        offsetScrollbar && styles['sticky-scrollbar-offset'],\n        isVisualRefresh && styles['is-visual-refresh']\n      )}\n      onScroll={onScroll}\n    >\n      <div ref={scrollbarContentRef} className={styles['sticky-scrollbar-content']} />\n    </div>\n  );\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nexport function getClosestCell(element: Element) {\n  return element.closest('td,th') as null | HTMLTableCellElement;\n}\n\nexport function isElementDisabled(element: HTMLElement) {\n  if (element instanceof HTMLInputElement || element instanceof HTMLButtonElement) {\n    return element.disabled;\n  }\n  return false;\n}\n\n/**\n * Returns true if the target element or one of its parents is a dialog or is marked with data-awsui-table-suppress-navigation attribute.\n * This is used to suppress navigation for interactive content without a need to use a custom suppression check.\n */\nexport function defaultIsSuppressed(target: Element) {\n  let current: null | Element = target;\n  while (current) {\n    // Stop checking for parents upon reaching the cell element as the function only aims at the cell content.\n    if (isTableCell(current)) {\n      return false;\n    }\n    if (\n      current.getAttribute('role') === 'dialog' ||\n      current.getAttribute('data-awsui-table-suppress-navigation') === 'true'\n    ) {\n      return true;\n    }\n    current = current.parentElement;\n  }\n  return false;\n}\n\n/**\n * Finds the closest row to the targetAriaRowIndex+delta in the direction of delta.\n */\nexport function findTableRowByAriaRowIndex(table: HTMLTableElement, targetAriaRowIndex: number, delta: number) {\n  let targetRow: null | HTMLTableRowElement = null;\n  const rowElements = Array.from(table.querySelectorAll('tr[aria-rowindex]'));\n  if (delta < 0) {\n    rowElements.reverse();\n  }\n  for (const element of rowElements) {\n    const rowIndex = parseInt(element.getAttribute('aria-rowindex') ?? '');\n    targetRow = element as HTMLTableRowElement;\n\n    if (rowIndex === targetAriaRowIndex) {\n      break;\n    }\n    if (delta >= 0 && rowIndex > targetAriaRowIndex) {\n      break;\n    }\n    if (delta < 0 && rowIndex < targetAriaRowIndex) {\n      break;\n    }\n  }\n  return targetRow;\n}\n\n/**\n * Finds the closest column to the targetAriaColIndex+delta in the direction of delta.\n */\nexport function findTableRowCellByAriaColIndex(\n  tableRow: HTMLTableRowElement,\n  targetAriaColIndex: number,\n  delta: number\n) {\n  let targetCell: null | HTMLTableCellElement = null;\n  const cellElements = Array.from(tableRow.querySelectorAll('td[aria-colindex],th[aria-colindex]'));\n  if (delta < 0) {\n    cellElements.reverse();\n  }\n  for (const element of cellElements) {\n    const columnIndex = parseInt(element.getAttribute('aria-colindex') ?? '');\n    targetCell = element as HTMLTableCellElement;\n\n    if (columnIndex === targetAriaColIndex) {\n      break;\n    }\n    if (delta >= 0 && columnIndex > targetAriaColIndex) {\n      break;\n    }\n    if (delta < 0 && columnIndex < targetAriaColIndex) {\n      break;\n    }\n  }\n  return targetCell;\n}\n\nexport function isTableCell(element: Element) {\n  return element.tagName === 'TD' || element.tagName === 'TH';\n}\n\nexport function focusNextElement(element: null | HTMLElement) {\n  if (element) {\n    // Table cells are not focusable by default (tabIndex=undefined) and cell.focus() is ignored.\n    // To force focusing we have to imperatively set tabIndex to -1. When focused, the grid navigation\n    // will update the tabIndex to 0 if the cell gets focused or set it to undefined if the cell content\n    // gets focused instead.\n    // We cannot make cells have tabIndex=-1 by default due to an associated bug with text selection, see: PR 2158.\n    if (isTableCell(element)) {\n      element.tabIndex = -1;\n    }\n    element.focus();\n  }\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useRef } from 'react';\nimport { useEffect, useMemo } from 'react';\n\nimport { useStableCallback } from '@cloudscape-design/component-toolkit/internal';\n\nimport { getAllFocusables } from '../../internal/components/focus-lock/utils';\nimport {\n  SingleTabStopNavigationAPI,\n  SingleTabStopNavigationProvider,\n} from '../../internal/context/single-tab-stop-navigation-context';\nimport { KeyCode } from '../../internal/keycode';\nimport handleKey, { isEventLike } from '../../internal/utils/handle-key';\nimport { nodeBelongs } from '../../internal/utils/node-belongs';\nimport { FocusedCell, GridNavigationProps } from './interfaces';\nimport {\n  defaultIsSuppressed,\n  findTableRowByAriaRowIndex,\n  findTableRowCellByAriaColIndex,\n  focusNextElement,\n  getClosestCell,\n  isElementDisabled,\n  isTableCell,\n} from './utils';\n\n/**\n * Makes table navigable with keyboard commands.\n * See grid-navigation.md\n */\nexport function GridNavigationProvider({ keyboardNavigation, pageSize, getTable, children }: GridNavigationProps) {\n  const navigationAPI = useRef<SingleTabStopNavigationAPI>(null);\n  const gridNavigation = useMemo(() => new GridNavigationProcessor(navigationAPI), []);\n\n  const getTableStable = useStableCallback(getTable);\n\n  // Initialize the processor with the table container assuming it is mounted synchronously and only once.\n  useEffect(() => {\n    if (keyboardNavigation) {\n      const table = getTableStable();\n      table && gridNavigation.init(table);\n    }\n    return () => gridNavigation.cleanup();\n  }, [keyboardNavigation, gridNavigation, getTableStable]);\n\n  // Notify the processor of the props change.\n  useEffect(() => {\n    gridNavigation.update({ pageSize });\n  }, [gridNavigation, pageSize]);\n\n  // Notify the processor of the new render.\n  useEffect(() => {\n    if (keyboardNavigation) {\n      gridNavigation.refresh();\n    }\n  });\n\n  return (\n    <SingleTabStopNavigationProvider\n      ref={navigationAPI}\n      navigationActive={keyboardNavigation}\n      getNextFocusTarget={gridNavigation.getNextFocusTarget}\n      isElementSuppressed={gridNavigation.isElementSuppressed}\n      onRegisterFocusable={gridNavigation.onRegisterFocusable}\n      onUnregisterActive={gridNavigation.onUnregisterActive}\n    >\n      {children}\n    </SingleTabStopNavigationProvider>\n  );\n}\n\n/**\n * This helper encapsulates the grid navigation behaviors which are:\n * 1. Responding to keyboard commands and moving the focus accordingly;\n * 2. Muting table interactive elements for only one to be user-focusable at a time;\n * 3. Suppressing the above behaviors when focusing an element inside a dialog or when instructed explicitly.\n */\nclass GridNavigationProcessor {\n  // Props\n  private _pageSize = 0;\n  private _table: null | HTMLTableElement = null;\n  private _navigationAPI: { current: null | SingleTabStopNavigationAPI };\n\n  // State\n  private focusedCell: null | FocusedCell = null;\n  private keepUserIndex = false;\n\n  constructor(navigationAPI: { current: null | SingleTabStopNavigationAPI }) {\n    this._navigationAPI = navigationAPI;\n  }\n\n  public init(table: HTMLTableElement) {\n    this._table = table;\n\n    this.table.addEventListener('focusin', this.onFocusin);\n    this.table.addEventListener('keydown', this.onKeydown);\n\n    this.cleanup = () => {\n      this.table.removeEventListener('focusin', this.onFocusin);\n      this.table.removeEventListener('keydown', this.onKeydown);\n    };\n  }\n\n  public cleanup() {\n    // Do nothing before initialized.\n  }\n\n  public update({ pageSize }: { pageSize: number }) {\n    this._pageSize = pageSize;\n  }\n\n  public refresh() {\n    // Timeout ensures the newly rendered content elements are registered.\n    setTimeout(() => {\n      if (this._table) {\n        // Update focused cell indices in case table rows, columns, or firstIndex change.\n        this.updateFocusedCell(this.focusedCell?.element);\n        this._navigationAPI.current?.updateFocusTarget();\n      }\n    }, 0);\n  }\n\n  public onRegisterFocusable = (focusableElement: HTMLElement) => {\n    // When newly registered element belongs to the focused cell the focus must transition to it.\n    const focusedElement = this.focusedCell?.element;\n    if (focusedElement && isTableCell(focusedElement) && focusedElement.contains(focusableElement)) {\n      // Scroll is unnecessary when moving focus from a cell to element within the cell.\n      focusableElement.focus({ preventScroll: true });\n    }\n  };\n\n  public onUnregisterActive = () => {\n    // If the focused cell appears to be no longer attached to the table we need to re-apply\n    // focus to a cell with the same or closest position.\n    if (this.focusedCell && !nodeBelongs(this.table, this.focusedCell.element)) {\n      this.moveFocusBy(this.focusedCell, { x: 0, y: 0 });\n    }\n  };\n\n  public getNextFocusTarget = () => {\n    const cell = this.focusedCell;\n    const firstTableCell = this.table.querySelector('td,th') as null | HTMLTableCellElement;\n\n    // A single element of the table is made user-focusable.\n    // It defaults to the first interactive element of the first cell or the first cell itself otherwise.\n    let focusTarget: null | HTMLElement =\n      (firstTableCell && this.getFocusablesFrom(firstTableCell)[0]) ?? firstTableCell;\n\n    // When a navigation-focused element is present in the table it is used for user-navigation instead.\n    if (cell) {\n      focusTarget = this.getNextFocusable(cell, { x: 0, y: 0 });\n    }\n\n    return focusTarget;\n  };\n\n  public isElementSuppressed = (element: null | Element) => {\n    // Omit calculation as irrelevant until the table receives focus.\n    if (!this.focusedCell) {\n      return false;\n    }\n    return !element || defaultIsSuppressed(element);\n  };\n\n  private get pageSize() {\n    return this._pageSize;\n  }\n\n  private get table(): HTMLTableElement {\n    if (!this._table) {\n      throw new Error('Invariant violation: GridNavigationProcessor is used before initialization.');\n    }\n    return this._table;\n  }\n\n  private onFocusin = (event: FocusEvent) => {\n    if (!(event.target instanceof HTMLElement)) {\n      return;\n    }\n\n    this.updateFocusedCell(event.target);\n    if (!this.focusedCell) {\n      return;\n    }\n\n    this._navigationAPI.current?.updateFocusTarget();\n\n    // Focusing on cell is not eligible when it contains focusable elements in the content.\n    // If content focusables are available - move the focus to the first one.\n    const focusedElement = this.focusedCell.element;\n    const nextTarget = isTableCell(focusedElement) ? this.getFocusablesFrom(focusedElement)[0] : null;\n    if (nextTarget) {\n      // Scroll is unnecessary when moving focus from a cell to element within the cell.\n      nextTarget.focus({ preventScroll: true });\n    } else {\n      this.keepUserIndex = false;\n    }\n  };\n\n  private onKeydown = (event: KeyboardEvent) => {\n    if (!this.focusedCell) {\n      return;\n    }\n\n    const keys = [\n      KeyCode.up,\n      KeyCode.down,\n      KeyCode.left,\n      KeyCode.right,\n      KeyCode.pageUp,\n      KeyCode.pageDown,\n      KeyCode.home,\n      KeyCode.end,\n    ];\n    const ctrlKey = event.ctrlKey ? 1 : 0;\n    const altKey = event.altKey ? 1 : 0;\n    const shiftKey = event.shiftKey ? 1 : 0;\n    const metaKey = event.metaKey ? 1 : 0;\n    const modifiersPressed = ctrlKey + altKey + shiftKey + metaKey;\n    const invalidModifierCombination =\n      (modifiersPressed && !event.ctrlKey) ||\n      (event.ctrlKey && event.keyCode !== KeyCode.home && event.keyCode !== KeyCode.end);\n\n    if (\n      invalidModifierCombination ||\n      this.isElementSuppressed(document.activeElement) ||\n      !this.isRegistered(document.activeElement) ||\n      keys.indexOf(event.keyCode) === -1\n    ) {\n      return;\n    }\n\n    const from = this.focusedCell;\n    event.preventDefault();\n\n    isEventLike(event) &&\n      handleKey(event, {\n        onBlockStart: () => this.moveFocusBy(from, { y: -1, x: 0 }),\n        onBlockEnd: () => this.moveFocusBy(from, { y: 1, x: 0 }),\n        onInlineStart: () => this.moveFocusBy(from, { y: 0, x: -1 }),\n        onInlineEnd: () => this.moveFocusBy(from, { y: 0, x: 1 }),\n        onPageUp: () => this.moveFocusBy(from, { y: -this.pageSize, x: 0 }),\n        onPageDown: () => this.moveFocusBy(from, { y: this.pageSize, x: 0 }),\n        onHome: () =>\n          event.ctrlKey\n            ? this.moveFocusBy(from, { y: -Infinity, x: -Infinity })\n            : this.moveFocusBy(from, { y: 0, x: -Infinity }),\n        onEnd: () =>\n          event.ctrlKey\n            ? this.moveFocusBy(from, { y: Infinity, x: Infinity })\n            : this.moveFocusBy(from, { y: 0, x: Infinity }),\n      });\n  };\n\n  private moveFocusBy(cell: FocusedCell, delta: { x: number; y: number }) {\n    // For vertical moves preserve column- and element indices set by user.\n    // It allows keeping indices while moving over disabled actions or cells with colspan > 1.\n    if (delta.y !== 0 && delta.x === 0) {\n      this.keepUserIndex = true;\n    }\n    focusNextElement(this.getNextFocusable(cell, delta));\n  }\n\n  private isRegistered(element: null | Element): boolean {\n    return !element || (this._navigationAPI.current?.isRegistered(element) ?? false);\n  }\n\n  private updateFocusedCell(focusedElement?: HTMLElement): void {\n    if (!focusedElement) {\n      return;\n    }\n\n    const cellElement = getClosestCell(focusedElement);\n    const rowElement = cellElement?.closest('tr');\n    if (!cellElement || !rowElement) {\n      return;\n    }\n\n    const colIndex = parseInt(cellElement.getAttribute('aria-colindex') ?? '');\n    const rowIndex = parseInt(rowElement.getAttribute('aria-rowindex') ?? '');\n    if (isNaN(colIndex) || isNaN(rowIndex)) {\n      return;\n    }\n\n    const cellFocusables = this.getFocusablesFrom(cellElement);\n    const elementIndex = cellFocusables.indexOf(focusedElement);\n\n    const prevColIndex = this.focusedCell?.colIndex ?? -1;\n    const prevElementIndex = this.focusedCell?.elementIndex ?? -1;\n    this.focusedCell = {\n      rowIndex,\n      colIndex: this.keepUserIndex && prevColIndex !== -1 ? prevColIndex : colIndex,\n      elementIndex: this.keepUserIndex && prevElementIndex !== -1 ? prevElementIndex : elementIndex,\n      element: focusedElement,\n    };\n  }\n\n  private getNextFocusable(from: FocusedCell, delta: { y: number; x: number }) {\n    // Find next row to move focus into (can be null if the top/bottom is reached).\n    const targetAriaRowIndex = from.rowIndex + delta.y;\n    const targetRow = findTableRowByAriaRowIndex(this.table, targetAriaRowIndex, delta.y);\n    if (!targetRow) {\n      return null;\n    }\n\n    // Return next interactive cell content element if available.\n    const cellElement = getClosestCell(from.element);\n    const cellFocusables = cellElement ? this.getFocusablesFrom(cellElement) : [];\n    const nextElementIndex = from.elementIndex + delta.x;\n    const isValidDirection = !!delta.x;\n    const isValidIndex = from.elementIndex !== -1 && 0 <= nextElementIndex && nextElementIndex < cellFocusables.length;\n    const isTargetDifferent = from.element !== cellFocusables[nextElementIndex];\n    if (isValidDirection && isValidIndex && isTargetDifferent) {\n      return cellFocusables[nextElementIndex];\n    }\n\n    // Find next cell to focus or move focus into (can be null if the left/right edge is reached).\n    const targetAriaColIndex = from.colIndex + delta.x;\n    const targetCell = findTableRowCellByAriaColIndex(targetRow, targetAriaColIndex, delta.x);\n    if (!targetCell) {\n      return null;\n    }\n\n    // When target cell matches the current cell it means we reached the left or right boundary.\n    if (targetCell === cellElement && delta.x !== 0) {\n      return null;\n    }\n\n    const targetCellFocusables = this.getFocusablesFrom(targetCell);\n\n    // When delta.x = 0 keep element index if possible.\n    let focusIndex = from.elementIndex;\n    // Use first element index when moving to the right or to extreme left.\n    if ((isFinite(delta.x) && delta.x > 0) || delta.x === -Infinity) {\n      focusIndex = 0;\n    }\n    // Use last element index when moving to the left or to extreme right.\n    if ((isFinite(delta.x) && delta.x < 0) || delta.x === Infinity) {\n      focusIndex = targetCellFocusables.length - 1;\n    }\n\n    return targetCellFocusables[focusIndex] ?? targetCell;\n  }\n\n  private getFocusablesFrom(target: HTMLElement) {\n    const isElementRegistered = (element: Element) => this._navigationAPI.current?.isRegistered(element);\n    return getAllFocusables(target).filter(el => isElementRegistered(el) && !isElementDisabled(el));\n  }\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useContext } from 'react';\nimport clsx from 'clsx';\n\nimport { CollectionLabelContext } from '../internal/context/collection-label-context';\nimport { useContainerBreakpoints } from '../internal/hooks/container-queries';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\n\nimport styles from './styles.css.js';\n\ninterface ToolsHeaderProps {\n  header: React.ReactNode;\n  filter?: React.ReactNode;\n  pagination?: React.ReactNode;\n  preferences?: React.ReactNode;\n  setLastUserAction?: (name: string) => void;\n}\n\nexport default function ToolsHeader({ header, filter, pagination, preferences, setLastUserAction }: ToolsHeaderProps) {\n  const [breakpoint, ref] = useContainerBreakpoints(['xs']);\n  const isHeaderString = typeof header === 'string';\n  const assignHeaderId = useContext(CollectionLabelContext).assignId;\n  const headingId = useUniqueId('heading');\n  if (assignHeaderId !== undefined && isHeaderString) {\n    assignHeaderId(headingId);\n  }\n  const isSmall = breakpoint === 'default';\n  const hasTools = filter || pagination || preferences;\n  return (\n    <>\n      {isHeaderString ? <span id={headingId}>{header}</span> : header}\n      {hasTools && (\n        <div ref={ref} className={clsx(styles.tools, isSmall && styles['tools-small'])}>\n          {filter && (\n            <div\n              className={styles['tools-filtering']}\n              onClickCapture={() => setLastUserAction?.('filter')}\n              onKeyDownCapture={() => setLastUserAction?.('filter')}\n            >\n              {filter}\n            </div>\n          )}\n          <div className={styles['tools-align-right']}>\n            {pagination && (\n              <div className={styles['tools-pagination']} onClickCapture={() => setLastUserAction?.('pagination')}>\n                {pagination}\n              </div>\n            )}\n            {preferences && (\n              <div className={styles['tools-preferences']} onClickCapture={() => setLastUserAction?.('preferences')}>\n                {preferences}\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { RefObject, useCallback, useEffect, useMemo } from 'react';\n\nimport { scrollElementIntoView } from '../internal/utils/scrollable-containers';\nimport { TableProps } from './interfaces';\n\nfunction iterateTableCells<T extends HTMLElement>(\n  table: T,\n  func: (cell: HTMLTableCellElement, rowIndex: number, columnIndex: number) => void\n) {\n  table.querySelectorAll('tr').forEach((row: HTMLTableRowElement, rowIndex: number) => {\n    row.querySelectorAll('td').forEach((cell, cellIndex) => {\n      func(cell, rowIndex, cellIndex);\n    });\n  });\n}\n\ninterface TableFocusNavigationProps<T> {\n  enableKeyboardNavigation?: boolean;\n  selectionType: TableProps['selectionType'];\n  tableRoot: RefObject<HTMLTableElement>;\n  columnDefinitions: Readonly<T[]>;\n  numRows: number;\n}\n\n/**\n * This hook is used to navigate between table cells using the keyboard arrow keys.\n * All the functionality is implemented in the hook, so the table component does not\n * need to implement any keyboard event handlers.\n * @param enable - Toggle functionality of the hook\n * @param tableRoot - A ref to a table container. Ideally the root element of the table (<table>); tbody is also acceptable.\n * @param columnDefinitions - The column definitions for the table.\n * @param numRows - The number of rows in the table.\n */\nfunction useTableFocusNavigation<T extends { editConfig?: TableProps.EditConfig<any> }>({\n  enableKeyboardNavigation,\n  selectionType,\n  tableRoot,\n  columnDefinitions,\n  numRows,\n}: TableFocusNavigationProps<T>) {\n  const focusableColumns = useMemo(() => {\n    const cols = columnDefinitions.map(column => !!column.editConfig);\n    if (selectionType) {\n      cols.unshift(false);\n    }\n    return cols;\n  }, [columnDefinitions, selectionType]);\n\n  const maxColumnIndex = focusableColumns.length - 1;\n  const minColumnIndex = selectionType ? 1 : 0;\n\n  const focusCell = useCallback(\n    (rowIndex: number, columnIndex: number) => {\n      if (tableRoot?.current) {\n        iterateTableCells(tableRoot.current, (cell, rIndex, cIndex) => {\n          if (rIndex === rowIndex && cIndex === columnIndex) {\n            const editButton = cell.querySelector('button:last-child') as HTMLButtonElement | null;\n\n            if (editButton) {\n              editButton.focus?.();\n              scrollElementIntoView(editButton);\n            }\n          }\n        });\n      }\n    },\n    [tableRoot]\n  );\n\n  const shiftFocus = useCallback(\n    (vertical: -1 | 0 | 1, horizontal: -1 | 0 | 1) => {\n      const focusedCell = tableRoot.current?.querySelector<HTMLTableCellElement>('td:focus-within');\n      if (!focusedCell) {\n        return;\n      }\n\n      const columnIndex = focusedCell.cellIndex;\n      const rowIndex = (focusedCell.parentElement as HTMLTableRowElement).rowIndex;\n\n      let newRowIndex = rowIndex;\n      let newColumnIndex = columnIndex;\n\n      if (vertical !== 0) {\n        newRowIndex = Math.min(numRows, Math.max(rowIndex + vertical, 0));\n      }\n\n      if (horizontal !== 0) {\n        while (newColumnIndex <= maxColumnIndex && newColumnIndex >= minColumnIndex) {\n          newColumnIndex += horizontal;\n          if (focusableColumns[newColumnIndex]) {\n            break;\n          }\n        }\n      }\n\n      if ((rowIndex !== newRowIndex || columnIndex !== newColumnIndex) && tableRoot.current) {\n        focusCell(newRowIndex, newColumnIndex);\n      }\n    },\n    [focusCell, focusableColumns, maxColumnIndex, minColumnIndex, numRows, tableRoot]\n  );\n\n  const handleArrowKeyEvents = useCallback(\n    (event: KeyboardEvent) => {\n      const abort =\n        !!tableRoot.current?.querySelector('[data-inline-editing-active = \"true\"]') ||\n        !document.activeElement?.closest('[data-inline-editing-active]');\n\n      if (abort) {\n        return;\n      }\n      switch (event.key) {\n        case 'ArrowUp':\n          event.preventDefault();\n          shiftFocus(-1, 0);\n          break;\n        case 'ArrowDown':\n          event.preventDefault();\n          shiftFocus(1, 0);\n          break;\n        case 'ArrowLeft':\n          event.preventDefault();\n          shiftFocus(0, -1);\n          break;\n        case 'ArrowRight':\n          event.preventDefault();\n          shiftFocus(0, 1);\n          break;\n        // istanbul ignore next (default case = do nothing, not testable)\n        default:\n          return;\n      }\n    },\n    [shiftFocus, tableRoot]\n  );\n\n  useEffect(() => {\n    if (!tableRoot.current || enableKeyboardNavigation) {\n      return;\n    }\n\n    const tableElement = tableRoot.current;\n    tableRoot.current.addEventListener('keydown', handleArrowKeyEvents);\n\n    return () => tableElement && tableElement.removeEventListener('keydown', handleArrowKeyEvents);\n  }, [enableKeyboardNavigation, focusableColumns, handleArrowKeyEvents, tableRoot]);\n}\n\nexport default useTableFocusNavigation;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useImperativeHandle, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { useContainerQuery } from '@cloudscape-design/component-toolkit';\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\nimport {\n  GeneratedAnalyticsMetadataFragment,\n  getAnalyticsMetadataAttribute,\n} from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport InternalContainer, { InternalContainerProps } from '../container/internal';\nimport { useFunnelSubStep } from '../internal/analytics/hooks/use-funnel';\nimport { getAnalyticsMetadataProps, getBaseProps } from '../internal/base-component';\nimport LiveRegion from '../internal/components/live-region';\nimport { getVisualContextClassname } from '../internal/components/visual-context';\nimport { CollectionLabelContext } from '../internal/context/collection-label-context';\nimport { LinkDefaultVariantContext } from '../internal/context/link-default-variant-context';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport useMouseDownTarget from '../internal/hooks/use-mouse-down-target';\nimport { usePerformanceMarks } from '../internal/hooks/use-performance-marks';\nimport { usePrevious } from '../internal/hooks/use-previous';\nimport { useScrollSync } from '../internal/hooks/use-scroll-sync';\nimport { useTableInteractionMetrics } from '../internal/hooks/use-table-interaction-metrics';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { isDevelopment } from '../internal/is-development';\nimport { SomeRequired } from '../internal/types';\nimport { GeneratedAnalyticsMetadataTableComponent } from './analytics-metadata/interfaces';\nimport { TableBodyCell } from './body-cell';\nimport { TableTdElement } from './body-cell/td-element';\nimport { checkColumnWidths } from './column-widths-utils';\nimport { useExpandableTableProps } from './expandable-rows/expandable-rows-utils';\nimport { TableForwardRefType, TableProps, TableRow } from './interfaces';\nimport { NoDataCell } from './no-data-cell';\nimport { ItemsLoader } from './progressive-loading/items-loader';\nimport { useProgressiveLoadingProps } from './progressive-loading/progressive-loading-utils';\nimport { ResizeTracker } from './resizer';\nimport { focusMarkers, SelectionControl, useSelection, useSelectionFocusMove } from './selection';\nimport { useStickyColumns } from './sticky-columns';\nimport StickyHeader, { StickyHeaderRef } from './sticky-header';\nimport { StickyScrollbar } from './sticky-scrollbar';\nimport {\n  getTableRoleProps,\n  getTableRowRoleProps,\n  getTableWrapperRoleProps,\n  GridNavigationProvider,\n  TableRole,\n} from './table-role';\nimport Thead, { TheadProps } from './thead';\nimport ToolsHeader from './tools-header';\nimport { useCellEditing } from './use-cell-editing';\nimport { ColumnWidthDefinition, ColumnWidthsProvider, DEFAULT_COLUMN_WIDTH } from './use-column-widths';\nimport { useRowEvents } from './use-row-events';\nimport useTableFocusNavigation from './use-table-focus-navigation';\nimport { checkSortingState, getColumnKey, getItemKey, getVisibleColumnDefinitions, toContainerVariant } from './utils';\n\nimport headerStyles from '../header/styles.css.js';\nimport styles from './styles.css.js';\n\nconst GRID_NAVIGATION_PAGE_SIZE = 10;\nconst SELECTION_COLUMN_WIDTH = 54;\nconst selectionColumnId = Symbol('selection-column-id');\n\ntype InternalTableProps<T> = SomeRequired<TableProps<T>, 'items' | 'selectedItems' | 'variant' | 'firstIndex'> &\n  InternalBaseComponentProps & {\n    __funnelSubStepProps?: InternalContainerProps['__funnelSubStepProps'];\n  };\n\nexport const InternalTableAsSubstep = React.forwardRef(\n  <T,>(props: InternalTableProps<T>, ref: React.Ref<TableProps.Ref>) => {\n    const { funnelSubStepProps } = useFunnelSubStep();\n\n    const tableProps: InternalTableProps<T> = {\n      ...props,\n      __funnelSubStepProps: funnelSubStepProps,\n    };\n\n    return <InternalTable {...tableProps} ref={ref} />;\n  }\n) as TableForwardRefType;\n\nconst InternalTable = React.forwardRef(\n  <T,>(\n    {\n      header,\n      footer,\n      empty,\n      filter,\n      pagination,\n      preferences,\n      items,\n      columnDefinitions,\n      trackBy,\n      loading,\n      loadingText,\n      selectionType,\n      selectedItems,\n      isItemDisabled,\n      ariaLabels,\n      onSelectionChange,\n      onSortingChange,\n      sortingColumn,\n      sortingDescending,\n      sortingDisabled,\n      visibleColumns,\n      stickyHeader,\n      stickyHeaderVerticalOffset,\n      onRowClick,\n      onRowContextMenu,\n      wrapLines,\n      stripedRows,\n      contentDensity,\n      submitEdit,\n      onEditCancel,\n      resizableColumns,\n      onColumnWidthsChange,\n      variant,\n      __internalRootRef,\n      totalItemsCount,\n      firstIndex,\n      renderAriaLive,\n      stickyColumns,\n      columnDisplay,\n      enableKeyboardNavigation,\n      expandableRows,\n      getLoadingStatus,\n      renderLoaderPending,\n      renderLoaderLoading,\n      renderLoaderError,\n      __funnelSubStepProps,\n      ...rest\n    }: InternalTableProps<T>,\n    ref: React.Ref<TableProps.Ref>\n  ) => {\n    // Keyboard navigation defaults to `true` for tables with expandable rows.\n    if (expandableRows && enableKeyboardNavigation === undefined) {\n      enableKeyboardNavigation = true;\n    }\n\n    const baseProps = getBaseProps(rest);\n\n    const prevStickyHeader = usePrevious(stickyHeader);\n    if (prevStickyHeader !== undefined && !!stickyHeader !== !!prevStickyHeader) {\n      warnOnce(\n        'Table',\n        `\\`stickyHeader\\` has changed from \"${prevStickyHeader}\" to \"${stickyHeader}\". It is not recommended to change the value of this property during the component lifecycle. Please set it to either \"true\" or \"false\" unconditionally.`\n      );\n    }\n\n    const isMobile = useMobile();\n\n    const { isExpandable, allItems, getExpandableItemProps } = useExpandableTableProps({\n      items,\n      expandableRows,\n      trackBy,\n      ariaLabels,\n    });\n    const { allRows } = useProgressiveLoadingProps({\n      items: allItems,\n      getLoadingStatus,\n      getExpandableItemProps,\n    });\n\n    const [containerWidth, wrapperMeasureRef] = useContainerQuery<number>(rect => rect.contentBoxWidth);\n    const wrapperMeasureRefObject = useRef(null);\n    const wrapperMeasureMergedRef = useMergeRefs(wrapperMeasureRef, wrapperMeasureRefObject);\n\n    const [tableWidth, tableMeasureRef] = useContainerQuery<number>(rect => rect.contentBoxWidth);\n    const tableRefObject = useRef(null);\n\n    const secondaryWrapperRef = React.useRef<HTMLDivElement>(null);\n    const theadRef = useRef<HTMLTableRowElement>(null);\n    const stickyHeaderRef = React.useRef<StickyHeaderRef>(null);\n    const scrollbarRef = React.useRef<HTMLDivElement>(null);\n    const { cancelEdit, ...cellEditing } = useCellEditing({ onCancel: onEditCancel, onSubmit: submitEdit });\n\n    /* istanbul ignore next: performance marks do not work in JSDOM */\n    const getHeaderText = () =>\n      toolsHeaderPerformanceMarkRef.current?.querySelector<HTMLElement>(`.${headerStyles['heading-text']}`)\n        ?.innerText ?? toolsHeaderPerformanceMarkRef.current?.innerText;\n\n    const performanceMarkAttributes = usePerformanceMarks(\n      'table',\n      true,\n      tableRefObject,\n      () => ({\n        loading: loading ?? false,\n        header: getHeaderText(),\n      }),\n      [loading]\n    );\n\n    const analyticsMetadata = getAnalyticsMetadataProps(rest);\n\n    const { setLastUserAction } = useTableInteractionMetrics({\n      loading,\n      instanceIdentifier: analyticsMetadata?.instanceIdentifier,\n      itemCount: items.length,\n      getComponentIdentifier: getHeaderText,\n    });\n\n    useImperativeHandle(\n      ref,\n      () => ({\n        scrollToTop: stickyHeaderRef.current?.scrollToTop || (() => undefined),\n        cancelEdit,\n      }),\n      [cancelEdit]\n    );\n\n    const wrapperRefObject = useRef(null);\n    const handleScroll = useScrollSync([wrapperRefObject, scrollbarRef, secondaryWrapperRef]);\n\n    const { moveFocusDown, moveFocusUp, moveFocus } = useSelectionFocusMove(selectionType, allItems.length);\n    const { onRowClickHandler, onRowContextMenuHandler } = useRowEvents({ onRowClick, onRowContextMenu });\n\n    const visibleColumnDefinitions = getVisibleColumnDefinitions({\n      columnDefinitions,\n      columnDisplay,\n      visibleColumns,\n    });\n\n    const { isItemSelected, getSelectAllProps, getItemSelectionProps } = useSelection({\n      items: allItems,\n      trackBy,\n      selectedItems,\n      selectionType,\n      isItemDisabled,\n      onSelectionChange,\n      ariaLabels,\n      loading,\n    });\n    const isRowSelected = (row: TableRow<T>) => row.type === 'data' && isItemSelected(row.item);\n\n    if (isDevelopment) {\n      if (resizableColumns) {\n        checkColumnWidths(columnDefinitions);\n      }\n      if (sortingColumn?.sortingComparator) {\n        checkSortingState(columnDefinitions, sortingColumn.sortingComparator);\n      }\n    }\n\n    const isVisualRefresh = useVisualRefresh();\n    const computedVariant = isVisualRefresh\n      ? variant\n      : ['embedded', 'full-page'].indexOf(variant) > -1\n        ? 'container'\n        : variant;\n    const hasHeader = !!(header || filter || pagination || preferences);\n    const hasSelection = !!selectionType;\n    const hasFooterPagination = isMobile && variant === 'full-page' && !!pagination;\n    const hasFooter = !!footer || hasFooterPagination;\n\n    const headerIdRef = useRef<string | undefined>(undefined);\n    const isLabelledByHeader = !ariaLabels?.tableLabel && !!header;\n    const ariaLabelledby = isLabelledByHeader && headerIdRef.current ? headerIdRef.current : undefined;\n    const setHeaderRef = useCallback((id: string) => {\n      headerIdRef.current = id;\n    }, []);\n\n    const visibleColumnWidthsWithSelection: ColumnWidthDefinition[] = [];\n    const visibleColumnIdsWithSelection: PropertyKey[] = [];\n    if (hasSelection) {\n      visibleColumnWidthsWithSelection.push({ id: selectionColumnId, width: SELECTION_COLUMN_WIDTH });\n      visibleColumnIdsWithSelection.push(selectionColumnId);\n    }\n    for (let columnIndex = 0; columnIndex < visibleColumnDefinitions.length; columnIndex++) {\n      const columnId = getColumnKey(visibleColumnDefinitions[columnIndex], columnIndex);\n      visibleColumnWidthsWithSelection.push({ ...visibleColumnDefinitions[columnIndex], id: columnId });\n      visibleColumnIdsWithSelection.push(columnId);\n    }\n\n    const stickyState = useStickyColumns({\n      visibleColumns: visibleColumnIdsWithSelection,\n      stickyColumnsFirst: (stickyColumns?.first ?? 0) + (stickyColumns?.first && hasSelection ? 1 : 0),\n      stickyColumnsLast: stickyColumns?.last || 0,\n    });\n\n    const hasStickyColumns = !!((stickyColumns?.first ?? 0) + (stickyColumns?.last ?? 0) > 0);\n    const hasEditableCells = !!columnDefinitions.find(col => col.editConfig);\n\n    let tableRole: TableRole = 'table';\n    if (isExpandable) {\n      tableRole = 'treegrid';\n    } else if (enableKeyboardNavigation) {\n      tableRole = 'grid';\n    } else if (hasEditableCells) {\n      tableRole = 'grid-default';\n    }\n\n    const theadProps: TheadProps = {\n      selectionType,\n      getSelectAllProps,\n      columnDefinitions: visibleColumnDefinitions,\n      variant: computedVariant,\n      wrapLines,\n      resizableColumns,\n      sortingColumn,\n      sortingDisabled,\n      sortingDescending,\n      onSortingChange,\n      onFocusMove: moveFocus,\n      onResizeFinish(newWidth) {\n        const widthsDetail = columnDefinitions.map(\n          (column, index) =>\n            newWidth.get(getColumnKey(column, index)) || (column.width as number) || DEFAULT_COLUMN_WIDTH\n        );\n        const widthsChanged = widthsDetail.some((width, index) => columnDefinitions[index].width !== width);\n        if (widthsChanged) {\n          fireNonCancelableEvent(onColumnWidthsChange, { widths: widthsDetail });\n        }\n      },\n      singleSelectionHeaderAriaLabel: ariaLabels?.selectionGroupLabel,\n      resizerRoleDescription: ariaLabels?.resizerRoleDescription,\n      stripedRows,\n      stickyState,\n      selectionColumnId,\n      tableRole,\n      isExpandable,\n      setLastUserAction,\n    };\n\n    const wrapperRef = useMergeRefs(wrapperRefObject, stickyState.refs.wrapper);\n    const tableRef = useMergeRefs(tableMeasureRef, tableRefObject, stickyState.refs.table);\n\n    const wrapperProps = getTableWrapperRoleProps({\n      tableRole,\n      isScrollable: !!(tableWidth && containerWidth && tableWidth > containerWidth),\n      ariaLabel: ariaLabels?.tableLabel,\n      ariaLabelledby,\n    });\n\n    const getMouseDownTarget = useMouseDownTarget();\n\n    useTableFocusNavigation({\n      enableKeyboardNavigation,\n      selectionType,\n      tableRoot: tableRefObject,\n      columnDefinitions: visibleColumnDefinitions,\n      numRows: allRows?.length,\n    });\n    const toolsHeaderPerformanceMarkRef = useRef<HTMLDivElement>(null);\n    // If is mobile, we take into consideration the AppLayout's mobile bar and we subtract the tools wrapper height so only the table header is sticky\n    const [toolsHeaderHeight, toolsHeaderWrapperMeasureRef] = useContainerQuery(rect => rect.borderBoxHeight);\n    const toolsHeaderWrapper = useMergeRefs(toolsHeaderPerformanceMarkRef, toolsHeaderWrapperMeasureRef);\n\n    const colIndexOffset = selectionType ? 1 : 0;\n    const totalColumnsCount = visibleColumnDefinitions.length + colIndexOffset;\n\n    return (\n      <LinkDefaultVariantContext.Provider value={{ defaultVariant: 'primary' }}>\n        <ColumnWidthsProvider\n          visibleColumns={visibleColumnWidthsWithSelection}\n          resizableColumns={resizableColumns}\n          containerRef={wrapperMeasureRefObject}\n        >\n          <InternalContainer\n            {...baseProps}\n            __internalRootRef={__internalRootRef}\n            className={clsx(baseProps.className, styles.root)}\n            __funnelSubStepProps={__funnelSubStepProps}\n            __fullPage={variant === 'full-page'}\n            header={\n              <>\n                {hasHeader && (\n                  <div>\n                    <div\n                      ref={toolsHeaderWrapper}\n                      className={clsx(styles['header-controls'], styles[`variant-${computedVariant}`])}\n                    >\n                      <CollectionLabelContext.Provider value={{ assignId: setHeaderRef }}>\n                        <ToolsHeader\n                          header={header}\n                          filter={filter}\n                          pagination={pagination}\n                          preferences={preferences}\n                          setLastUserAction={setLastUserAction}\n                        />\n                      </CollectionLabelContext.Provider>\n                    </div>\n                  </div>\n                )}\n                {stickyHeader && (\n                  <StickyHeader\n                    ref={stickyHeaderRef}\n                    variant={computedVariant}\n                    theadProps={theadProps}\n                    wrapperRef={wrapperRefObject}\n                    theadRef={theadRef}\n                    secondaryWrapperRef={secondaryWrapperRef}\n                    tableRef={tableRefObject}\n                    onScroll={handleScroll}\n                    tableHasHeader={hasHeader}\n                    contentDensity={contentDensity}\n                    tableRole={tableRole}\n                  />\n                )}\n              </>\n            }\n            disableHeaderPaddings={true}\n            disableContentPaddings={true}\n            variant={toContainerVariant(computedVariant)}\n            __disableFooterPaddings={true}\n            __disableFooterDivider={true}\n            __disableStickyMobile={false}\n            footer={\n              hasFooter ? (\n                <div className={clsx(styles['footer-wrapper'], styles[`variant-${computedVariant}`])}>\n                  <div className={clsx(styles.footer, hasFooterPagination && styles['footer-with-pagination'])}>\n                    {footer && <span>{footer}</span>}\n                    {hasFooterPagination && <div className={styles['footer-pagination']}>{pagination}</div>}\n                  </div>\n                </div>\n              ) : null\n            }\n            __stickyHeader={stickyHeader}\n            __mobileStickyOffset={toolsHeaderHeight ?? 0}\n            __stickyOffset={stickyHeaderVerticalOffset}\n            {...focusMarkers.root}\n          >\n            <div\n              ref={wrapperRef}\n              className={clsx(styles.wrapper, styles[`variant-${computedVariant}`], {\n                [styles['has-footer']]: hasFooter,\n                [styles['has-header']]: hasHeader,\n              })}\n              style={stickyState.style.wrapper}\n              onScroll={handleScroll}\n              {...wrapperProps}\n            >\n              <div className={styles['wrapper-content-measure']} ref={wrapperMeasureMergedRef}></div>\n              {!!renderAriaLive && !!firstIndex && (\n                <LiveRegion>\n                  <span>\n                    {renderAriaLive({\n                      firstIndex,\n                      lastIndex: firstIndex + items.length - 1,\n                      visibleItemsCount: allItems.length,\n                      totalItemsCount,\n                    })}\n                  </span>\n                </LiveRegion>\n              )}\n              <GridNavigationProvider\n                keyboardNavigation={!!enableKeyboardNavigation}\n                pageSize={GRID_NAVIGATION_PAGE_SIZE}\n                getTable={() => tableRefObject.current}\n              >\n                <table\n                  {...performanceMarkAttributes}\n                  ref={tableRef}\n                  className={clsx(\n                    styles.table,\n                    resizableColumns && styles['table-layout-fixed'],\n                    contentDensity === 'compact' && getVisualContextClassname('compact-table')\n                  )}\n                  {...getTableRoleProps({\n                    tableRole,\n                    totalItemsCount,\n                    totalColumnsCount: totalColumnsCount,\n                    ariaLabel: ariaLabels?.tableLabel,\n                    ariaLabelledby,\n                  })}\n                >\n                  <Thead\n                    ref={theadRef}\n                    hidden={stickyHeader}\n                    onFocusedComponentChange={focusId => stickyHeaderRef.current?.setFocus(focusId)}\n                    {...theadProps}\n                  />\n                  <tbody>\n                    {loading || allItems.length === 0 ? (\n                      <tr>\n                        <NoDataCell\n                          totalColumnsCount={totalColumnsCount}\n                          hasFooter={hasFooter}\n                          loading={loading}\n                          loadingText={loadingText}\n                          empty={empty}\n                          tableRef={tableRefObject}\n                          containerRef={wrapperMeasureRefObject}\n                        />\n                      </tr>\n                    ) : (\n                      allRows.map((row, rowIndex) => {\n                        const isFirstRow = rowIndex === 0;\n                        const isLastRow = rowIndex === allRows.length - 1;\n                        const expandableProps = row.type === 'data' ? getExpandableItemProps(row.item) : undefined;\n                        const rowRoleProps = getTableRowRoleProps({\n                          tableRole,\n                          firstIndex,\n                          rowIndex,\n                          level: row.type === 'loader' ? row.level : undefined,\n                          ...expandableProps,\n                        });\n                        const getTableItemKey = (item: T) => getItemKey(trackBy, item, rowIndex);\n                        const sharedCellProps = {\n                          isVisualRefresh,\n                          isFirstRow,\n                          isLastRow,\n                          isSelected: hasSelection && isRowSelected(row),\n                          isPrevSelected: hasSelection && !isFirstRow && isRowSelected(allRows[rowIndex - 1]),\n                          isNextSelected: hasSelection && !isLastRow && isRowSelected(allRows[rowIndex + 1]),\n                          isEvenRow: rowIndex % 2 === 0,\n                          stripedRows,\n                          hasSelection,\n                          hasFooter,\n                          stickyState,\n                          tableRole,\n                        };\n                        if (row.type === 'data') {\n                          return (\n                            <tr\n                              key={getTableItemKey(row.item)}\n                              className={clsx(styles.row, sharedCellProps.isSelected && styles['row-selected'])}\n                              onFocus={({ currentTarget }) => {\n                                // When an element inside table row receives focus we want to adjust the scroll.\n                                // However, that behaviour is unwanted when the focus is received as result of a click\n                                // as it causes the click to never reach the target element.\n                                if (!currentTarget.contains(getMouseDownTarget())) {\n                                  stickyHeaderRef.current?.scrollToRow(currentTarget);\n                                }\n                              }}\n                              {...focusMarkers.item}\n                              onClick={onRowClickHandler && onRowClickHandler.bind(null, rowIndex, row.item)}\n                              onContextMenu={\n                                onRowContextMenuHandler && onRowContextMenuHandler.bind(null, rowIndex, row.item)\n                              }\n                              {...rowRoleProps}\n                            >\n                              {getItemSelectionProps && (\n                                <TableTdElement\n                                  {...sharedCellProps}\n                                  className={styles['selection-control']}\n                                  wrapLines={false}\n                                  columnId={selectionColumnId}\n                                  colIndex={0}\n                                >\n                                  <SelectionControl\n                                    onFocusDown={moveFocusDown}\n                                    onFocusUp={moveFocusUp}\n                                    {...getItemSelectionProps(row.item)}\n                                    rowIndex={rowIndex}\n                                    itemKey={`${getTableItemKey(row.item)}`}\n                                  />\n                                </TableTdElement>\n                              )}\n\n                              {visibleColumnDefinitions.map((column, colIndex) => {\n                                const isEditing = cellEditing.checkEditing({ rowIndex, colIndex });\n                                const successfulEdit = cellEditing.checkLastSuccessfulEdit({ rowIndex, colIndex });\n                                const isEditable = !!column.editConfig && !cellEditing.isLoading;\n                                const cellExpandableProps =\n                                  isExpandable && colIndex === 0 ? expandableProps : undefined;\n\n                                const analyticsMetadata: GeneratedAnalyticsMetadataFragment = {\n                                  component: {\n                                    innerContext: {\n                                      position: `${rowIndex + 1},${colIndex + 1}`,\n                                      columnId: column.id ? `${column.id}` : '',\n                                      columnLabel: {\n                                        selector: `table thead tr th:nth-child(${colIndex + (selectionType ? 2 : 1)})`,\n                                        root: 'component',\n                                      },\n                                      item: `${getTableItemKey(row.item)}`,\n                                    } as GeneratedAnalyticsMetadataTableComponent['innerContext'],\n                                  },\n                                };\n\n                                return (\n                                  <TableBodyCell\n                                    key={getColumnKey(column, colIndex)}\n                                    {...sharedCellProps}\n                                    style={\n                                      resizableColumns\n                                        ? {}\n                                        : {\n                                            width: column.width,\n                                            minWidth: column.minWidth,\n                                            maxWidth: column.maxWidth,\n                                          }\n                                    }\n                                    ariaLabels={ariaLabels}\n                                    column={column}\n                                    item={row.item}\n                                    wrapLines={wrapLines}\n                                    isEditable={isEditable}\n                                    isEditing={isEditing}\n                                    isRowHeader={column.isRowHeader}\n                                    successfulEdit={successfulEdit}\n                                    resizableColumns={resizableColumns}\n                                    onEditStart={() => cellEditing.startEdit({ rowIndex, colIndex })}\n                                    onEditEnd={editCancelled =>\n                                      cellEditing.completeEdit({ rowIndex, colIndex }, editCancelled)\n                                    }\n                                    submitEdit={cellEditing.submitEdit}\n                                    columnId={column.id ?? colIndex}\n                                    colIndex={colIndex + colIndexOffset}\n                                    verticalAlign={column.verticalAlign}\n                                    {...cellExpandableProps}\n                                    {...getAnalyticsMetadataAttribute(analyticsMetadata)}\n                                  />\n                                );\n                              })}\n                            </tr>\n                          );\n                        }\n                        return (\n                          <tr\n                            key={(row.item ? getTableItemKey(row.item) : 'root-' + rowIndex) + '-' + row.from}\n                            className={styles.row}\n                            {...rowRoleProps}\n                          >\n                            {getItemSelectionProps && (\n                              <TableTdElement\n                                {...sharedCellProps}\n                                className={styles['selection-control']}\n                                wrapLines={false}\n                                columnId={selectionColumnId}\n                                colIndex={0}\n                              >\n                                {null}\n                              </TableTdElement>\n                            )}\n                            {visibleColumnDefinitions.map((column, colIndex) => (\n                              <TableTdElement\n                                key={getColumnKey(column, colIndex)}\n                                {...sharedCellProps}\n                                wrapLines={false}\n                                columnId={column.id ?? colIndex}\n                                colIndex={colIndex + colIndexOffset}\n                                isRowHeader={colIndex === 0}\n                                level={row.level}\n                              >\n                                {colIndex === 0 ? (\n                                  <ItemsLoader\n                                    item={row.item}\n                                    loadingStatus={row.status}\n                                    renderLoaderPending={renderLoaderPending}\n                                    renderLoaderLoading={renderLoaderLoading}\n                                    renderLoaderError={renderLoaderError}\n                                    trackBy={trackBy}\n                                  />\n                                ) : null}\n                              </TableTdElement>\n                            ))}\n                          </tr>\n                        );\n                      })\n                    )}\n                  </tbody>\n                </table>\n              </GridNavigationProvider>\n\n              {resizableColumns && <ResizeTracker />}\n            </div>\n\n            <StickyScrollbar\n              ref={scrollbarRef}\n              wrapperRef={wrapperRefObject}\n              tableRef={tableRefObject}\n              onScroll={handleScroll}\n              hasStickyColumns={hasStickyColumns}\n            />\n          </InternalContainer>\n        </ColumnWidthsProvider>\n      </LinkDefaultVariantContext.Provider>\n    );\n  }\n) as TableForwardRefType;\n\nexport default InternalTable;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useInternalI18n } from '../../i18n/context';\nimport { fireNonCancelableEvent } from '../../internal/events';\nimport { TableProps } from '../interfaces';\nimport { ItemSet } from '../selection/utils';\n\ninterface ExpandableItemProps<T> extends ExpandableItemDetail<T> {\n  isExpandable: boolean;\n  isExpanded: boolean;\n  onExpandableItemToggle: () => void;\n  expandButtonLabel?: string;\n  collapseButtonLabel?: string;\n}\n\ninterface ExpandableItemDetail<T> {\n  level: number;\n  setSize: number;\n  posInSet: number;\n  parent: null | T;\n  children: readonly T[];\n}\n\nexport function useExpandableTableProps<T>({\n  items,\n  expandableRows,\n  trackBy,\n  ariaLabels,\n}: {\n  items: readonly T[];\n  expandableRows?: TableProps.ExpandableRows<T>;\n  trackBy?: TableProps.TrackBy<T>;\n  ariaLabels?: TableProps.AriaLabels<T>;\n}) {\n  const i18n = useInternalI18n('table');\n  const isExpandable = !!expandableRows;\n\n  const expandedSet = new ItemSet(trackBy, expandableRows?.expandedItems ?? []);\n\n  let allItems = items;\n  const itemToDetail = new Map<T, ExpandableItemDetail<T>>();\n  const getItemLevel = (item: T) => itemToDetail.get(item)?.level ?? 0;\n\n  if (isExpandable) {\n    const visibleItems = new Array<T>();\n\n    const traverse = (item: T, detail: Omit<ExpandableItemDetail<T>, 'children'>) => {\n      const children = expandableRows.getItemChildren(item);\n      itemToDetail.set(item, { ...detail, children });\n\n      visibleItems.push(item);\n      if (expandedSet.has(item)) {\n        children.forEach((child, index) =>\n          traverse(child, { level: detail.level + 1, setSize: children.length, posInSet: index + 1, parent: item })\n        );\n      }\n    };\n    items.forEach((item, index) =>\n      traverse(item, { level: 1, setSize: items.length, posInSet: index + 1, parent: null })\n    );\n\n    for (let index = 0; index < visibleItems.length; index++) {\n      const item = visibleItems[index];\n      if (expandedSet.has(item)) {\n        let insertionIndex = index + 1;\n        for (insertionIndex; insertionIndex < visibleItems.length; insertionIndex++) {\n          const insertionItem = visibleItems[insertionIndex];\n          if (getItemLevel(item) >= getItemLevel(insertionItem)) {\n            break;\n          }\n        }\n        insertionIndex--;\n      }\n    }\n\n    allItems = visibleItems;\n  }\n\n  const getExpandableItemProps = (item: T): ExpandableItemProps<T> => {\n    const { level = 1, setSize = 1, posInSet = 1, parent = null, children = [] } = itemToDetail.get(item) ?? {};\n    return {\n      level,\n      setSize,\n      posInSet,\n      isExpandable: expandableRows?.isItemExpandable(item) ?? true,\n      isExpanded: expandedSet.has(item),\n      onExpandableItemToggle: () =>\n        fireNonCancelableEvent(expandableRows?.onExpandableItemToggle, { item, expanded: !expandedSet.has(item) }),\n      expandButtonLabel: i18n('ariaLabels.expandButtonLabel', ariaLabels?.expandButtonLabel?.(item)),\n      collapseButtonLabel: i18n('ariaLabels.collapseButtonLabel', ariaLabels?.collapseButtonLabel?.(item)),\n      parent,\n      children,\n    };\n  };\n\n  return { isExpandable, allItems, getExpandableItemProps };\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\n\nimport { TableProps, TableRow } from '../interfaces';\n\nexport function useProgressiveLoadingProps<T>({\n  items,\n  getLoadingStatus,\n  getExpandableItemProps,\n}: {\n  items: readonly T[];\n  getLoadingStatus?: (item: null | T) => TableProps.LoadingStatus;\n  getExpandableItemProps: (item: T) => { level: number; parent: null | T; isExpanded: boolean; children: readonly T[] };\n}) {\n  // The rows are either data or loader.\n  // A loader row can be added to the root level (level=0) in which case it has no associated item (item=null).\n  // Loader rows can be added to expandable rows (level>0) in which case they have an associated item (item!=null).\n  // The \"from\" property of the loader row is the index of the first item to be loaded starting 0. It is used to generate unique React keys.\n  const allRows = new Array<TableRow<T>>();\n\n  const getItemParent = (item: T) => getExpandableItemProps(item).parent;\n  const getItemChildren = (item: T) => getExpandableItemProps(item).children;\n  const getItemLevel = (item?: T) => (item ? getExpandableItemProps(item).level : 0);\n  const isItemExpanded = (item: T) => getExpandableItemProps(item).isExpanded;\n\n  for (let i = 0; i < items.length; i++) {\n    allRows.push({ type: 'data', item: items[i] });\n\n    // Insert empty expandable item loader\n    if (isItemExpanded(items[i]) && getItemChildren(items[i]).length === 0) {\n      const status = getLoadingStatus?.(items[i]);\n      if (status && (status === 'loading' || status === 'error')) {\n        allRows.push({ type: 'loader', item: items[i], level: getItemLevel(items[i]), status, from: 0 });\n      } else {\n        warnOnce('Table', 'Expanded items without children must have \"loading\" or \"error\" loading status.');\n      }\n    }\n\n    // Insert expandable items loaders\n    let currentParent = getItemParent(items[i]);\n    let levelsDiff = getItemLevel(items[i]) - getItemLevel(items[i + 1]);\n    while (currentParent && levelsDiff > 0) {\n      const status = getLoadingStatus?.(currentParent);\n      if (status && status !== 'finished') {\n        const level = currentParent ? getItemLevel(currentParent) : 0;\n        const children = currentParent ? getItemChildren(currentParent) : [];\n        allRows.push({ type: 'loader', item: currentParent, level, status, from: children.length });\n      }\n      currentParent = currentParent && getItemParent(currentParent);\n      levelsDiff--;\n    }\n\n    // Insert root loader\n    const rootLoadingStatus = getLoadingStatus?.(null);\n    if (i === items.length - 1 && rootLoadingStatus && rootLoadingStatus !== 'finished') {\n      allRows.push({ type: 'loader', item: null, level: 0, status: rootLoadingStatus, from: items.length });\n    }\n  }\n\n  return { allRows };\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useCallback, useState } from 'react';\n\nimport { CancelableEventHandler, fireCancelableEvent } from '../internal/events';\nimport { TableProps } from './interfaces';\n\nexport interface CellId {\n  rowIndex: number;\n  colIndex: number;\n}\n\ninterface CellEditingProps {\n  onCancel?: CancelableEventHandler;\n  onSubmit?: TableProps.SubmitEditFunction<any>;\n}\n\nexport function useCellEditing({ onCancel, onSubmit }: CellEditingProps) {\n  const [currentEditCell, setCurrentEditCell] = useState<null | CellId>(null);\n  const [lastSuccessfulEditCell, setLastSuccessfulEditCell] = useState<null | CellId>(null);\n  const [currentEditLoading, setCurrentEditLoading] = useState(false);\n\n  const startEdit = (cellId: CellId) => {\n    setLastSuccessfulEditCell(null);\n    setCurrentEditCell(cellId);\n  };\n\n  const cancelEdit = useCallback(() => setCurrentEditCell(null), []);\n\n  const completeEdit = (cellId: CellId, editCancelled: boolean) => {\n    const eventCancelled = fireCancelableEvent(onCancel, {});\n    if (!eventCancelled) {\n      setCurrentEditCell(null);\n      if (!editCancelled) {\n        setLastSuccessfulEditCell(cellId);\n      }\n    }\n  };\n\n  const checkEditing = ({ rowIndex, colIndex }: CellId) =>\n    rowIndex === currentEditCell?.rowIndex && colIndex === currentEditCell.colIndex;\n\n  const checkLastSuccessfulEdit = ({ rowIndex, colIndex }: CellId) =>\n    rowIndex === lastSuccessfulEditCell?.rowIndex && colIndex === lastSuccessfulEditCell.colIndex;\n\n  const submitEdit = onSubmit\n    ? async (...args: Parameters<typeof onSubmit>) => {\n        setCurrentEditLoading(true);\n        try {\n          await onSubmit(...args);\n        } finally {\n          setCurrentEditLoading(false);\n        }\n      }\n    : undefined;\n\n  return {\n    isLoading: currentEditLoading,\n    startEdit,\n    cancelEdit,\n    checkEditing,\n    checkLastSuccessfulEdit,\n    completeEdit,\n    submitEdit,\n  };\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useEffect, useRef } from 'react';\n\nimport { PerformanceMetrics } from '../../analytics';\nimport { useEffectOnUpdate } from '../use-effect-on-update';\n\n/*\nIf the last user interaction is more than this time ago, it is not considered\nto be the cause of the current loading state.\n*/\nconst USER_ACTION_TIME_LIMIT = 1_000;\n\nexport interface UseTableInteractionMetricsProps {\n  instanceIdentifier: string | undefined;\n  loading: boolean | undefined;\n  itemCount: number;\n  getComponentIdentifier: () => string | undefined;\n}\n\nexport function useTableInteractionMetrics({\n  itemCount,\n  instanceIdentifier,\n  getComponentIdentifier,\n  loading = false,\n}: UseTableInteractionMetricsProps) {\n  const lastUserAction = useRef<{ name: string; time: number } | null>(null);\n  const capturedUserAction = useRef<string | null>(null);\n  const loadingStartTime = useRef<number | null>(null);\n\n  const metadata = useRef({ itemCount, getComponentIdentifier });\n  metadata.current = { itemCount, getComponentIdentifier };\n\n  useEffect(() => {\n    if (loading) {\n      loadingStartTime.current = performance.now();\n\n      if (lastUserAction.current && lastUserAction.current.time > performance.now() - USER_ACTION_TIME_LIMIT) {\n        capturedUserAction.current = lastUserAction.current.name;\n      } else {\n        capturedUserAction.current = null;\n      }\n    }\n  }, [loading]);\n\n  useEffectOnUpdate(() => {\n    if (!loading && loadingStartTime.current !== null) {\n      const loadingDuration = performance.now() - loadingStartTime.current;\n      loadingStartTime.current = null;\n\n      PerformanceMetrics.tableInteraction({\n        userAction: capturedUserAction.current ?? '',\n        interactionTime: Math.round(loadingDuration),\n        interactionMetadata: undefined,\n        componentIdentifier: metadata.current.getComponentIdentifier(),\n        instanceIdentifier,\n        noOfResourcesInTable: metadata.current.itemCount,\n      });\n    }\n  }, [instanceIdentifier, loading]);\n\n  return {\n    setLastUserAction: (name: string) => void (lastUserAction.current = { name, time: performance.now() }),\n  };\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { RefObject, useRef } from 'react';\n\n/**\n * useScrollSync returns scroll event handler to be attached to synchronized scroll elements.\n *\n * For example\n *    const handleScroll = useScrollSync([ref1, ref2]);\n *    <div ref={ref1} onScroll={handleScroll}/>\n *    <div ref={ref2} onScroll={handleScroll}/>\n */\nexport function useScrollSync(refs: Array<RefObject<any>>) {\n  const activeElement = useRef<HTMLElement | null>(null);\n\n  return (event: React.UIEvent) => {\n    const targetElement = event.currentTarget as HTMLElement;\n    // remembers the first element that fires onscroll to align with other elements against it\n    if (targetElement && (activeElement.current === null || activeElement.current === targetElement)) {\n      requestAnimationFrame(() => {\n        activeElement.current = targetElement;\n        refs.forEach(ref => {\n          const element = ref.current;\n          if (element && element !== targetElement) {\n            element.scrollLeft = targetElement.scrollLeft;\n          }\n        });\n        // unblock the ability to scroll the synced elements\n        requestAnimationFrame(() => {\n          activeElement.current = null;\n        });\n      });\n    }\n  };\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { fireCancelableEvent, fireNonCancelableEvent } from '../internal/events/index';\nimport { findUpUntil } from '../internal/utils/dom';\nimport { TableProps } from './interfaces';\n\nimport styles from './styles.css.js';\n\nexport function useRowEvents<T>({ onRowClick, onRowContextMenu }: Pick<TableProps, 'onRowClick' | 'onRowContextMenu'>) {\n  const onRowClickHandler = (rowIndex: number, item: T, event: React.MouseEvent) => {\n    const tableCell = findUpUntil(event.target as HTMLElement, element => element.tagName.toLowerCase() === 'td');\n    if (!tableCell || !tableCell.classList.contains(styles['selection-control'])) {\n      const details: TableProps.OnRowClickDetail<T> = { rowIndex, item };\n      fireNonCancelableEvent(onRowClick, details);\n    }\n  };\n  const onRowContextMenuHandler = (rowIndex: number, item: T, event: React.MouseEvent) => {\n    const details: TableProps.OnRowContextMenuDetail<T> = {\n      rowIndex,\n      item,\n      clientX: event.clientX,\n      clientY: event.clientY,\n    };\n    fireCancelableEvent(onRowContextMenu, details, event);\n  };\n\n  return {\n    onRowClickHandler: onRowClick && onRowClickHandler,\n    onRowContextMenuHandler: onRowContextMenu && onRowContextMenuHandler,\n  };\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport { AnalyticsFunnelSubStep } from '../internal/analytics/components/analytics-funnel';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { GeneratedAnalyticsMetadataTableComponent } from './analytics-metadata/interfaces';\nimport { getSortingColumnId } from './header-cell/utils';\nimport { TableForwardRefType, TableProps } from './interfaces';\nimport InternalTable, { InternalTableAsSubstep } from './internal';\n\nexport { TableProps };\nconst Table = React.forwardRef(\n  <T,>(\n    {\n      items = [],\n      selectedItems = [],\n      variant = 'container',\n      contentDensity = 'comfortable',\n      firstIndex = 1,\n      ...props\n    }: TableProps<T>,\n    ref: React.Ref<TableProps.Ref>\n  ) => {\n    const baseComponentProps = useBaseComponent('Table', {\n      props: {\n        contentDensity,\n        resizableColumns: props.resizableColumns,\n        selectionType: props.selectionType,\n        stickyHeader: props.stickyHeader,\n        stripedRows: props.stripedRows,\n        variant,\n        wrapLines: props.wrapLines,\n        enableKeyboardNavigation: props.enableKeyboardNavigation,\n      },\n      metadata: {\n        expandableRows: !!props.expandableRows,\n        progressiveLoading: !!props.getLoadingStatus,\n        inlineEdit: props.columnDefinitions.some(def => !!def.editConfig),\n        disabledInlineEdit: props.columnDefinitions.some(def => !!def.editConfig?.disabledReason),\n      },\n    });\n\n    const analyticsComponentMetadata: GeneratedAnalyticsMetadataTableComponent = {\n      name: 'awsui.Table',\n      label: { root: 'self' },\n      properties: {\n        selectionType: props.selectionType || 'none',\n        itemsCount: `${items.length}`,\n        selectedItemsCount: `${selectedItems.length}`,\n        variant,\n      },\n    };\n\n    const sortingColumnId = getSortingColumnId(props.columnDefinitions, props.sortingColumn);\n    if (sortingColumnId) {\n      analyticsComponentMetadata.properties.sortingColumnId = sortingColumnId;\n      analyticsComponentMetadata.properties.sortingDescending = `${props.sortingDescending || false}`;\n    }\n\n    const tableProps: Parameters<typeof InternalTable<T>>[0] = {\n      items,\n      selectedItems,\n      variant,\n      contentDensity,\n      firstIndex,\n      ...props,\n      ...baseComponentProps,\n      ref,\n      ...getAnalyticsMetadataAttribute({ component: analyticsComponentMetadata }),\n    };\n\n    if (variant === 'borderless' || variant === 'embedded') {\n      return <InternalTable {...tableProps} />;\n    }\n\n    return (\n      <AnalyticsFunnelSubStep>\n        <InternalTableAsSubstep {...tableProps} />\n      </AnalyticsFunnelSubStep>\n    );\n  }\n) as TableForwardRefType;\n\napplyDisplayName(Table, 'Table');\nexport default Table;\n"],"names":["React","_a","ref","controlId","name","checked","disabled","readOnly","ariaRequired","indeterminate","children","description","ariaLabel","onFocus","onBlur","onChange","tabIndex","explicitTabIndex","showOutline","ariaControls","__internalRootRef","__injectAnalyticsComponentMetadata","rest","__rest","ariaDescribedby","ariaLabelledby","useFormFieldContext","baseProps","getBaseProps","checkboxRef","useRef","useForwardFocus","useEffect","current","Boolean","useSingleTabStopNavigation","analyticsMetadata","analyticsComponentMetadata","label","root","component","detail","selected","concat","AbstractSwitch","Object","assign","className","clsx","styles","controlClassName","outlineClassName","descriptionBottomPadding","nativeControl","nativeControlProps","type","undefined","fireNonCancelableEvent","onClick","focus","styledControl","CheckboxIcon","getAnalyticsMetadataAttribute","Grid","gridDefinition","disableGutters","restProps","baseComponentProps","useBaseComponent","props","breakpoint","useContainerBreakpoints","InternalGrid","__breakpoint","applyDisplayName","Header","variant","headingTagOverride","InternalHeader","joinString","values","filter","value","join","uniqueId","useUniqueId","id","labelId","descriptionId","ariaLabelledByIds","push","ariaDescriptions","wrapper","getAnalyticsLabelAttribute","analyticsSelectors","action","control","length","outline","content","dimensionsByTheme","default","viewBox","xy","r","size","refresh","theme","useVisualRefresh","dimensions","focusable","x","y","rx","ry","width","height","points","usePrevious","browserScrollbarSize","callback","result","calculateOnce","document","scrollDiv","createElement","style","overflow","position","top","left","body","appendChild","offsetWidth","clientWidth","offsetHeight","clientHeight","removeChild","SpaceBetween","direction","alignItems","InternalSpaceBetween","flattenedChildren","flattenChildren","map","child","key","typeToIcon","error","InternalIcon","warning","success","info","stopped","pending","loading","InternalSpinner","StatusIndicator","iconAriaLabel","colorOverride","wrapText","__animate","__size","__display","container","icon","role","stateToIcon","sortable","ascending","descending","isSorted","column","sortingColumn","sortingField","sortingComparator","useEventListenersSingleton","createSingletonHandler","setTarget","handleMouseDown","event","target","handleKeyDown","window","addEventListener","removeEventListener","useClickAway","awayRef","onClickStable","useStableCallback","handleClick","nodeBelongs","capture","ExpandToggleButton","_ref","isExpanded","onExpandableItemToggle","expandButtonLabel","collapseButtonLabel","buttonRef","AsyncStore","constructor","state","_listeners","this","_state","get","set","cb","prevState","newState","unstable_batchedUpdates","selector","listener","subscribe","unsubscribe","index","storedListener","splice","useStickyColumns","visibleColumns","stickyColumnsFirst","stickyColumnsLast","store","useMemo","StickyColumnsStore","wrapperRef","tableRef","cellsRef","Map","hasStickyColumns","updateStickyStyles","updateCellStyles","table","cells","useResizeObserver","wrapperState","updateWrapperStyles","prev","s1","s2","scrollPaddingInlineStart","scrollPaddingInlineEnd","setWrapper","useCallback","node","setTable","setCell","columnId","delete","refs","cell","useStickyCellStyles","_ref2","stickyColumns","getClassName","unsubscribeRef","refCallback","cellElement","cellState","padInlineStart","lastInsetInlineStart","lastInsetInlineEnd","offset","insetInlineStart","insetInlineEnd","keys","forEach","classList","add","remove","cellStyles","super","cellOffsets","offsets","stickyWidthInlineStart","stickyWidthInlineEnd","isStuckToTheInlineStart","isStuckToTheInlineEnd","generateCellStyles","isEnabled","lastLeftStickyColumnIndex","lastRightStickyColumnIndex","reduce","acc","stickySide","isFirstColumn","stickyColumnOffsetLeft","_b","first","stickyColumnOffsetRight","_d","_c","last","updateCellOffsets","totalColumns","firstColumnsWidths","i","Math","min","element","cellWidth","getLogicalBoundingClientRect","inlineSize","lastColumnsWidths","columnIndex","wrapperWidth","parseFloat","getComputedStyle","paddingLeft","paddingRight","hadStickyColumns","updateScroll","wrapperScrollInlineStart","getScrollInlineStart","wrapperScrollWidth","scrollWidth","wrapperClientWidth","tablePaddingInlineStart","paddingInlineStart","tablePaddingInlineEnd","paddingInlineEnd","ceil","stateToAriaSort","getAriaSort","sortingState","getTableRoleProps","options","nativeProps","tableRole","totalItemsCount","totalColumnsCount","applyTrackBy","trackBy","item","getTrackableValue","getColumnKey","toContainerVariant","getVisibleColumnDefinitions","columnDisplay","columnDefinitions","columnDefinitionsById","accumulator","visible","getVisibleColumnDefinitionsFromColumnDisplay","_ref3","ids","Set","_ref4","has","getVisibleColumnDefinitionsFromVisibleColumns","getStickyClassNames","TableTdElement","wrapLines","isRowHeader","isFirstRow","isLastRow","isSelected","isNextSelected","isPrevSelected","nativeAttributes","onMouseEnter","onMouseLeave","isEvenRow","stripedRows","isVisualRefresh","hasSelection","hasFooter","colIndex","stickyState","level","isExpandable","verticalAlign","Element","scope","getTableCellRoleProps","stickyStyles","cellRefObject","mergedRef","useMergeRefs","cellTabIndex","getLevelClassSuffix","copyAnalyticsMetadataAttribute","DisabledInlineEditor","ariaLabels","isEditing","onEditStart","onEditEnd","editDisabledReason","interactiveCell","resizableColumns","clickAwayRef","hasHover","setHasHover","useState","hasFocus","setHasFocus","showIcon","iconRef","portalRef","targetProps","descriptionEl","useHiddenDescription","portalClasses","usePortalModeClasses","toString","activateEditLabel","call","onKeyDown","Icon","Portal","PopoverContainer","fixedWidth","trackRef","arrow","Arrow","renderWithPortal","zIndex","PopoverBody","dismissButton","dismissAriaLabel","header","onDismiss","overflowVisible","noop","InlineEditor","submitEdit","__onRender","currentEditLoading","setCurrentEditLoading","currentEditValue","setCurrentEditValue","i18n","useInternalI18n","focusLockRef","cellContext","currentValue","setValue","finishEdit","cancelled","refocusCell","arguments","onCancel","reFocusEditedCell","timer","setTimeout","clearTimeout","validation","errorIconAriaLabel","constraintText","editingCell","editConfig","FocusLock","restoreFocus","onSubmit","evt","preventDefault","e","focusFirst","FormField","stretch","__hideLabel","__disableGutters","i18nStrings","errorText","Button","cancelEditLabel","formAction","iconName","submitEditLabel","LiveRegion","submittingEditText","submitHandlerFallback","Error","TableCellEditable","successfulEdit","editActivateRef","tdNativeAttributes","isFocusMoveNeededRef","prevSuccessfulEdit","prevHasFocus","showSuccessIcon","setShowSuccessIcon","editActivateTabIndex","successfulEditLabel","onMouseDown","TableBodyCell","isEditable","isExpandableColumnCell","disabledReason","setElementWidths","setProperty","property","widthCssValue","checkProperty","warnOnce","SELECTION_ITEM","ItemSet","items","put","bind","focusMarkers","all","NoDataCell","loadingText","empty","containerRef","cellContentRef","contentBoxWidth","containerInlineSize","floor","colSpan","InternalStatusIndicator","ItemsLoader","loadingStatus","renderLoaderPending","renderLoaderLoading","renderLoaderError","parentTrackId","DEFAULT_COLUMN_WIDTH","WidthsContext","createContext","getColumnStyles","columnWidths","updateColumn","ColumnWidthsProvider","visibleColumnsRef","containerWidthRef","setColumnWidths","stickyCellsRef","getCell","sticky","find","isLastColumn","totalWidth","sum","minWidth","maxWidth","updateColumnWidths","containerWidth","updated","newColumnWidths","lastVisible","indexOf","colEl","max","readWidths","Provider","newWidth","oldWidths","newWidths","updateWidths","getHeaderWidth","resizerElement","findUpUntil","tagName","toLowerCase","AUTO_GROW_START_TIME","AUTO_GROW_INTERVAL","AUTO_GROW_INCREMENT","Divider","divider","Resizer","onWidthUpdate","onWidthUpdateCommit","showFocusRing","focusId","roleDescription","separatorId","resizerToggleRef","resizerSeparatorRef","isDragging","setIsDragging","isKeyboardDragging","setIsKeyboardDragging","autoGrowTimeout","resizerHasFocus","setResizerHasFocus","headerCellWidth","setHeaderCellWidth","elements","tableRoot","tableStyles","querySelector","tracker","resizerStyles","scrollParent","getOverflowParents","getResizerElements","inlineStartEdge","inlineEndEdge","updateTrackerPosition","newOffset","scrollParentInsetInlineStart","insetBlockStart","blockSize","updateColumnWidth","resizeColumn","cellLeft","onAutoGrow","scrollLeft","getIsRtl","onMouseMove","getLogicalPageX","onMouseUp","KeyCode","right","enter","space","escape","keyCode","isEventLike","handleKey","onActivate","onEscape","onInlineStart","onInlineEnd","resizerTabIndex","resizer","button","relatedTarget","toFixed","ResizeTracker","useSelectionFocusMove","selectionType","totalItems","moveFocus","sourceElement","fromIndex","rootContainer","dataset","selectionRoot","findSelectionControlByIndex","moveFocusDown","moveFocusUp","currentTarget","itemNode","selectionItem","Array","prototype","parentElement","selectionStyles","querySelectorAll","useSelection","singleSelectionProps","isItemDisabled","onSelectionChange","selectedItems","selectionControlName","isItemSelected","selectedSet","slice","handleToggleItem","getItemSelectionProps","joinStrings","selectionGroupLabel","itemSelectionLabel","useSingleSelection","multiSelectionProps","shiftPressed","setShiftPressed","lastClickedItem","setLastClickedItem","allItemsDisabled","allEnabledItemsSelected","allItemsCheckboxSelected","allItemsCheckboxIndeterminate","itemIndexesMap","getShiftSelectedItems","lastClickedItemIndex","currentItemIndex","start","end","selectItems","requestedItems","newSelectedItems","newItem","deselectItems","requestedItemsSet","selectedItem","handleToggleAll","getSelectAllProps","allItemsSelectionLabel","onShiftToggle","useMultiSelection","radioButtonRef","mergedRefs","strokeWidth","cx","cy","SelectionControl","onFocusUp","onFocusDown","focusedComponent","rowIndex","itemKey","sharedProps","isMultiSelection","navigationActive","useContext","SingleTabStopNavigationContext","setShiftState","shiftKey","InternalCheckbox","RadioButton","up","down","onKeyUp","nativeInput","htmlFor","title","stud","TableThElement","sortingStatus","sortingDisabled","hidden","cellRef","String","getTableColHeaderRoleProps","TableHeaderCell","activeSortingColumn","sortingDescending","onResizeFinish","resizerRoleDescription","sorted","getSortingStatus","isDescending","headerId","clickableHeaderRef","clickableHeaderTabIndex","onKeyPress","nativeEvent","editIconAriaLabel","parseInt","Thead","outerRef","onFocusMove","onSortingChange","singleSelectionHeaderAriaLabel","stuck","selectionColumnId","onFocusedComponentChange","setLastUserAction","headerCellClass","headerCellStyles","selectionCellClass","getTableHeaderRowRoleProps","focusControlElement","getAttribute","ScreenreaderOnly","calculateScrollingOffset","stickyRect","containerRect","scrollUpBy","amount","parent","scrollTop","scrollTo","pageYOffset","useStickyHeader","theadRef","secondaryTheadRef","secondaryTableRef","tableWrapperRef","isMobile","useMobile","syncColumnHeaderWidths","marginBlockStart","useLayoutEffect","scrollToItem","stickyRef","scrollToTop","scrollingOffset","insetBlockEnd","scrollToRow","scrollDist","forwardRef","theadProps","secondaryWrapperRef","onScroll","tableHasHeader","contentDensity","isStuck","StickyHeaderContext","setFocusedComponent","useImperativeHandle","setFocus","getVisualContextClassname","updatePosition","tableEl","wrapperEl","scrollbarEl","scrollbarContentEl","inScrollableContainer","tableInlineSize","wrapperInlineSize","scrollbarHeight","contains","requestAnimationFrame","wrapperElRect","tableElRect","globalVars","stickyVerticalBottomOffset","scrollbarRef","scrollbarContentRef","offsetScrollbar","setInScrollableContainer","getContainingBlock","observer","ResizeObserver","observe","disconnect","resizeHandler","useStickyScrollbar","getClosestCell","closest","isTableCell","GridNavigationProvider","keyboardNavigation","pageSize","getTable","navigationAPI","gridNavigation","GridNavigationProcessor","getTableStable","init","cleanup","update","SingleTabStopNavigationProvider","getNextFocusTarget","isElementSuppressed","onRegisterFocusable","onUnregisterActive","_pageSize","_table","focusedCell","keepUserIndex","focusableElement","focusedElement","preventScroll","moveFocusBy","firstTableCell","focusTarget","getFocusablesFrom","getNextFocusable","defaultIsSuppressed","onFocusin","HTMLElement","updateFocusedCell","_navigationAPI","updateFocusTarget","nextTarget","onKeydown","pageUp","pageDown","home","ctrlKey","altKey","metaKey","activeElement","isRegistered","from","onBlockStart","onBlockEnd","onPageUp","onPageDown","onHome","Infinity","onEnd","delta","rowElement","isNaN","elementIndex","prevColIndex","prevElementIndex","_f","_e","targetAriaRowIndex","targetRow","rowElements","reverse","findTableRowByAriaRowIndex","cellFocusables","nextElementIndex","isValidDirection","isValidIndex","isTargetDifferent","targetCell","tableRow","targetAriaColIndex","cellElements","findTableRowCellByAriaColIndex","targetCellFocusables","focusIndex","isFinite","isElementRegistered","getAllFocusables","el","HTMLInputElement","HTMLButtonElement","ToolsHeader","pagination","preferences","isHeaderString","assignHeaderId","CollectionLabelContext","assignId","headingId","isSmall","hasTools","tools","onClickCapture","onKeyDownCapture","enableKeyboardNavigation","numRows","focusableColumns","cols","unshift","maxColumnIndex","minColumnIndex","focusCell","func","row","cellIndex","iterateTableCells","rIndex","cIndex","editButton","scrollElementIntoView","shiftFocus","vertical","horizontal","newRowIndex","newColumnIndex","handleArrowKeyEvents","tableElement","Symbol","InternalTableAsSubstep","funnelSubStepProps","useFunnelSubStep","tableProps","__funnelSubStepProps","InternalTable","footer","stickyHeader","stickyHeaderVerticalOffset","onRowClick","onRowContextMenu","onEditCancel","onColumnWidthsChange","firstIndex","renderAriaLive","expandableRows","getLoadingStatus","prevStickyHeader","allItems","getExpandableItemProps","expandedSet","expandedItems","itemToDetail","getItemLevel","visibleItems","traverse","getItemChildren","setSize","posInSet","insertionIndex","insertionItem","isItemExpandable","expanded","useExpandableTableProps","allRows","getItemParent","status","currentParent","levelsDiff","rootLoadingStatus","useProgressiveLoadingProps","wrapperMeasureRef","useContainerQuery","rect","wrapperMeasureRefObject","wrapperMeasureMergedRef","tableWidth","tableMeasureRef","tableRefObject","stickyHeaderRef","_this","currentEditCell","setCurrentEditCell","lastSuccessfulEditCell","setLastSuccessfulEditCell","cancelEdit","_len","args","_key","__awaiter","isLoading","startEdit","cellId","checkEditing","checkLastSuccessfulEdit","completeEdit","editCancelled","fireCancelableEvent","useCellEditing","cellEditing","getHeaderText","toolsHeaderPerformanceMarkRef","headerStyles","innerText","performanceMarkAttributes","usePerformanceMarks","getAnalyticsMetadataProps","itemCount","instanceIdentifier","getComponentIdentifier","lastUserAction","capturedUserAction","loadingStartTime","metadata","performance","now","time","useEffectOnUpdate","loadingDuration","PerformanceMetrics","tableInteraction","userAction","interactionTime","round","interactionMetadata","componentIdentifier","noOfResourcesInTable","useTableInteractionMetrics","wrapperRefObject","handleScroll","targetElement","useScrollSync","onRowClickHandler","onRowContextMenuHandler","tableCell","details","clientX","clientY","useRowEvents","visibleColumnDefinitions","isRowSelected","isDevelopment","checkColumnWidths","checkSortingState","computedVariant","hasHeader","hasFooterPagination","headerIdRef","tableLabel","setHeaderRef","visibleColumnWidthsWithSelection","visibleColumnIdsWithSelection","hasEditableCells","col","widthsDetail","some","widths","wrapperProps","isScrollable","getTableWrapperRoleProps","getMouseDownTarget","mouseDownTargetRef","useMouseDownTarget","useTableFocusNavigation","toolsHeaderHeight","toolsHeaderWrapperMeasureRef","borderBoxHeight","toolsHeaderWrapper","colIndexOffset","LinkDefaultVariantContext","defaultVariant","InternalContainer","__fullPage","StickyHeader","disableHeaderPaddings","disableContentPaddings","__disableFooterPaddings","__disableFooterDivider","__disableStickyMobile","__stickyHeader","__mobileStickyOffset","__stickyOffset","lastIndex","visibleItemsCount","expandableProps","rowRoleProps","getTableRowRoleProps","getTableItemKey","getItemKey","sharedCellProps","onContextMenu","cellExpandableProps","innerContext","columnLabel","StickyScrollbar","Table","progressiveLoading","inlineEdit","def","disabledInlineEdit","properties","itemsCount","selectedItemsCount","sortingColumnId","getSortingColumnId","AnalyticsFunnelSubStep"],"sourceRoot":""}