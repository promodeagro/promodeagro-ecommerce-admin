{"version":3,"file":"static/js/687.9aac2ccb.chunk.js","mappings":"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","sources":["Views/Postlogin/Products/Numbers.js","Views/Postlogin/Products/index.js"],"sourcesContent":["import { Box } from '@cloudscape-design/components'\r\nimport ColumnLayout from '@cloudscape-design/components/column-layout'\r\nimport React, { act, useEffect, useState } from 'react'\r\nimport { useSelector,useDispatch } from 'react-redux'\r\n\r\n\r\nimport { fetchOrders } from 'Redux-Store/Orders/OrdersThunk'\r\n\r\n\r\nconst Numbers = ({products}) => {\r\n  const dispatch = useDispatch();\r\n  const ordersData = useSelector((state) => state.orders.ordersData);\r\n  const { data = [] } = ordersData;\r\n  useEffect(() => {\r\n    dispatch(fetchOrders());\r\n  }, [dispatch]);\r\n  //  console.log(data,\"orderssss\");\r\n  const [active, setActive] = useState([]);\r\n  const [inactive, setInactive] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    if (products.data) {\r\n      const activeProducts = [];\r\n      const inactiveProducts = [];\r\n  \r\n      products.data.map(e => {\r\n        if (e.active === true) {\r\n          activeProducts.push(e);\r\n        } else if (e.active === false) {\r\n          inactiveProducts.push(e);\r\n        }\r\n        return null; // Since map expects a return value, we return null here\r\n      });\r\n  \r\n      setActive(activeProducts);\r\n      setInactive(inactiveProducts);\r\n  \r\n\r\n    }\r\n  }, [products]);\r\n  \r\n  return (\r\n\r\n    <ColumnLayout columns={5} variant=\"default\" minColumnWidth={170}>\r\n    <div>\r\n      <Box variant=\"awsui-key-label\">\r\n        <p style={{ fontSize: 12 }}> Active Products</p>\r\n      </Box>\r\n      <span style={{ fontSize: 36, fontWeight: '900', lineHeight: 1.3, color: \"#0972D3\" }}>{active?.length}</span>\r\n    </div>\r\n    <div>\r\n      <Box variant=\"awsui-key-label\">\r\n        <p style={{ fontSize: 12 }}>Total Stock</p>\r\n      </Box>\r\n      <span style={{ fontSize: 36, fontWeight: '900', lineHeight: 1.3, color: \"#0972D3\" }}>436K</span>\r\n    </div>\r\n    <div>\r\n      <Box variant=\"awsui-key-label\">\r\n        <p style={{ fontSize: 12 }}>Total Orders</p>\r\n      </Box>\r\n      <span style={{ fontSize: 36, fontWeight: '900', lineHeight: 1.3, color: \"#0972D3\" }}>{data.items?.length}</span>\r\n    </div>\r\n    <div>\r\n      <Box variant=\"awsui-key-label\">\r\n        <p style={{ fontSize: 12 }}>Net Profit</p>\r\n      </Box>\r\n      <span style={{ fontSize: 36, fontWeight: '900', lineHeight: 1.3, color: \"#0972D3\" }}>₹123K</span>\r\n    </div>\r\n    <div>\r\n      <Box variant=\"awsui-key-label\">\r\n        <p style={{ fontSize: 12 }}>Inactive Products</p>\r\n      </Box>\r\n      <span style={{ fontSize: 36, fontWeight: '900', lineHeight: 1.3, color: \"#0972D3\" }}>{inactive?.length}</span>\r\n    </div>\r\n  </ColumnLayout>\r\n  )\r\n}\r\n\r\nexport default Numbers","import React, { useEffect,useState,useRef,useCallback } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Header,\r\n  SpaceBetween,\r\n  ContentLayout,\r\n  Table,\r\n  BreadcrumbGroup,\r\n  Toggle,\r\n  TextFilter,\r\n  Select,\r\n  Input,\r\n  Modal,\r\n  Flashbar,\r\n  FormField,\r\n  Spinner\r\n} from \"@cloudscape-design/components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  fetchProducts,\r\n  PutToggle,\r\n  putPricingById,\r\n\r\n} from \"Redux-Store/Products/ProductThunk\";\r\nimport { resetProducts } from \"Redux-Store/Products/ProductsSlice\";\r\nimport \"../../../assets/styles/CloudscapeGlobalstyle.css\";\r\nimport Numbers from \"./Numbers\";\r\n\r\nconst Products = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const { data = [], nextKey, status, error } = useSelector((state) => state.products.products);\r\n\r\n  const [selectedItems, setSelectedItems] = useState([]);\r\n  const [filteringText, setFilteringText] = useState(\"\");\r\n  const [selectedCategory, setSelectedCategory] = useState(\"All\");\r\n  const [selectedStatus, setSelectedStatus] = useState(\"All\");\r\n  const [editedProducts, setEditedProducts] = useState({});\r\n  const [isModalVisible, setModalVisible] = useState(false);\r\n  const [isModalVisible1, setModalVisible1] = useState(false);\r\n  const [isBulkModifySuccess, setBulkModifySuccess] = useState(false);\r\n  const [isBulkModifySuccessflash, setBulkModifySuccessflash] = useState(false);\r\n  const [validationErrors, setValidationErrors] = useState({});\r\n  const [isToggle, setIsToggle] = useState(false);\r\n  const [toggleItem, setToggleItem] = useState(null);\r\n  const [isFetching, setIsFetching] = useState(false);\r\n\r\n  const observer = useRef();\r\n\r\n  useEffect(() => {\r\n    // Reset products when filters change\r\n    dispatch(resetProducts());\r\n\r\n    // Fetch initial products\r\n    dispatch(fetchProducts({\r\n      search: filteringText,\r\n      category: selectedCategory,\r\n      active:selectedStatus,\r\n    }));\r\n  }, [dispatch,selectedStatus, filteringText, selectedCategory]);\r\n\r\n  const handleInputChange = (id, field, value) => {\r\n    setEditedProducts(prev => ({\r\n      ...prev,\r\n      [id]: {\r\n        ...prev[id],\r\n        [field]: value,\r\n      },\r\n    }));\r\n    \r\n    validateField(id, field, value);\r\n  };\r\n\r\n  const validateField = (id, field, value) => {\r\n    const osp = value;\r\n    const cp = field === \"compareAt\" ? value : editedProducts[id]?.compareAt || \"\";\r\n    let errors = {};\r\n\r\n    if (field === \"onlineStorePrice\" && !osp) {\r\n      errors.onlineStorePrice = \"Required!\";\r\n    }\r\n\r\n    if (field === \"compareAt\") {\r\n      if (!cp) {\r\n        errors.compareAt = \"Required!\";\r\n      } else if (parseFloat(cp) < parseFloat(osp)) {\r\n        errors.compareAt = \"CP must be greater than OSP\";\r\n      }\r\n    }\r\n\r\n    setValidationErrors(prevErrors => ({\r\n      ...prevErrors,\r\n      [id]: errors,\r\n    }));\r\n  };\r\n\r\n  const confirmToggleChange = () => {\r\n    const newStatus = !toggleItem.active;\r\n\r\n    dispatch(PutToggle({ id: toggleItem.id, active: newStatus })).then(response => {\r\n      if (response.meta.requestStatus === \"fulfilled\" && response.payload.status === 200) {\r\n    // Fetch initial products\r\n    dispatch(fetchProducts({\r\n      search: filteringText,\r\n      category: selectedCategory,\r\n      active:selectedStatus,\r\n    }));\r\n      } else {\r\n           // Fetch initial products\r\n    dispatch(fetchProducts({\r\n      search: filteringText,\r\n      category: selectedCategory,\r\n    }));\r\n      }\r\n    });\r\n\r\n    setIsToggle(true);\r\n    setModalVisible(false);\r\n\r\n    setTimeout(() => {\r\n      setIsToggle(false);\r\n    }, 5000);\r\n  };\r\n  const handleToggleChange = (item) => {\r\n    setToggleItem(item);\r\n    setModalVisible(true);\r\n  };\r\n\r\n  const handleSelectChange = ({ detail }) => {\r\n    setSelectedCategory(detail.selectedOption.value);\r\n  };\r\n  const handleSelectionChangeStatus = ({ detail }) => {\r\n    setSelectedStatus(detail.selectedOption.value);\r\n  };\r\n\r\n\r\n  const handleSearchChange = (e) => {\r\n    setFilteringText(e.detail.filteringText);\r\n  };\r\n\r\n  const selectOptions = [\r\n    { label: \"All\", value: \"All\" },\r\n    { label: \"Leafy Vegetables\", value: \"Leafy Vegetables\" },\r\n    { label: \"Fruit\", value: \"Fruit\" },\r\n    { label: \"Vegetable\", value: \"Vegetable\" },\r\n    { label: \"Bengali Vegetable\", value: \"Bengali Vegetable\" },\r\n  ];\r\n  const selectOptionsStatus = [\r\n    { label: \"All\", value: \"All\" },\r\n    { label: \"Active\", value: \"true\" },\r\n    { label: \"Inactive\", value: \"false\" },\r\n\r\n  ];\r\n\r\n  const handleSelectionChange = ({ detail }) => {\r\n    setSelectedItems(detail.selectedItems);\r\n  };\r\n\r\n  const handleBulkModifyPrice = () => {\r\n    if (validateInputs()) {\r\n      setModalVisible1(true);\r\n    }\r\n  };\r\n\r\n  const validateInputs = () => {\r\n    let valid = true;\r\n    const errors = {};\r\n\r\n    selectedItems.forEach(item => {\r\n      const editedProduct = editedProducts[item.id] || {};\r\n      const osp = editedProduct.onlineStorePrice || item.onlineStorePrice;\r\n      const cp = editedProduct.compareAt || item.compareAt;\r\n      let itemErrors = {};\r\n\r\n      if (!osp) {\r\n        valid = false;\r\n        itemErrors.onlineStorePrice = \"Required!\";\r\n      }\r\n\r\n      if (!cp) {\r\n        valid = false;\r\n        itemErrors.compareAt = \"Required!\";\r\n      } else if (parseFloat(cp) < parseFloat(osp)) {\r\n        valid = false;\r\n        itemErrors.compareAt = \"CP must be greater than OSP\";\r\n      }\r\n\r\n      if (Object.keys(itemErrors).length > 0) {\r\n        errors[item.id] = itemErrors;\r\n      }\r\n    });\r\n\r\n    setValidationErrors(errors);\r\n    return valid;\r\n  };\r\n\r\n  const handleModalConfirm = async () => {\r\n    const pricingDataArray = selectedItems.map(item => ({\r\n      id: item.id,\r\n      compareAt: parseFloat(editedProducts[item.id]?.compareAt || item.compareAt),\r\n      onlineStorePrice: parseFloat(editedProducts[item.id]?.onlineStorePrice || item.onlineStorePrice),\r\n    }));\r\n\r\n    try {\r\n      const response = await dispatch(putPricingById(pricingDataArray));\r\n\r\n      if (response.meta.requestStatus === \"fulfilled\" && response.payload.status === 200) {\r\n        setBulkModifySuccessflash(true);\r\n        setBulkModifySuccess(true);\r\n        setSelectedItems([]);\r\n        setModalVisible1(false);\r\n      } else {\r\n        setBulkModifySuccessflash(true);\r\n        setBulkModifySuccess(true);\r\n        setSelectedItems([]);\r\n        setModalVisible1(false);\r\n      }\r\n\r\n      setTimeout(() => {\r\n        setBulkModifySuccessflash(false);\r\n      }, 5000);\r\n    } catch (err) {\r\n      console.error(\"Failed to update product pricing:\", err);\r\n      setBulkModifySuccess(false);\r\n    }\r\n  };\r\n\r\n  const navigateToStore = () => {\r\n    const baseCategoryUrl = \"https://promodeagro.com\";\r\n    const categoryUrlPart = {\r\n      \"Leafy Vegetables\": \"/category/VEGETABLES/Leafy%20Vegetables\",\r\n      \"Fruit\": \"/category/Fruits/Fresh%20Fruits\",\r\n      \"Vegetable\": \"/category/VEGETABLES/Fresh%20Vegetables\",\r\n      \"Bengali Vegetable\": \"/category/VEGETABLES/Bengali%20Vegetables\",\r\n    }[selectedCategory] || \"\";\r\n\r\n    window.open(`${baseCategoryUrl}${categoryUrlPart}`, \"_blank\");\r\n  };\r\n\r\n  \r\n  const [items1, setItems] = \r\n  \r\n  useState([\r\n    {\r\n      type: \"info\",\r\n      dismissible: true,\r\n      dismissLabel: \"Dismiss message\",\r\n      onDismiss: () => setItems([]),\r\n      content: (\r\n        <>\r\n          <b>Price updated successfully! </b>\r\n          <p>The new price is now live on the online store</p>\r\n        </>\r\n      ),\r\n      id: \"message_1\",\r\n    },\r\n  ]);\r\n  const [flashbarItems, setFlashbarItems] = useState([\r\n    {\r\n      type: \"info\",\r\n      dismissible: true,\r\n      dismissLabel: \"Dismiss message\",\r\n      onDismiss: () => setFlashbarItems([]),\r\n      content: (\r\n        <>\r\n          <b>Status Updated successfully </b>\r\n          <p>Toggle status have been updated successfully</p>\r\n        </>\r\n      ),\r\n      id: \"message_1\",\r\n    },\r\n  ]);\r\n\r\n\r\n\r\n  // Infinite Scroll Logic\r\n  const lastProductRef = useCallback(node => {\r\n    if (status === 'loading') return;\r\n    if (observer.current) observer.current.disconnect();\r\n    observer.current = new IntersectionObserver(entries => {\r\n      if (entries[0].isIntersecting && nextKey) {\r\n        setIsFetching(true);\r\n        dispatch(fetchProducts({\r\n          search: filteringText,\r\n          category: selectedCategory,\r\n          nextKey: nextKey,\r\n        })).finally(() => setIsFetching(false));\r\n      }\r\n    });\r\n    if (node) observer.current.observe(node);\r\n  }, [status, nextKey, dispatch, filteringText, selectedCategory]);\r\n\r\n  return (\r\n    <ContentLayout\r\n    notifications={\r\n      <>\r\n        {/* Always render Flashbar with flashbarItems */}\r\n        {isToggle && <Flashbar items={flashbarItems} />}\r\n    \r\n        {/* Conditionally render Flashbar based on isBulkModifySuccess */}\r\n        {isBulkModifySuccessflash && <Flashbar items={items1} />}\r\n      </>\r\n    }\r\n    \r\n\r\n      breadcrumbs={\r\n        <BreadcrumbGroup\r\n          items={[\r\n            { text: \"Dashboard\", href: \"/app/dashboard\" },\r\n            { text: \"Products\", href: \"/app/dashboard/products\" },\r\n          ]}\r\n          ariaLabel=\"Breadcrumbs\"\r\n        />\r\n      }\r\n      headerVariant=\"high-contrast\"\r\n      header={\r\n        <Header\r\n          actions={\r\n            <SpaceBetween alignItems=\"center\" direction=\"horizontal\" size=\"xs\">\r\n              {/* <Button variant=\"normal\">Export</Button> */}\r\n            </SpaceBetween>\r\n          }\r\n          variant=\"h1\"\r\n        >\r\n          Products\r\n        </Header>\r\n      }\r\n    >\r\n\r\n      <SpaceBetween direction=\"vertical\" size=\"s\">\r\n        <Container>\r\n          <Numbers products={{ data, nextKey, status, error }} />\r\n        </Container>\r\n\r\n        <div>\r\n          <Table\r\n            header={\r\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                <div style={{ display: \"flex\", gap: \"8px\" }}>\r\n                  <div style={{ width: \"360px\" }}>\r\n                    <TextFilter\r\n                      filteringPlaceholder=\"Search\"\r\n                      filteringText={filteringText}\r\n                      onChange={handleSearchChange}\r\n                    />\r\n                  </div>\r\n                  <div style={{ width: \"110px\" }}>\r\n                    <Select\r\n                      options={selectOptions}\r\n                      selectedOption={selectOptions.find(\r\n                        (option) => option.value === selectedCategory\r\n                      )}\r\n                      onChange={handleSelectChange}\r\n                      placeholder=\"Select Category\"\r\n                    />\r\n                  </div>\r\n                  <div style={{ width: \"100px\" }}>\r\n                    <Select\r\n                      options={selectOptionsStatus}\r\n                      selectedOption={selectOptionsStatus.find(\r\n                        (option) => option.value === selectedStatus\r\n                      )}\r\n                      onChange={handleSelectionChangeStatus}\r\n                      placeholder=\"Select Status\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div style={{ display: \"flex\", gap: \"5px\" }}>\r\n                  {isBulkModifySuccess && (\r\n                    <Button variant=\"normal\" onClick={navigateToStore}>\r\n                      View On Store\r\n                    </Button>\r\n                  )}\r\n                    <Button\r\n                      disabled={selectedItems.length === 0}\r\n                      variant=\"normal\"\r\n                      onClick={handleBulkModifyPrice}\r\n                    >\r\n                      Bulk Modify Price\r\n                    </Button>\r\n              \r\n                </div>\r\n                \r\n              </div>\r\n            }\r\n            variant=\"borderless\"\r\n            columnDefinitions={[\r\n              {\r\n                id: \"code\",\r\n                header: \"Item Code\",\r\n                cell: (item) => (\r\n                  <Link to={`/app/products/${item.id}`}>{item.itemCode}</Link>\r\n                ),\r\n              },\r\n              {\r\n                id: \"name\",\r\n                header: \"Name\",\r\n                cell: (item) => (\r\n                  <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                    <img\r\n                      src={item?.images[0]}\r\n                      alt={item.name}\r\n                      height={35}\r\n                      width={35}\r\n                      style={{ borderRadius: \"8px\", marginRight: \"10px\" }}\r\n                    />\r\n                    <p style={{ width: \"90px\" }}>{item.name}</p>\r\n                  </div>\r\n                ),\r\n              },\r\n              {\r\n                id: \"category\",\r\n                header: \"Category\",\r\n                cell: (item) => <Box textAlign=\"center\">{item?.category}</Box>,\r\n              },\r\n              {\r\n                id: \"stock\",\r\n                header: \"On Hand Quantity\",\r\n                cell: (item) => (\r\n                  <Box textAlign=\"center\">\r\n                    {item?.stockQuantity}/{item?.units}\r\n                  </Box>\r\n                ),\r\n              },\r\n              {\r\n                id: \"alert\",\r\n                header: \"Stock Alert\",\r\n                cell: (item) => (\r\n                  <p style={{ color: \"#0972D3\", textAlign: \"center\" }}>\r\n                    Available\r\n                  </p>\r\n                ),\r\n              },\r\n              {\r\n                id: \"onlineStorePrice\",\r\n                header: \"Online Price\",\r\n                cell: (item) => (\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <FormField\r\n                      errorText={validationErrors[item.id]?.onlineStorePrice}\r\n                    >\r\n                      <Input\r\n                        disabled={\r\n                          !selectedItems.some(\r\n                            (selectedItem) => selectedItem.id === item.id\r\n                          )\r\n                        }\r\n                        placeholder=\"Enter Price\"\r\n                        type=\"number\"\r\n                        value={\r\n                          editedProducts[item.id]?.onlineStorePrice ??\r\n                          item.onlineStorePrice\r\n                        }\r\n                        onChange={(e) =>\r\n                          handleInputChange(\r\n                            item.id,\r\n                            \"onlineStorePrice\",\r\n                            e.detail.value\r\n                          )\r\n                        }\r\n                        ariaLabel=\"online store price\"\r\n                      />\r\n                    </FormField>\r\n                  </div>\r\n                ),\r\n              },\r\n              {\r\n                id: \"compareAt\",\r\n                header: \"Compare Price\",\r\n                cell: (item) => (\r\n                  <div style={{ width: \"80px\" }}>\r\n                    <FormField errorText={validationErrors[item.id]?.compareAt}>\r\n                      <Input\r\n                        placeholder=\"Enter Price\"\r\n                        type=\"number\"\r\n                        value={\r\n                          editedProducts[item.id]?.compareAt ?? item.compareAt\r\n                        }\r\n                        onChange={(e) =>\r\n                          handleInputChange(\r\n                            item.id,\r\n                            \"compareAt\",\r\n                            e.detail.value\r\n                          )\r\n                        }\r\n                        ariaLabel=\"compare at price\"\r\n                        disabled={\r\n                          !selectedItems.some(\r\n                            (selectedItem) => selectedItem.id === item.id\r\n                          )\r\n                        }\r\n                      />\r\n                    </FormField>\r\n                  </div>\r\n                ),\r\n              },\r\n              {\r\n                id: \"status\",\r\n                header: \"Status\",\r\n                cell: (item) => (\r\n                  <div style={{ width: \"90px\" }}>\r\n                    <Toggle\r\n                      onChange={() => handleToggleChange(item)}\r\n                      checked={item.active}\r\n                    >\r\n                      <p>{item.active ? \"Active\" : \"Inactive\"}</p>\r\n                    </Toggle>\r\n                  </div>\r\n                ),\r\n              },\r\n\r\n            ]}\r\n            selectedItems={selectedItems}\r\n            onSelectionChange={handleSelectionChange}\r\n            items={data}\r\n            selectionType=\"multi\"\r\n          />\r\n          {/* Sentinel element for infinite scrolling */}\r\n          <div ref={lastProductRef} style={{ height: '20px' }}>\r\n            {isFetching && <Spinner />}\r\n          </div>\r\n        </div>\r\n        {status === 'failed' && <Box color=\"red\">{error}</Box>}\r\n      </SpaceBetween>\r\n      <Modal\r\n     \r\n     visible={isModalVisible1}\r\n     onDismiss={() => setModalVisible1(false)}\r\n     header=\"Confirm Bulk Modify\"\r\n     footer={\r\n       <SpaceBetween direction=\"horizontal\" size=\"xs\">\r\n         <Button variant=\"link\" onClick={() => setModalVisible1(false)}>\r\n           Cancel\r\n         </Button>\r\n         <Button variant=\"primary\" onClick={handleModalConfirm}>\r\n           Confirm\r\n         </Button>\r\n       </SpaceBetween>\r\n     }\r\n   >\r\n     Are you sure you want to bulk modify the prices for the selected items?\r\n   </Modal>\r\n   {/* Modal for confirmation */}\r\n   <Modal\r\n        onDismiss={() => setModalVisible(false)}\r\n     visible={isModalVisible}\r\n     closeAriaLabel=\"Close modal\"\r\n     header=\"Confirm Status Change\"\r\n     footer={\r\n       <Box float=\"right\">\r\n         <SpaceBetween direction=\"horizontal\" size=\"xs\">\r\n         <Button variant=\"link\" onClick={() => setModalVisible(false)}>\r\n           Cancel\r\n         </Button>\r\n           <Button onClick={confirmToggleChange} variant=\"primary\">\r\n             Confirm\r\n           </Button>\r\n         </SpaceBetween>\r\n       </Box>\r\n     }\r\n   >\r\n     Are you sure you want to {toggleItem?.active ? \"deactivate\" : \"activate\"} this product?\r\n   </Modal>\r\n    </ContentLayout>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n"],"names":["_ref","_data$items","products","dispatch","useDispatch","ordersData","useSelector","state","orders","data","useEffect","fetchOrders","active","setActive","useState","inactive","setInactive","activeProducts","inactiveProducts","map","e","push","_jsxs","ColumnLayout","columns","variant","minColumnWidth","children","_jsx","Box","style","fontSize","fontWeight","lineHeight","color","length","items","Products","nextKey","status","error","selectedItems","setSelectedItems","filteringText","setFilteringText","selectedCategory","setSelectedCategory","selectedStatus","setSelectedStatus","editedProducts","setEditedProducts","isModalVisible","setModalVisible","isModalVisible1","setModalVisible1","isBulkModifySuccess","setBulkModifySuccess","isBulkModifySuccessflash","setBulkModifySuccessflash","validationErrors","setValidationErrors","isToggle","setIsToggle","toggleItem","setToggleItem","isFetching","setIsFetching","observer","useRef","resetProducts","fetchProducts","search","category","handleInputChange","id","field","value","prev","validateField","_editedProducts$id","osp","cp","compareAt","errors","onlineStorePrice","parseFloat","prevErrors","selectOptions","label","selectOptionsStatus","validateInputs","valid","forEach","item","editedProduct","itemErrors","Object","keys","items1","setItems","type","dismissible","dismissLabel","onDismiss","content","_Fragment","flashbarItems","setFlashbarItems","lastProductRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","finally","observe","ContentLayout","notifications","Flashbar","breadcrumbs","BreadcrumbGroup","text","href","ariaLabel","headerVariant","header","Header","actions","SpaceBetween","alignItems","direction","size","Container","Numbers","Table","display","justifyContent","gap","width","TextFilter","filteringPlaceholder","onChange","detail","Select","options","selectedOption","find","option","placeholder","_ref2","Button","onClick","navigateToStore","categoryUrlPart","window","open","concat","disabled","handleBulkModifyPrice","columnDefinitions","cell","Link","to","itemCode","src","images","alt","name","height","borderRadius","marginRight","textAlign","stockQuantity","units","_validationErrors$ite","_editedProducts$item$3","_editedProducts$item$4","FormField","errorText","Input","some","selectedItem","_validationErrors$ite2","_editedProducts$item$5","_editedProducts$item$6","Toggle","handleToggleChange","checked","onSelectionChange","_ref3","selectionType","ref","Spinner","Modal","visible","footer","async","pricingDataArray","_editedProducts$item$","_editedProducts$item$2","response","putPricingById","meta","requestStatus","payload","setTimeout","err","console","closeAriaLabel","float","confirmToggleChange","newStatus","PutToggle","then"],"sourceRoot":""}