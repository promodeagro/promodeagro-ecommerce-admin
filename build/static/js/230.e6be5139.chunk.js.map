{"version":3,"file":"static/js/230.e6be5139.chunk.js","mappings":"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","sources":["Views/Postlogin/Products/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  ColumnLayout,\r\n  Container,\r\n  Header,\r\n  SpaceBetween,\r\n  ContentLayout,\r\n  Table,\r\n  BreadcrumbGroup,\r\n  Toggle\r\n} from '@cloudscape-design/components';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchProducts, PutToggle } from 'Redux-Store/Products/ProductThunk';\r\nimport \"../../../assets/styles/CloudscapeGlobalstyle.css\"\r\n\r\nconst Products = () => {\r\n  const dispatch = useDispatch();\r\n  const products = useSelector((state) => state.products.products);\r\n  const { data = [] } = products;\r\n  const [activeButton, setActiveButton] = useState('All');\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchProducts());\r\n  }, [dispatch]);\r\n\r\n  const handleButtonClick = (button) => {\r\n    setActiveButton(button);\r\n  };\r\n\r\n  const getStatusStyle = (status) => {\r\n    switch (status) {\r\n      case 'Inactive':\r\n        return { backgroundColor: '#0972D3', color: 'white', padding: '2px 5px', borderRadius: '4px' };\r\n      case 'Active':\r\n        return { backgroundColor: 'green', color: 'white', padding: '2px 5px', borderRadius: '4px' };\r\n      case 'Stopped':\r\n        return { backgroundColor: 'red', color: 'white', padding: '2px 5px', borderRadius: '4px' };\r\n      default:\r\n        return {};\r\n    }\r\n  };\r\n\r\n  const getStockAlertStyle = (stockAlert) => {\r\n    switch (stockAlert) {\r\n      case 'Low':\r\n        return { color: 'red' };\r\n      case 'Available':\r\n        return { color: 'blue' };\r\n      default:\r\n        return {};\r\n    }\r\n  };\r\n\r\n  // Handle toggle change\r\n  const handleToggleChange = (item) => {\r\n    const newStatus = !item.active;\r\n    // Optimistically update the local state\r\n    // const updatedProducts = data.map((product) =>\r\n    //   product.id === item.id ? { ...product, active: newStatus } : product\r\n    // );\r\n\r\n    dispatch(PutToggle({ id: item.id, active: newStatus })).then((response) => {\r\n      if (response.meta.requestStatus === 'fulfilled' && response.payload.status === 200) {\r\n        // Update the local state and Redux store only if the request was successful\r\n        dispatch(fetchProducts());\r\n      } else {\r\n        // Revert back to the original state if the request fails\r\n        dispatch(fetchProducts());\r\n      }\r\n    });\r\n  };\r\n\r\n  // Filter products based on the active button\r\n  const filteredProducts = activeButton === 'All' ? data : data.filter(product => product.active === (activeButton === 'Active'));\r\n\r\n  return (\r\n    <ContentLayout\r\n      breadcrumbs={\r\n        <BreadcrumbGroup\r\n          items={[\r\n            { text: \"Dashboard\", href: \"/app/dashboard\" },\r\n            { text: \"Products\", href: \"/app/dashboard/products\" }\r\n          ]}\r\n          ariaLabel=\"Breadcrumbs\"\r\n        />\r\n      }\r\n      headerVariant=\"high-contrast\"\r\n      header={\r\n        <Header\r\n          actions={\r\n            <SpaceBetween alignItems=\"center\" direction=\"horizontal\" size=\"xs\">\r\n              <Button variant=\"normal\">Export</Button>\r\n            </SpaceBetween>\r\n          }\r\n          variant=\"h1\"\r\n        >\r\n          Products\r\n        </Header>\r\n      }\r\n    >\r\n      <SpaceBetween direction=\"vertical\" size=\"s\">\r\n        <Container>\r\n          <ColumnLayout columns={5} variant=\"default\" minColumnWidth={170}>\r\n            {/* Dashboard Metrics */}\r\n            <div>\r\n              <Box variant=\"awsui-key-label\">\r\n                <p style={{ fontSize: 12 }}>Total Published Products</p>\r\n              </Box>\r\n              <span style={{ fontSize: 36, fontWeight: '900', lineHeight: 1.3, color: \"#0972D3\" }}>123</span>\r\n            </div>\r\n            <div>\r\n              <Box variant=\"awsui-key-label\">\r\n                <p style={{ fontSize: 12 }}>Total Stock</p>\r\n              </Box>\r\n              <span style={{ fontSize: 36, fontWeight: '900', lineHeight: 1.3, color: \"#0972D3\" }}>â‚¹436K</span>\r\n            </div>\r\n            <div>\r\n              <Box variant=\"awsui-key-label\">\r\n                <p style={{ fontSize: 12 }}>Total Orders</p>\r\n              </Box>\r\n              <span style={{ fontSize: 36, fontWeight: '900', lineHeight: 1.3, color: \"#0972D3\" }}>123</span>\r\n            </div>\r\n            <div>\r\n              <Box variant=\"awsui-key-label\">\r\n                <p style={{ fontSize: 12 }}>Net Profit</p>\r\n              </Box>\r\n              <span style={{ fontSize: 36, fontWeight: '900', lineHeight: 1.3, color: \"#0972D3\" }}>1238K</span>\r\n            </div>\r\n            <div>\r\n              <Box variant=\"awsui-key-label\">\r\n                <p style={{ fontSize: 12 }}>Stopped Products</p>\r\n              </Box>\r\n              <span style={{ fontSize: 36, fontWeight: '900', lineHeight: 1.3, color: \"#0972D3\" }}>12</span>\r\n            </div>\r\n          </ColumnLayout>\r\n        </Container>\r\n\r\n        <div>\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <span>\r\n              {['All', 'Inactive', 'Active'].map((button) => (\r\n                <button\r\n                  key={button}\r\n                  onClick={() => handleButtonClick(button)}\r\n                  style={{\r\n                    border: activeButton === button ? '2px solid black' : 'none',\r\n                    color: activeButton === button ? 'black' : 'gray',\r\n                    backgroundColor: 'white',\r\n                    fontWeight: activeButton === button ? 'bolder' : 'normal',\r\n                    padding: '8px 16px',\r\n                    cursor: 'pointer',\r\n                    borderRadius: \"32px\"\r\n                  }}\r\n                >\r\n                  {button}\r\n                </button>\r\n              ))}\r\n            </span>\r\n            <Button variant='normal'>Set Price</Button>\r\n          </div>\r\n          <Container variant='borderless' fitHeight={500}>\r\n            <Table\r\n              variant='borderless'\r\n              columnDefinitions={[\r\n                {\r\n                  id: 'code',\r\n                  header: 'Item Code',\r\n                  cell: item => <Link to={`/app/products/${item.id}`}>{item.itemCode}</Link>,\r\n                },\r\n                {\r\n                  id: 'name',\r\n                  header: 'Name',\r\n                  cell: item => (\r\n                    <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                      <img src={item.images} alt={item.name} height={35} width={35} style={{ borderRadius: '8px', marginRight: '10px' }} />\r\n                      {item.name}\r\n                    </div>\r\n                  ),\r\n                },\r\n                {\r\n                  id: 'Category',\r\n                  header: 'Category',\r\n                  cell: item => item.category,\r\n                  sortingField: \"category\"\r\n                },\r\n                {\r\n                  id: 'allocatedStock',\r\n                  header: 'Allocated Stock',\r\n                  cell: item => item.stockQuantity,\r\n                  sortingField: \"allocatedStock\"\r\n                },\r\n                {\r\n                  id: 'stockAlert',\r\n                  header: 'Stock Alert',\r\n                  cell: item => <span style={getStockAlertStyle(item.stockAlert)}>{item.stockAlert}</span>,\r\n                  sortingField: \"stockAlert\"\r\n                },\r\n                {\r\n                  id: 'active',\r\n                  header: 'Status',\r\n                  cell: item => (\r\n                    <span style={getStatusStyle(item.active)}>\r\n                      <Toggle\r\n                        onChange={() => handleToggleChange(item)}\r\n                        checked={item.active}\r\n                      >\r\n                        {item.active ? 'Active' : 'Inactive'}\r\n                      </Toggle>\r\n                    </span>\r\n                  ),\r\n                  sortingField: \"status\"\r\n                }\r\n              ]}\r\n              items={filteredProducts}\r\n              selectionType=\"multi\"\r\n            />\r\n          </Container>\r\n        </div>\r\n      </SpaceBetween>\r\n    </ContentLayout>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n"],"names":["Products","dispatch","useDispatch","products","useSelector","state","data","activeButton","setActiveButton","useState","useEffect","fetchProducts","getStatusStyle","status","backgroundColor","color","padding","borderRadius","getStockAlertStyle","stockAlert","filteredProducts","filter","product","active","_jsx","ContentLayout","breadcrumbs","BreadcrumbGroup","items","text","href","ariaLabel","headerVariant","header","Header","actions","SpaceBetween","alignItems","direction","size","children","Button","variant","_jsxs","Container","ColumnLayout","columns","minColumnWidth","Box","style","fontSize","fontWeight","lineHeight","display","justifyContent","map","button","onClick","handleButtonClick","border","cursor","fitHeight","Table","columnDefinitions","id","cell","item","Link","to","concat","itemCode","src","images","alt","name","height","width","marginRight","category","sortingField","stockQuantity","Toggle","onChange","newStatus","PutToggle","then","response","meta","requestStatus","payload","handleToggleChange","checked","selectionType"],"sourceRoot":""}