{"version":3,"file":"static/js/230.b38dd096.chunk.js","mappings":"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","sources":["Views/Postlogin/Products/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Box,\n  Button,\n  ColumnLayout,\n  Container,\n  Header,\n  SpaceBetween,\n  ContentLayout,\n  Table,\n  BreadcrumbGroup,\n  Toggle,\n  TextFilter,\n  Select,\n  Pagination,\n  Input,\n  Modal\n} from '@cloudscape-design/components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchProducts, PutToggle, putPricingById } from 'Redux-Store/Products/ProductThunk';\nimport \"../../../assets/styles/CloudscapeGlobalstyle.css\";\n\nconst Products = () => {\n  const dispatch = useDispatch();\n  const products = useSelector((state) => state.products.products);\n  const { data = [] } = products;\n\n  const [activeButton, setActiveButton] = useState('All');\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const productsPerPage = 10;\n  const [filteringText, setFilteringText] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState(\"All\");\n\n  const [editedProducts, setEditedProducts] = useState({});\n  const [isModalVisible, setModalVisible] = useState(false);\n  const [isBulkModifySuccess, setBulkModifySuccess] = useState(false); \n  useEffect(() => {\n    dispatch(fetchProducts());\n  }, [dispatch]);\n\n  const handleInputChange = (id, field, value) => {\n    setEditedProducts(prev => ({\n      ...prev,\n      [id]: {\n        ...prev[id],\n        [field]: value\n      }\n    }));\n  };\n\n  const getStockAlertStyle = (stockAlert) => {\n    switch (stockAlert) {\n      case 'Low':\n        return { color: 'red' };\n      case 'Available':\n        return { color: 'blue' };\n      default:\n        return {};\n    }\n  };\n\n  const handleToggleChange = (item) => {\n    const newStatus = !item.active;\n\n    dispatch(PutToggle({ id: item.id, active: newStatus })).then((response) => {\n      if (response.meta.requestStatus === 'fulfilled' && response.payload.status === 200) {\n        dispatch(fetchProducts());\n      } else {\n        dispatch(fetchProducts());\n      }\n    });\n  };\n\n  const filteredProducts = data\n    ? data.filter((item) => {\n        const matchesStatus =\n          activeButton === 'All' ||\n          item.active === (activeButton === 'Active');\n        const matchesSearch =\n          item.itemCode.toLowerCase().includes(filteringText.toLowerCase()) ||\n          item.name.toLowerCase().includes(filteringText.toLowerCase()) ||\n          (item.active ? 'active' : 'inactive').includes(filteringText.toLowerCase());\n        const matchesCategory =\n          selectedCategory === 'All' || item.category === selectedCategory;\n\n        return matchesStatus && matchesSearch && matchesCategory;\n      })\n    : [];\n\n  const indexOfLastProduct = currentPage * productsPerPage;\n  const indexOfFirstProduct = indexOfLastProduct - productsPerPage;\n  const currentProducts = filteredProducts.slice(\n    indexOfFirstProduct,\n    indexOfLastProduct\n  );\n\n  const handlePageChange = (pageIndex) => {\n    setCurrentPage(pageIndex + 1);\n  };\n\n  const handleSelectChange = ({ detail }) => {\n    setSelectedCategory(detail.selectedOption.value);\n    setCurrentPage(1);\n  };\n\n  const handleSearchChange = (e) => {\n    setFilteringText(e.detail.filteringText);\n    setCurrentPage(1);\n  };\n\n  const selectOptions = [\n    { label: \"All\", value: \"All\" },\n    { label: \"Leafy\", value: \"Leafy\" },\n    { label: \"Fruit\", value: \"Fruit\" },\n    { label: \"Vegetable\", value: \"Vegetable\" },\n    { label: \"Bengali Vegetable\", value: \"Bengali Vegetable\" },\n  ];\n\n  const handleSelectionChange = ({ detail }) => {\n    setSelectedItems(detail.selectedItems);\n  };\n\n  const handleBulkModifyPrice = () => {\n    setModalVisible(true);\n  };\n  const confirmBulkModifyPrice = () => {\n    let success = true;\n\n    selectedItems.forEach(item => {\n      const pricingData = {\n        onlineStorePrice: editedProducts[item.id]?.onlineStorePrice || item.onlineStorePrice,\n        compareAt: editedProducts[item.id]?.compareAt || item.compareAt\n      };\n\n      dispatch(putPricingById({ id: item.id, pricingData }))\n        .then(response => {\n          if (response.meta.requestStatus !== 'fulfilled' || response.payload.status !== 200) {\n            success = false;\n          }\n      \n        });\n      \n    });\n// after succesfully hitting put api after reload then  i want this  if\n    if (success) {\n      setBulkModifySuccess(true);\n    \n    }\n    \n    setModalVisible(false);\n  };\n\n  // Function to navigate to Google\n  const navigatetogoogle = () => {\n    window.open('https://promodeagro.com/', '_blank');\n  };\n\n  return (\n    <ContentLayout\n      breadcrumbs={\n        <BreadcrumbGroup\n          items={[\n            { text: \"Dashboard\", href: \"/app/dashboard\" },\n            { text: \"Products\", href: \"/app/dashboard/products\" }\n          ]}\n          ariaLabel=\"Breadcrumbs\"\n        />\n      }\n      headerVariant=\"high-contrast\"\n      header={\n        <Header\n          actions={\n            <SpaceBetween alignItems=\"center\" direction=\"horizontal\" size=\"xs\">\n              <Button variant=\"normal\">Export</Button>\n            </SpaceBetween>\n          }\n          variant=\"h1\"\n        >\n          Products\n        </Header>\n      }\n    >\n      <SpaceBetween direction=\"vertical\" size=\"s\">\n        <Container>\n          <ColumnLayout columns={5} variant=\"default\" minColumnWidth={170}>\n            <div>\n              <Box variant=\"awsui-key-label\">\n                <p style={{ fontSize: 12 }}>Total Published Products</p>\n              </Box>\n              <span style={{ fontSize: 36, fontWeight: '900', lineHeight: 1.3, color: \"#0972D3\" }}>123</span>\n            </div>\n            <div>\n              <Box variant=\"awsui-key-label\">\n                <p style={{ fontSize: 12 }}>Total Stock</p>\n              </Box>\n              <span style={{ fontSize: 36, fontWeight: '900', lineHeight: 1.3, color: \"#0972D3\" }}>₹436K</span>\n            </div>\n            <div>\n              <Box variant=\"awsui-key-label\">\n                <p style={{ fontSize: 12 }}>Total Orders</p>\n              </Box>\n              <span style={{ fontSize: 36, fontWeight: '900', lineHeight: 1.3, color: \"#0972D3\" }}>123</span>\n            </div>\n            <div>\n              <Box variant=\"awsui-key-label\">\n                <p style={{ fontSize: 12 }}>Net Profit</p>\n              </Box>\n              <span style={{ fontSize: 36, fontWeight: '900', lineHeight: 1.3, color: \"#0972D3\" }}>1238K</span>\n            </div>\n            <div>\n              <Box variant=\"awsui-key-label\">\n                <p style={{ fontSize: 12 }}>Stopped Products</p>\n              </Box>\n              <span style={{ fontSize: 36, fontWeight: '900', lineHeight: 1.3, color: \"#0972D3\" }}>12</span>\n            </div>\n          </ColumnLayout>\n        </Container>\n\n        <div>\n        \n          <Table\n          header={\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            <div style={{ display: \"flex\", gap: \"1rem\" }}>\n            <div style={{ width:\"390px\" }}>\n              <TextFilter\n                filteringPlaceholder=\"Search\"\n                filteringText={filteringText}\n                onChange={handleSearchChange}\n              />\n              </div>\n              <div style={{ width:\"140px\"}}>\n              <Select\n                options={selectOptions}\n                selectedOption={selectOptions.find(\n                  (option) => option.value === selectedCategory\n                )}\n                onChange={handleSelectChange}\n                placeholder=\"Select Category\"\n              />\n              </div>\n            </div>\n            <div style={{ display: \"flex\", gap: \"1rem\" }}>\n            {isBulkModifySuccess ? (\n              <Button \n                variant='normal'\n                onClick={navigatetogoogle}\n              >\n                View Product Page\n              </Button>\n            ) : (\n              <Button \n                disabled={selectedItems.length === 0} \n                variant='normal'\n                onClick={handleBulkModifyPrice}\n              >\n                Bulk Modify Price\n              </Button>\n            )}\n            <Pagination currentPageIndex={currentPage - 1} onChange={handlePageChange} pagesCount={Math.ceil(filteredProducts.length / productsPerPage)} />\n            \n           </div>\n          </div>\n            \n          }\n            variant='borderless'\n            columnDefinitions={[\n              {\n                id: 'code',\n                header: 'Item Code',\n                cell: item => <Link to={`/app/products/${item.id}`}>{item.itemCode}</Link>,\n              },\n              {\n                id: 'name',\n                header: 'Name',\n                cell: item => (\n                  <div style={{ display: 'flex', alignItems: 'center' }}>\n                    <img src={item?.images[0]} alt={item.name} height={35} width={35} style={{ borderRadius: '8px', marginRight: '10px' }} />\n                    <p style={{ width:\"50px\"}}>{item.name}</p>\n                  </div>\n                ),\n              },\n              {\n                id: 'stock',\n                header: 'On Hand Stock',\n                cell: item => <Box textAlign='center'>{item?.stockQuantity}</Box>\n              },\n              {\n                id: 'alert',\n                header: 'Stock Alert',\n                cell: item => (\n                  <div style={getStockAlertStyle(item?.stockAlert)}>\n                    Available\n                  </div>\n                ),\n              },\n              {\n                id: 'onlineStorePrice',\n                header: 'OSP',\n                cell: item => (\n                  <div style={{width:\"80px\"}}>\n                  <Input\n                        type='text'               \n                    value={\n                      editedProducts[item.id]?.onlineStorePrice ?? item.onlineStorePrice\n                    }\n                    onChange={e => handleInputChange(item.id, 'onlineStorePrice', e.detail.value)}\n                  />\n                  </div>\n                )\n              },\n              {\n                id: 'compareAt',\n                header: 'CP',\n                cell: item => (\n                  <div style={{width:\"80px\"}}>\n                  <Input\n                   type='text'\n             \n                    value={\n                      editedProducts[item.id]?.compareAt ?? item.compareAt\n                    }\n                    onChange={e => handleInputChange(item.id, 'compareAt', e.detail.value)}\n                  />\n                  </div>\n                )\n              },\n              {\n                id: 'status',\n                header: 'Status',\n                cell: item => (\n                  <Toggle\n                    onChange={() => handleToggleChange(item)}\n                    checked={item.active}\n                  >\n                    {item.active ? 'Active' : 'Inactive'}\n                  </Toggle>\n                ),\n              },\n            ]}\n            items={currentProducts}\n            selectionType=\"multi\"\n            selectedItems={selectedItems}\n            onSelectionChange={handleSelectionChange}\n           \n          />\n        </div>\n      </SpaceBetween>\n\n      {/* Modal for confirming bulk modify price */}\n      {isModalVisible && (\n        <Modal\n        size='medium'\n          onDismiss={() => setModalVisible(false)}\n          visible={isModalVisible}\n          header=\"Confirm Bulk Modify Price\"\n          footer={\n            <Box float=\"right\">\n              <SpaceBetween direction=\"horizontal\" size=\"xs\">\n                <Button variant=\"link\" onClick={() => setModalVisible(false)}>Cancel</Button>\n                <Button variant=\"primary\" onClick={confirmBulkModifyPrice}>Confirm</Button>\n              </SpaceBetween>\n            </Box>\n          }\n        >\n          Are you sure you want to update the prices ? This Changes will be reflect in the Online Store\n        </Modal>\n      )}\n    </ContentLayout>\n  );\n};\n\nexport default Products;\n"],"names":["Products","dispatch","useDispatch","products","useSelector","state","data","activeButton","setActiveButton","useState","selectedItems","setSelectedItems","currentPage","setCurrentPage","filteringText","setFilteringText","selectedCategory","setSelectedCategory","editedProducts","setEditedProducts","isModalVisible","setModalVisible","isBulkModifySuccess","setBulkModifySuccess","useEffect","fetchProducts","handleInputChange","id","field","value","prev","getStockAlertStyle","stockAlert","color","filteredProducts","filter","item","matchesStatus","active","matchesSearch","itemCode","toLowerCase","includes","name","matchesCategory","category","indexOfLastProduct","indexOfFirstProduct","currentProducts","slice","selectOptions","label","_jsxs","ContentLayout","breadcrumbs","_jsx","BreadcrumbGroup","items","text","href","ariaLabel","headerVariant","header","Header","actions","SpaceBetween","alignItems","direction","size","children","Button","variant","Container","ColumnLayout","columns","minColumnWidth","Box","style","fontSize","fontWeight","lineHeight","Table","display","justifyContent","gap","width","TextFilter","filteringPlaceholder","onChange","e","detail","Select","options","selectedOption","find","option","_ref","placeholder","onClick","navigatetogoogle","window","open","disabled","length","handleBulkModifyPrice","Pagination","currentPageIndex","pageIndex","pagesCount","Math","ceil","columnDefinitions","cell","Link","to","concat","src","images","alt","height","borderRadius","marginRight","textAlign","stockQuantity","_editedProducts$item$3","_editedProducts$item$4","Input","type","onlineStorePrice","_editedProducts$item$5","_editedProducts$item$6","compareAt","Toggle","newStatus","PutToggle","then","response","meta","requestStatus","payload","status","handleToggleChange","checked","selectionType","onSelectionChange","_ref2","Modal","onDismiss","visible","footer","float","confirmBulkModifyPrice","success","forEach","_editedProducts$item$","_editedProducts$item$2","pricingData","putPricingById"],"sourceRoot":""}