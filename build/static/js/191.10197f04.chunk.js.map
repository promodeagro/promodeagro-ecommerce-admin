{"version":3,"file":"static/js/191.10197f04.chunk.js","mappings":"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","sources":["Utils/helperFunctions.js","Views/Postlogin/Customers/AddNewCustomer/index.js"],"sourcesContent":["import { Box, CircularProgress } from \"@mui/material\";\nimport { toast } from \"react-toastify\";\nexport const ValidationEngine = {\n  EMAIL_REGEX: /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/,\n  PASSWORD_REGEX: /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/,\n  MOBILE_NUMBER_REGEX: /^\\d{10}$/,\n  NUMBER_ONLY_REGEX: /^[0-9]+$/,\n  DECIMAL_ALLOW_REGEX: /^\\d*\\.?\\d*$/,\n  ONLY_TWO_DECIMAL_ALLOW_REGEX: /^(?:\\d*\\.\\d{1,2}|\\d+)$/,\n  type: {\n    MANDATORY: 0,\n    REGEX: 1,\n    CHARACTERCOUNT: 2,\n  },\n  validate: (validationJSON, data) => {\n    function validateMandatory(validationObject, value) {\n      if (!value || value === '') {\n        return {\n          isValid: false,\n          error: {\n            isValid: false,\n            message: validationObject.message,\n          },\n        };\n      }\n      return {\n        isValid: true,\n        error: {\n          isValid: true,\n          message: \"\",\n        },\n      };\n    }\n\n    function validateCharacterCount(validationObject, value) {\n      if (value && value.length !== validationObject.CharacterCout) {\n        return {\n          isValid: false,\n          error: {\n            isValid: false,\n            message: validationObject.message,\n          },\n        };\n      }\n      return {\n        isValid: true,\n        error: {\n          isValid: true,\n          message: \"\",\n        },\n      };\n    }\n\n    function validateRegex(validationObject, value) {\n      if (validationObject.regex && !validationObject.regex.test(value)) {\n        return {\n          isValid: false,\n          error: {\n            isValid: false,\n            message: validationObject.message,\n          },\n        };\n      }\n      return {\n        isValid: true,\n        error: {\n          isValid: true,\n          message: \"\",\n        },\n      };\n    }\n\n    const keys = Object.keys(data);\n    const errors = {};\n    let isValid = true;\n    let errorObj;\n    keys.forEach((key) => {\n      const validationArray = validationJSON[key];\n      const value = data[key];\n      for (const validationObj of validationArray) {\n        if (validationObj.type === ValidationEngine.type.MANDATORY) {\n          errorObj = validateMandatory(validationObj, value);\n        } else if (\n          validationObj.type === ValidationEngine.type.CHARACTERCOUNT\n        ) {\n          errorObj = validateCharacterCount(validationObj, value);\n        } else if (validationObj.type === ValidationEngine.type.REGEX) {\n          errorObj = validateRegex(validationObj, value);\n        }\n        errors[key] = errorObj.error;\n        isValid = isValid && errorObj.isValid;\n        if (!errorObj.isValid) {\n          break;\n        }\n      }\n    });\n    errors.isValid = isValid;\n    return errors;\n  },\n};\n\nexport const ErrorMessages = {\n  error: (message) =>\n    toast.error(message, {\n      position: \"top-right\",\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: \"colored\",\n    }),\n  success: (message) =>\n    toast.success(message, {\n      position: \"top-right\",\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: \"colored\",\n    }),\n  info: (message) =>\n    toast.info(message, {\n      position: \"top-right\",\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: \"colored\",\n    }),\n};\nexport const Loader = {\n  commonLoader() {\n    return (\n      <Box className=\"d-flex align-items-center justify-content-center common-loader\">\n        <CircularProgress />\n      </Box>\n    );\n  },\n};\n\nexport const pathFile = {\n  dashboards: \"DashBoard\",\n};\n","import React, { Component } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Button from \"@mui/material/Button\";\nimport { ValidationEngine } from \"Utils/helperFunctions\";\n\nconst validationSchema = {\n  customerName: [\n    {\n      message: \"Please enter customer name\",\n      type: ValidationEngine.type.MANDATORY,\n    },\n  ],\n  companyName: [\n    {\n      message: \"Please enter company name\",\n      type: ValidationEngine.type.MANDATORY,\n    },\n  ],\n  companyAbbreviation: [\n    {\n      message: \"Please enter company cbbreviation\",\n      type: ValidationEngine.type.MANDATORY,\n    },\n  ],\n  phone: [\n    {\n      message: \"Please enter phone number\",\n      type: ValidationEngine.type.MANDATORY,\n    },\n    {\n      message: \"Please enter valid phone number\",\n      type: ValidationEngine.type.REGEX,\n      regex: ValidationEngine.MOBILE_NUMBER_REGEX,\n    },\n  ],\n  email: [\n    {\n      message: \"Please enter email\",\n      type: ValidationEngine.type.MANDATORY,\n    },\n    {\n      message: \"Please enter valid email\",\n      type: ValidationEngine.type.REGEX,\n      regex: ValidationEngine.EMAIL_REGEX,\n    },\n  ],\n  address: [\n    {\n      message: \"Please enter contact person\",\n      type: ValidationEngine.type.MANDATORY,\n    },\n  ],\n  city: [\n    {\n      message: \"Please enter contact person\",\n      type: ValidationEngine.type.MANDATORY,\n    },\n  ],\n  postalCode: [\n    {\n      message: \"Please enter contact person\",\n      type: ValidationEngine.type.MANDATORY,\n    },\n  ],\n  country: [\n    {\n      message: \"Please enter contact person\",\n      type: ValidationEngine.type.MANDATORY,\n    },\n  ],\n};\n\nclass AddNewCustomer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      customerName: \"\",\n      companyName: \"\",\n      companyAbbreviation: \"\",\n      phone: \"\",\n      email: \"\",\n      address: \"\",\n      city: \"\",\n      postalCode: \"\",\n      country: \"\",\n      isSubmitted: false,\n    };\n  }\n\n  handleChange = (event) => {\n    const { name, value, type, checked } = event.target;\n    const val = type === \"checkbox\" ? checked : value;\n    this.setState({ [name]: val });\n  };\n\n  validateForm = () => {\n    const {\n      customerName,\n      companyName,\n      companyAbbreviation,\n      phone,\n      email,\n      address,\n      city,\n      postalCode,\n      country,\n    } = this.state;\n    const error = ValidationEngine.validate(validationSchema, {\n      customerName,\n      companyName,\n      companyAbbreviation,\n      phone,\n      email,\n      address,\n      city,\n      postalCode,\n      country,\n    });\n    return error;\n  };\n\n  handleSubmit = () => {\n    const errorData = this.validateForm();\n    this.setState({\n      isSubmitted: true,\n    });\n    if (errorData.isValid) {\n    }\n  };\n\n  render() {\n    const errorData = this.validateForm();\n    const {\n      customerName,\n      companyName,\n      companyAbbreviation,\n      phone,\n      email,\n      address,\n      city,\n      postalCode,\n      country,\n      isSubmitted,\n    } = this.state;\n\n    return (\n      <div className=\"main-container\">\n        <div className=\"add-new-container\">\n          <div className=\"heading\">\n            <h2>Add New Customer</h2>\n          </div>\n          <div className=\"add-new-form-container\">\n            <Grid container spacing={2}>\n              <Grid item xs={6}>\n                <Box className=\"form-text-field\">\n                  <label>Enter Customer Name</label>\n                  <TextField\n                    name=\"customerName\"\n                    value={customerName}\n                    onChange={this.handleChange}\n                    className=\"text-field\"\n                    error={!errorData.customerName.isValid && isSubmitted}\n                    helperText={isSubmitted ? errorData.customerName.message : \"\"}\n                    defaultValue={customerName}\n                    placeholder=\"Brain MD\"\n                  />\n                </Box>\n              </Grid>\n              <Grid item xs={6}>\n                <Box className=\"form-text-field\">\n                  <label>Enter Company Name</label>\n                  <TextField\n                    name=\"companyName\"\n                    value={companyName}\n                    onChange={this.handleChange}\n                    className=\"text-field\"\n                    error={!errorData.companyName.isValid && isSubmitted}\n                    helperText={\n                      isSubmitted ? errorData.companyName.message : \"\"\n                    }\n                    defaultValue={companyName}\n                    placeholder=\"Brain MD\"\n                  />\n                </Box>\n              </Grid>\n              <Grid item xs={6}>\n                <Box className=\"form-text-field\">\n                  <label>Company Abbreviation</label>\n                  <TextField\n                    name=\"companyAbbreviation\"\n                    value={companyAbbreviation}\n                    onChange={this.handleChange}\n                    className=\"text-field\"\n                    error={!errorData.companyAbbreviation.isValid && isSubmitted}\n                    helperText={\n                      isSubmitted ? errorData.companyAbbreviation.message : \"\"\n                    }\n                    defaultValue={companyAbbreviation}\n                    placeholder=\"ABC-123456-12\"\n                  />\n                </Box>\n              </Grid>\n              <Grid item xs={6}>\n                <Box className=\"form-text-field\">\n                  <label>Enter Phone</label>\n                  <TextField\n                    type=\"number\"\n                    name=\"phone\"\n                    value={phone}\n                    onChange={this.handleChange}\n                    className=\"text-field\"\n                    error={!errorData.phone.isValid && isSubmitted}\n                    helperText={isSubmitted ? errorData.phone.message : \"\"}\n                    defaultValue={phone}\n                    placeholder=\"+1 (123)-456-789\"\n                  />\n                </Box>\n              </Grid>\n              <Grid item xs={6}>\n                <Box className=\"form-text-field\">\n                  <label>Enter Email</label>\n                  <TextField\n                    name=\"email\"\n                    value={email}\n                    onChange={this.handleChange}\n                    className=\"text-field\"\n                    error={!errorData.email.isValid && isSubmitted}\n                    helperText={isSubmitted ? errorData.email.message : \"\"}\n                    defaultValue={email}\n                    placeholder=\"info@brainmd.com\"\n                  />\n                </Box>\n              </Grid>\n              <Grid item xs={6}>\n                <Box className=\"form-text-field\">\n                  <label>Enter Address</label>\n                  <TextField\n                    name=\"address\"\n                    value={address}\n                    onChange={this.handleChange}\n                    className=\"text-field\"\n                    error={!errorData.address.isValid && isSubmitted}\n                    helperText={isSubmitted ? errorData.address.message : \"\"}\n                    defaultValue={address}\n                    placeholder=\"1234 Stm El\"\n                  />\n                </Box>\n              </Grid>\n              <Grid item xs={6}>\n                <Box className=\"form-text-field\">\n                  <label>Enter City</label>\n                  <TextField\n                    select\n                    name=\"city\"\n                    value={city}\n                    onChange={this.handleChange}\n                    className=\"text-field\"\n                    error={!errorData.city.isValid && isSubmitted}\n                    helperText={isSubmitted ? errorData.city.message : \"\"}\n                    defaultValue={city}\n                    placeholder=\"Select City\"\n                  >\n                    <MenuItem value=\"City1\">City1</MenuItem>\n                    <MenuItem value=\"City2\">City2</MenuItem>\n                    <MenuItem value=\"City3\">City3</MenuItem>\n                  </TextField>\n                </Box>\n              </Grid>\n              <Grid item xs={6}>\n                <Box className=\"form-text-field\">\n                  <label>Enter Postal Code</label>\n                  <TextField\n                    select\n                    name=\"postalCode\"\n                    value={postalCode}\n                    onChange={this.handleChange}\n                    className=\"text-field\"\n                    error={!errorData.postalCode.isValid && isSubmitted}\n                    helperText={isSubmitted ? errorData.postalCode.message : \"\"}\n                    defaultValue={postalCode}\n                    placeholder=\"Select State\"\n                  >\n                    <MenuItem value=\"Postal1\">Postal1</MenuItem>\n                    <MenuItem value=\"Postal2\">Postal2</MenuItem>\n                    <MenuItem value=\"Postal3\">Postal3</MenuItem>\n                  </TextField>\n                </Box>\n              </Grid>\n              <Grid item xs={6}>\n                <Box className=\"form-text-field\">\n                  <label>Enter Country</label>\n                  <TextField\n                    select\n                    name=\"country\"\n                    value={country}\n                    onChange={this.handleChange}\n                    className=\"text-field\"\n                    error={!errorData.country.isValid && isSubmitted}\n                    helperText={isSubmitted ? errorData.country.message : \"\"}\n                    defaultValue={country}\n                    placeholder=\"Select Country\"\n                  >\n                    <MenuItem value=\"Country1\">Country1</MenuItem>\n                    <MenuItem value=\"Country2\">Country2</MenuItem>\n                    <MenuItem value=\"Country3\">Country3</MenuItem>\n                  </TextField>\n                </Box>\n              </Grid>\n            </Grid>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <div className=\"add-new-form-btn\">\n                  <Button className=\"btn-outline-secondary\" variant=\"outlined\">\n                    Cancel\n                  </Button>\n                  <Button\n                    className=\"primary-btn\"\n                    variant=\"contained\"\n                    onClick={this.handleSubmit}\n                  >\n                    Save\n                  </Button>\n                </div>\n              </Grid>\n            </Grid>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddNewCustomer;\n"],"names":["ValidationEngine","EMAIL_REGEX","PASSWORD_REGEX","MOBILE_NUMBER_REGEX","NUMBER_ONLY_REGEX","DECIMAL_ALLOW_REGEX","ONLY_TWO_DECIMAL_ALLOW_REGEX","type","MANDATORY","REGEX","CHARACTERCOUNT","validate","validationJSON","data","validateMandatory","validationObject","value","isValid","error","message","validateCharacterCount","length","CharacterCout","validateRegex","regex","test","keys","Object","errors","errorObj","forEach","key","validationArray","validationObj","validationSchema","customerName","companyName","companyAbbreviation","phone","email","address","city","postalCode","country","AddNewCustomer","Component","constructor","props","super","handleChange","event","name","checked","target","val","this","setState","validateForm","state","handleSubmit","errorData","isSubmitted","render","_jsx","className","children","_jsxs","Grid","container","spacing","item","xs","Box","TextField","onChange","helperText","defaultValue","placeholder","select","MenuItem","Button","variant","onClick"],"sourceRoot":""}