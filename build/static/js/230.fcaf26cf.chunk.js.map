{"version":3,"file":"static/js/230.fcaf26cf.chunk.js","mappings":"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","sources":["Views/Postlogin/Products/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Box,\n  Button,\n  ButtonDropdown,\n  ColumnLayout,\n  Container,\n  Header,\n  SpaceBetween,\n  ContentLayout,\n  Table\n} from '@cloudscape-design/components';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from 'react-router-dom';\nimport { fetchProducts } from 'Redux-Store/Products/ProductThunk';\n\n\n\n\n\nconst Products = () => {\n  const dispatch = useDispatch();\n  const prod = useSelector((state) => state.products.products);\n  console.log(prod,\"proddd\");\n  const [activeButton, setActiveButton] = useState('All');\n  const [products, setProducts] = useState(prod.data?.products || []);\n  useEffect(() => {\n    dispatch(fetchProducts());\n  }, [dispatch]);\n\n  useEffect(() => {\n    setProducts(prod.data?.products || []);\n  }, [prod]);\n  console.log(prod,\"proo\");\n\n  const buttons = ['All', 'Unpublished', 'Stopped', 'Published'];\n\n  const handleButtonClick = (button) => {\n    setActiveButton(button);\n  };\n\n\n  const getStatusStyle = (status) => {\n    switch (status) {\n      case 'Unpublished':\n        return { backgroundColor: 'gray', color: 'white', padding: '2px 5px', borderRadius: '4px' };\n      case 'Published':\n        return { backgroundColor: 'green', color: 'white', padding: '2px 5px', borderRadius: '4px' };\n      case 'Stopped':\n        return { backgroundColor: 'red', color: 'white', padding: '2px 5px', borderRadius: '4px' };\n      default:\n        return {};\n    }\n  };\n\n  const getStockAlertStyle = (stockAlert) => {\n    switch (stockAlert) {\n      case 'Low':\n        return { color: 'red' };\n      case 'Available':\n        return { color: 'blue' };\n      default:\n        return {};\n    }\n  };\n\n  const filteredProducts = activeButton === 'All' ? products : products.filter(product => product.status === activeButton);\n\n  return (\n    <ContentLayout\n      headerVariant=\"high-contrast\"\n      header={\n        <Header\n          actions={\n            <SpaceBetween alignItems=\"center\" direction=\"horizontal\" size=\"xs\">\n              <Button variant=\"normal\">Export</Button>\n            </SpaceBetween>\n          }\n          variant=\"h1\"\n        >\n          Products\n        </Header>\n      }\n    >\n      <SpaceBetween direction=\"vertical\" size=\"s\">\n        <Container className=\"top-container\" style={{ marginBottom: '1rem' }}>\n          <ColumnLayout columns={5} variant=\"default\" minColumnWidth={170}>\n            <div>\n\n              <Box variant=\"awsui-key-label\">\n                <p style={{ fontSize: 12 }}>Total Published Products</p>\n              </Box>\n              <span style={{ fontSize: 36, fontWeight: '900', lineHeight: 1.3, color: \"#0972D3\" }}>â‚¹436K</span>\n            </div>\n            <div>\n              <Box variant=\"awsui-key-label\">\n                <p style={{ fontSize: 12 }}>Total Stock</p>\n              </Box>\n              <span style={{ fontSize: 36, fontWeight: '900', lineHeight: 1.3, color: \"#0972D3\" }}>430</span>\n            </div>\n            <div>\n              <Box variant=\"awsui-key-label\">\n                <p style={{ fontSize: 12 }}>Total Orders</p>\n              </Box>\n              <span style={{ fontSize: 36, fontWeight: '900', lineHeight: 1.3, color: \"#0972D3\" }}>123</span>\n            </div>\n            <div>\n              <Box variant=\"awsui-key-label\">\n                <p style={{ fontSize: 12 }}>Net Profit</p>\n              </Box>\n              <span style={{ fontSize: 36, fontWeight: '900', lineHeight: 1.3, color: \"#0972D3\" }}>128</span>\n            </div>\n            <div>\n              <Box variant=\"awsui-key-label\">\n                <p style={{ fontSize: 12 }}>Stopped Products</p>\n              </Box>\n\n              <span style={{ fontSize: 36, fontWeight: '900', lineHeight: 1.3, color: \"#0972D3\" }}>128</span>\n            </div>\n          </ColumnLayout>\n        </Container>\n\n        <div>\n          <div style={{ display: \"flex\", gap: \"10px\", marginBottom: \"20px\" }}>\n            {buttons.map((button) => (\n              <button\n                key={button}\n                onClick={() => handleButtonClick(button)}\n                style={{\n                  border: activeButton === button ? '2px solid black' : 'none',\n                  color: activeButton === button ? 'black' : 'gray',\n                  backgroundColor: 'white',\n                  fontWeight: activeButton === button ? 'bolder' : 'normal',\n                  padding: '8px 16px',\n                  cursor: 'pointer',\n                  borderRadius: \"32px\"\n                }}\n              >\n                {button}\n              </button>\n            ))}\n          </div>\n          <Table\n            variant='borderless'\n            columnDefinitions={[\n              {\n                id: 'code',\n                header: 'Item Code',\n                cell: item => <Link to={`/app/products/${item.code}`}>{item.code}</Link>,\n              },\n              {\n                id: 'name',\n                header: 'Name',\n                cell: item => (\n                  <div style={{ display: 'flex', alignItems: 'center' }}>\n                    <img src={item.imageUrl} alt={item.name} height={35} width={35} style={{ borderRadius: '8px', marginRight: '10px' }} />\n                    {item.name}\n                  </div>\n                ),\n              },\n              {\n                id: 'status',\n                header: 'Status',\n                cell: item => <span style={getStatusStyle(item.status)}>{item.status}</span>,\n                sortingField: \"status\"\n              },\n              {\n                id: 'Category',\n                header: 'Category',\n                cell: item => item.category,\n                sortingField: \"category\"\n              },\n              {\n                id: 'allocatedStock',\n                header: 'Allocated Stock',\n                cell: item => item.allocatedStock,\n                sortingField: \"allocatedStock\"\n              },\n              {\n                id: 'stockAlert',\n                header: 'Stock Alert',\n                cell: item => <span style={getStockAlertStyle(item.stockAlert)}>{item.stockAlert}</span>,\n                sortingField: \"stockAlert\"\n              },\n            \n            \n            \n            ]}\n            items={filteredProducts}\n            selectionType=\"multi\"\n          />\n        </div>\n      </SpaceBetween>\n    </ContentLayout>\n  );\n}\n\nexport default Products;\n"],"names":["Products","_prod$data","dispatch","useDispatch","prod","useSelector","state","products","console","log","activeButton","setActiveButton","useState","setProducts","data","useEffect","fetchProducts","_prod$data2","getStatusStyle","status","backgroundColor","color","padding","borderRadius","getStockAlertStyle","stockAlert","filteredProducts","filter","product","_jsx","ContentLayout","headerVariant","header","Header","actions","SpaceBetween","alignItems","direction","size","children","Button","variant","_jsxs","Container","className","style","marginBottom","ColumnLayout","columns","minColumnWidth","Box","fontSize","fontWeight","lineHeight","display","gap","map","button","onClick","handleButtonClick","border","cursor","Table","columnDefinitions","id","cell","item","Link","to","concat","code","src","imageUrl","alt","name","height","width","marginRight","sortingField","category","allocatedStock","items","selectionType"],"sourceRoot":""}